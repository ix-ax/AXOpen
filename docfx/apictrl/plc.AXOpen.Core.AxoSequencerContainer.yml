## YamlMime:ManagedReference
items:
- uid: plc.AXOpen.Core.AxoSequencerContainer
  id: plc.AXOpen.Core.AxoSequencerContainer
  parent: plc.AXOpen.Core
  children:
  - plc.AXOpen.Core.AxoSequencerContainer.Run(IAxoContext)
  - plc.AXOpen.Core.AxoSequencerContainer.Run(IAxoObject)
  - plc.AXOpen.Core.AxoSequencerContainer.Main()
  name: AxoSequencerContainer
  fullName: AxoSequencerContainer
  type: Class
  source:
    remote:
      path: .\src\core\ctrl\src\AxoCoordination\AxoSequencer\AxoSequencerContainer.st
      branch: 293-Festo_CMMT-AS_class_not_derived_from_AxoDrive_just_point_to_point_movements
      repo: https://github.com/ix-ax/AXOpen.git
    id: plc.AXOpen.Core.AxoSequencerContainer
    path: .\src\core\ctrl\src\AxoCoordination\AxoSequencer\AxoSequencerContainer.st
    startLine: 1
  namespace: plc.AXOpen.Core
  syntax:
    content: CLASS AxoSequencerContainer
  inheritance:
  - plc.AXOpen.Core.AxoSequencer
  - plc.AXOpen.Core.AxoTask
  - plc.AXOpen.Core.AxoObject
  inheritedMembers:
  - plc.AXOpen.Core.AxoSequencer.SteppingMode
  - plc.AXOpen.Core.AxoSequencer.SequenceMode
  - plc.AXOpen.Core.AxoSequencer.CurrentOrder
  - plc.AXOpen.Core.AxoSequencer.StepForwardCommand
  - plc.AXOpen.Core.AxoSequencer.StepIn
  - plc.AXOpen.Core.AxoSequencer.StepBackwardCommand
  - plc.AXOpen.Core.AxoSequencer.BeforeStep
  - plc.AXOpen.Core.AxoSequencer.CurrentStep
  - plc.AXOpen.Core.AxoSequencer.AfterStep
  - plc.AXOpen.Core.AxoTask.Status
  - plc.AXOpen.Core.AxoTask.IsDisabled
  - plc.AXOpen.Core.AxoTask.RemoteInvoke
  - plc.AXOpen.Core.AxoTask.RemoteRestore
  - plc.AXOpen.Core.AxoTask.RemoteAbort
  - plc.AXOpen.Core.AxoTask.RemoteResume
  - plc.AXOpen.Core.AxoTask.StartSignature
  - plc.AXOpen.Core.AxoTask.Duration
  - plc.AXOpen.Core.AxoTask.StartTimeStamp
  - plc.AXOpen.Core.AxoTask.ErrorDetails
  - plc.AXOpen.Core.AxoObject.Identity
  - plc.AXOpen.Core.AxoSequencer.Open()
  - plc.AXOpen.Core.AxoSequencer.Execute(IAxoStep,BOOL)
  - plc.AXOpen.Core.AxoSequencer.MoveNext()
  - plc.AXOpen.Core.AxoSequencer.RequestStep(IAxoStep)
  - plc.AXOpen.Core.AxoSequencer.CompleteSequence()
  - plc.AXOpen.Core.AxoSequencer.OnBeforeSequenceStart()
  - plc.AXOpen.Core.AxoSequencer.OnCompleteSequence()
  - plc.AXOpen.Core.AxoSequencer.GetCoordinatorState()
  - plc.AXOpen.Core.AxoSequencer.DetermineOrder(IAxoStep)
  - plc.AXOpen.Core.AxoSequencer.GetNumberOfConfiguredSteps()
  - plc.AXOpen.Core.AxoSequencer.DisableAllSteppingComands()
  - plc.AXOpen.Core.AxoSequencer.AbortCurrentStep()
  - plc.AXOpen.Core.AxoSequencer.OnRestore()
  - plc.AXOpen.Core.AxoSequencer.GetMicroStepValue()
  - plc.AXOpen.Core.AxoSequencer.SetMicroStepValue(UINT)
  - plc.AXOpen.Core.AxoSequencer.AndThen(IAxoTask)
  - plc.AXOpen.Core.AxoSequencer.Close()
  - plc.AXOpen.Core.AxoTask.GetState()
  - plc.AXOpen.Core.AxoTask.GetErrorDetails()
  - plc.AXOpen.Core.AxoTask.IsReady()
  - plc.AXOpen.Core.AxoTask.IsDone()
  - plc.AXOpen.Core.AxoTask.IsBusy()
  - plc.AXOpen.Core.AxoTask.IsAborted()
  - plc.AXOpen.Core.AxoTask.HasError()
  - plc.AXOpen.Core.AxoTask.IsFirstExecutionCycle()
  - plc.AXOpen.Core.AxoTask.SetSuspendMultipleExecuteCallCheck(BOOL)
  - plc.AXOpen.Core.AxoTask.GetSuspendMultipleExecuteCallCheckState()
  - plc.AXOpen.Core.AxoTask.IsNewInvokeCall()
  - plc.AXOpen.Core.AxoTask.IsNewExecuteCall()
  - plc.AXOpen.Core.AxoTask.IsExecuteCalledInThisPlcCycle()
  - plc.AXOpen.Core.AxoTask.WasExecuteCalledInPreviousPlcCycle()
  - plc.AXOpen.Core.AxoTask.UpdateState()
  - plc.AXOpen.Core.AxoTask.Invoke()
  - plc.AXOpen.Core.AxoTask.Restore()
  - plc.AXOpen.Core.AxoTask.DoneWhen(BOOL)
  - plc.AXOpen.Core.AxoTask.Execute()
  - plc.AXOpen.Core.AxoTask.LogTask(STRING[80],eLogLevel,IAxoObject)
  - plc.AXOpen.Core.AxoTask.ThrowWhen(BOOL)
  - plc.AXOpen.Core.AxoTask.ThrowWhen(BOOL,STRING[254])
  - plc.AXOpen.Core.AxoTask.SetIsDisabled(BOOL)
  - plc.AXOpen.Core.AxoTask.GetIsDisabled()
  - plc.AXOpen.Core.AxoTask.Abort()
  - plc.AXOpen.Core.AxoTask.Resume()
  - plc.AXOpen.Core.AxoTask.SetRemoteRestoreEnabled(BOOL)
  - plc.AXOpen.Core.AxoTask.GetRemoteRestoreEnabled()
  - plc.AXOpen.Core.AxoTask.SetRemoteAbortEnabled(BOOL)
  - plc.AXOpen.Core.AxoTask.GetRemoteAbortEnabled()
  - plc.AXOpen.Core.AxoTask.OnAbort()
  - plc.AXOpen.Core.AxoTask.OnResume()
  - plc.AXOpen.Core.AxoTask.OnDone()
  - plc.AXOpen.Core.AxoTask.OnError()
  - plc.AXOpen.Core.AxoTask.OnRestore()
  - plc.AXOpen.Core.AxoTask.OnStart()
  - plc.AXOpen.Core.AxoTask.WhileError()
  - plc.AXOpen.Core.AxoTask.AbortTriggered()
  - plc.AXOpen.Core.AxoTask.ResumeTriggered()
  - plc.AXOpen.Core.AxoTask.DoneReached()
  - plc.AXOpen.Core.AxoTask.ErrorOccured()
  - plc.AXOpen.Core.AxoTask.RestoreTriggered()
  - plc.AXOpen.Core.AxoTask.StartTriggered()
  - plc.AXOpen.Core.AxoObject.GetIdentity()
  - plc.AXOpen.Core.AxoObject.GetContext()
  - plc.AXOpen.Core.AxoObject.GetContextUnsafe()
  - plc.AXOpen.Core.AxoObject.GetParent()
  - plc.AXOpen.Core.AxoObject.Initialize(IAxoObject)
  - plc.AXOpen.Core.AxoObject.Initialize(IAxoContext)
  implements:
  - plc.AXOpen.Core.IAxoSequencer
  - plc.AXOpen.Core.IAxoTask
  - plc.AXOpen.Core.IAxoTaskState
- uid: plc.AXOpen.Core.AxoSequencerContainer.Run(IAxoContext)
  id: plc.AXOpen.Core.AxoSequencerContainer.Run(IAxoContext)
  parent: AXOpen.Core.AxoSequencerContainer
  children: []
  name: Run
  fullName: Run
  type: Method
  source:
    remote:
      path: .\src\core\ctrl\src\AxoCoordination\AxoSequencer\AxoSequencerContainer.st
      branch: 293-Festo_CMMT-AS_class_not_derived_from_AxoDrive_just_point_to_point_movements
      repo: https://github.com/ix-ax/AXOpen.git
    id: plc.AXOpen.Core.AxoSequencerContainer.Run
    path: .\src\core\ctrl\src\AxoCoordination\AxoSequencer\AxoSequencerContainer.st
    startLine: 3
  namespace: plc.AXOpen.Core
  syntax:
    content: Public VOID Run(in plc.AXOpen.Core.IAxoContext context)
    parameters:
    - id: context
      type: plc.AXOpen.Core.IAxoContext
    return:
      type: VOID
- uid: plc.AXOpen.Core.AxoSequencerContainer.Run(IAxoObject)
  id: plc.AXOpen.Core.AxoSequencerContainer.Run(IAxoObject)
  parent: AXOpen.Core.AxoSequencerContainer
  children: []
  name: Run
  fullName: Run
  type: Method
  source:
    remote:
      path: .\src\core\ctrl\src\AxoCoordination\AxoSequencer\AxoSequencerContainer.st
      branch: 293-Festo_CMMT-AS_class_not_derived_from_AxoDrive_just_point_to_point_movements
      repo: https://github.com/ix-ax/AXOpen.git
    id: plc.AXOpen.Core.AxoSequencerContainer.Run
    path: .\src\core\ctrl\src\AxoCoordination\AxoSequencer\AxoSequencerContainer.st
    startLine: 14
  namespace: plc.AXOpen.Core
  syntax:
    content: Public VOID Run(in plc.AXOpen.Core.IAxoObject object)
    parameters:
    - id: object
      type: plc.AXOpen.Core.IAxoObject
    return:
      type: VOID
- uid: plc.AXOpen.Core.AxoSequencerContainer.Main()
  id: plc.AXOpen.Core.AxoSequencerContainer.Main()
  parent: AXOpen.Core.AxoSequencerContainer
  children: []
  name: Main
  fullName: Main
  type: Method
  source:
    remote:
      path: .\src\core\ctrl\src\AxoCoordination\AxoSequencer\AxoSequencerContainer.st
      branch: 293-Festo_CMMT-AS_class_not_derived_from_AxoDrive_just_point_to_point_movements
      repo: https://github.com/ix-ax/AXOpen.git
    id: plc.AXOpen.Core.AxoSequencerContainer.Main
    path: .\src\core\ctrl\src\AxoCoordination\AxoSequencer\AxoSequencerContainer.st
    startLine: 25
  namespace: plc.AXOpen.Core
  syntax:
    content: Protected VOID Main()
    parameters: []
    return:
      type: VOID
references:
- uid: plc.AXOpen.Core.AxoSequencer.SteppingMode
  commentId: plc.AXOpen.Core.AxoSequencer.SteppingMode
  name: SteppingMode
  nameWithType: SteppingMode
  fullName: plc.AXOpen.Core.AxoSequencer.SteppingMode
  parent: plc.AXOpen.Core.AxoSequencer.SteppingMode
- uid: plc.AXOpen.Core.AxoSequencer.SequenceMode
  commentId: plc.AXOpen.Core.AxoSequencer.SequenceMode
  name: SequenceMode
  nameWithType: SequenceMode
  fullName: plc.AXOpen.Core.AxoSequencer.SequenceMode
  parent: plc.AXOpen.Core.AxoSequencer.SequenceMode
- uid: plc.AXOpen.Core.AxoSequencer.CurrentOrder
  commentId: plc.AXOpen.Core.AxoSequencer.CurrentOrder
  name: CurrentOrder
  nameWithType: CurrentOrder
  fullName: plc.AXOpen.Core.AxoSequencer.CurrentOrder
  parent: plc.AXOpen.Core.AxoSequencer.CurrentOrder
- uid: plc.AXOpen.Core.AxoSequencer.StepForwardCommand
  commentId: plc.AXOpen.Core.AxoSequencer.StepForwardCommand
  name: StepForwardCommand
  nameWithType: StepForwardCommand
  fullName: plc.AXOpen.Core.AxoSequencer.StepForwardCommand
  parent: plc.AXOpen.Core.AxoSequencer.StepForwardCommand
- uid: plc.AXOpen.Core.AxoSequencer.StepIn
  commentId: plc.AXOpen.Core.AxoSequencer.StepIn
  name: StepIn
  nameWithType: StepIn
  fullName: plc.AXOpen.Core.AxoSequencer.StepIn
  parent: plc.AXOpen.Core.AxoSequencer.StepIn
- uid: plc.AXOpen.Core.AxoSequencer.StepBackwardCommand
  commentId: plc.AXOpen.Core.AxoSequencer.StepBackwardCommand
  name: StepBackwardCommand
  nameWithType: StepBackwardCommand
  fullName: plc.AXOpen.Core.AxoSequencer.StepBackwardCommand
  parent: plc.AXOpen.Core.AxoSequencer.StepBackwardCommand
- uid: plc.AXOpen.Core.AxoSequencer.BeforeStep
  commentId: plc.AXOpen.Core.AxoSequencer.BeforeStep
  name: BeforeStep
  nameWithType: BeforeStep
  fullName: plc.AXOpen.Core.AxoSequencer.BeforeStep
  parent: plc.AXOpen.Core.AxoSequencer.BeforeStep
- uid: plc.AXOpen.Core.AxoSequencer.CurrentStep
  commentId: plc.AXOpen.Core.AxoSequencer.CurrentStep
  name: CurrentStep
  nameWithType: CurrentStep
  fullName: plc.AXOpen.Core.AxoSequencer.CurrentStep
  parent: plc.AXOpen.Core.AxoSequencer.CurrentStep
- uid: plc.AXOpen.Core.AxoSequencer.AfterStep
  commentId: plc.AXOpen.Core.AxoSequencer.AfterStep
  name: AfterStep
  nameWithType: AfterStep
  fullName: plc.AXOpen.Core.AxoSequencer.AfterStep
  parent: plc.AXOpen.Core.AxoSequencer.AfterStep
- uid: plc.AXOpen.Core.AxoTask.Status
  commentId: plc.AXOpen.Core.AxoTask.Status
  name: Status
  nameWithType: Status
  fullName: plc.AXOpen.Core.AxoTask.Status
  parent: plc.AXOpen.Core.AxoTask.Status
- uid: plc.AXOpen.Core.AxoTask.IsDisabled
  commentId: plc.AXOpen.Core.AxoTask.IsDisabled
  name: IsDisabled
  nameWithType: IsDisabled
  fullName: plc.AXOpen.Core.AxoTask.IsDisabled
  parent: plc.AXOpen.Core.AxoTask.IsDisabled
- uid: plc.AXOpen.Core.AxoTask.RemoteInvoke
  commentId: plc.AXOpen.Core.AxoTask.RemoteInvoke
  name: RemoteInvoke
  nameWithType: RemoteInvoke
  fullName: plc.AXOpen.Core.AxoTask.RemoteInvoke
  parent: plc.AXOpen.Core.AxoTask.RemoteInvoke
- uid: plc.AXOpen.Core.AxoTask.RemoteRestore
  commentId: plc.AXOpen.Core.AxoTask.RemoteRestore
  name: RemoteRestore
  nameWithType: RemoteRestore
  fullName: plc.AXOpen.Core.AxoTask.RemoteRestore
  parent: plc.AXOpen.Core.AxoTask.RemoteRestore
- uid: plc.AXOpen.Core.AxoTask.RemoteAbort
  commentId: plc.AXOpen.Core.AxoTask.RemoteAbort
  name: RemoteAbort
  nameWithType: RemoteAbort
  fullName: plc.AXOpen.Core.AxoTask.RemoteAbort
  parent: plc.AXOpen.Core.AxoTask.RemoteAbort
- uid: plc.AXOpen.Core.AxoTask.RemoteResume
  commentId: plc.AXOpen.Core.AxoTask.RemoteResume
  name: RemoteResume
  nameWithType: RemoteResume
  fullName: plc.AXOpen.Core.AxoTask.RemoteResume
  parent: plc.AXOpen.Core.AxoTask.RemoteResume
- uid: plc.AXOpen.Core.AxoTask.StartSignature
  commentId: plc.AXOpen.Core.AxoTask.StartSignature
  name: StartSignature
  nameWithType: StartSignature
  fullName: plc.AXOpen.Core.AxoTask.StartSignature
  parent: plc.AXOpen.Core.AxoTask.StartSignature
- uid: plc.AXOpen.Core.AxoTask.Duration
  commentId: plc.AXOpen.Core.AxoTask.Duration
  name: Duration
  nameWithType: Duration
  fullName: plc.AXOpen.Core.AxoTask.Duration
  parent: plc.AXOpen.Core.AxoTask.Duration
- uid: plc.AXOpen.Core.AxoTask.StartTimeStamp
  commentId: plc.AXOpen.Core.AxoTask.StartTimeStamp
  name: StartTimeStamp
  nameWithType: StartTimeStamp
  fullName: plc.AXOpen.Core.AxoTask.StartTimeStamp
  parent: plc.AXOpen.Core.AxoTask.StartTimeStamp
- uid: plc.AXOpen.Core.AxoTask.ErrorDetails
  commentId: plc.AXOpen.Core.AxoTask.ErrorDetails
  name: ErrorDetails
  nameWithType: ErrorDetails
  fullName: plc.AXOpen.Core.AxoTask.ErrorDetails
  parent: plc.AXOpen.Core.AxoTask.ErrorDetails
- uid: plc.AXOpen.Core.AxoObject.Identity
  commentId: plc.AXOpen.Core.AxoObject.Identity
  name: Identity
  nameWithType: Identity
  fullName: plc.AXOpen.Core.AxoObject.Identity
  parent: plc.AXOpen.Core.AxoObject.Identity
- uid: plc.AXOpen.Core.AxoSequencer.Open()
  commentId: plc.AXOpen.Core.AxoSequencer.Open()
  name: Open()
  nameWithType: Open()
  fullName: plc.AXOpen.Core.AxoSequencer.Open()
  parent: plc.AXOpen.Core.AxoSequencer.Open()
- uid: plc.AXOpen.Core.AxoSequencer.Execute(IAxoStep,BOOL)
  commentId: plc.AXOpen.Core.AxoSequencer.Execute(IAxoStep,BOOL)
  name: Execute(IAxoStep,BOOL)
  nameWithType: Execute(IAxoStep,BOOL)
  fullName: plc.AXOpen.Core.AxoSequencer.Execute(IAxoStep,BOOL)
  parent: plc.AXOpen.Core.AxoSequencer.Execute(IAxoStep,BOOL)
- uid: plc.AXOpen.Core.AxoSequencer.MoveNext()
  commentId: plc.AXOpen.Core.AxoSequencer.MoveNext()
  name: MoveNext()
  nameWithType: MoveNext()
  fullName: plc.AXOpen.Core.AxoSequencer.MoveNext()
  parent: plc.AXOpen.Core.AxoSequencer.MoveNext()
- uid: plc.AXOpen.Core.AxoSequencer.RequestStep(IAxoStep)
  commentId: plc.AXOpen.Core.AxoSequencer.RequestStep(IAxoStep)
  name: RequestStep(IAxoStep)
  nameWithType: RequestStep(IAxoStep)
  fullName: plc.AXOpen.Core.AxoSequencer.RequestStep(IAxoStep)
  parent: plc.AXOpen.Core.AxoSequencer.RequestStep(IAxoStep)
- uid: plc.AXOpen.Core.AxoSequencer.CompleteSequence()
  commentId: plc.AXOpen.Core.AxoSequencer.CompleteSequence()
  name: CompleteSequence()
  nameWithType: CompleteSequence()
  fullName: plc.AXOpen.Core.AxoSequencer.CompleteSequence()
  parent: plc.AXOpen.Core.AxoSequencer.CompleteSequence()
- uid: plc.AXOpen.Core.AxoSequencer.OnBeforeSequenceStart()
  commentId: plc.AXOpen.Core.AxoSequencer.OnBeforeSequenceStart()
  name: OnBeforeSequenceStart()
  nameWithType: OnBeforeSequenceStart()
  fullName: plc.AXOpen.Core.AxoSequencer.OnBeforeSequenceStart()
  parent: plc.AXOpen.Core.AxoSequencer.OnBeforeSequenceStart()
- uid: plc.AXOpen.Core.AxoSequencer.OnCompleteSequence()
  commentId: plc.AXOpen.Core.AxoSequencer.OnCompleteSequence()
  name: OnCompleteSequence()
  nameWithType: OnCompleteSequence()
  fullName: plc.AXOpen.Core.AxoSequencer.OnCompleteSequence()
  parent: plc.AXOpen.Core.AxoSequencer.OnCompleteSequence()
- uid: plc.AXOpen.Core.AxoSequencer.GetCoordinatorState()
  commentId: plc.AXOpen.Core.AxoSequencer.GetCoordinatorState()
  name: GetCoordinatorState()
  nameWithType: GetCoordinatorState()
  fullName: plc.AXOpen.Core.AxoSequencer.GetCoordinatorState()
  parent: plc.AXOpen.Core.AxoSequencer.GetCoordinatorState()
- uid: plc.AXOpen.Core.AxoSequencer.DetermineOrder(IAxoStep)
  commentId: plc.AXOpen.Core.AxoSequencer.DetermineOrder(IAxoStep)
  name: DetermineOrder(IAxoStep)
  nameWithType: DetermineOrder(IAxoStep)
  fullName: plc.AXOpen.Core.AxoSequencer.DetermineOrder(IAxoStep)
  parent: plc.AXOpen.Core.AxoSequencer.DetermineOrder(IAxoStep)
- uid: plc.AXOpen.Core.AxoSequencer.GetNumberOfConfiguredSteps()
  commentId: plc.AXOpen.Core.AxoSequencer.GetNumberOfConfiguredSteps()
  name: GetNumberOfConfiguredSteps()
  nameWithType: GetNumberOfConfiguredSteps()
  fullName: plc.AXOpen.Core.AxoSequencer.GetNumberOfConfiguredSteps()
  parent: plc.AXOpen.Core.AxoSequencer.GetNumberOfConfiguredSteps()
- uid: plc.AXOpen.Core.AxoSequencer.DisableAllSteppingComands()
  commentId: plc.AXOpen.Core.AxoSequencer.DisableAllSteppingComands()
  name: DisableAllSteppingComands()
  nameWithType: DisableAllSteppingComands()
  fullName: plc.AXOpen.Core.AxoSequencer.DisableAllSteppingComands()
  parent: plc.AXOpen.Core.AxoSequencer.DisableAllSteppingComands()
- uid: plc.AXOpen.Core.AxoSequencer.AbortCurrentStep()
  commentId: plc.AXOpen.Core.AxoSequencer.AbortCurrentStep()
  name: AbortCurrentStep()
  nameWithType: AbortCurrentStep()
  fullName: plc.AXOpen.Core.AxoSequencer.AbortCurrentStep()
  parent: plc.AXOpen.Core.AxoSequencer.AbortCurrentStep()
- uid: plc.AXOpen.Core.AxoSequencer.OnRestore()
  commentId: plc.AXOpen.Core.AxoSequencer.OnRestore()
  name: OnRestore()
  nameWithType: OnRestore()
  fullName: plc.AXOpen.Core.AxoSequencer.OnRestore()
  parent: plc.AXOpen.Core.AxoSequencer.OnRestore()
- uid: plc.AXOpen.Core.AxoSequencer.GetMicroStepValue()
  commentId: plc.AXOpen.Core.AxoSequencer.GetMicroStepValue()
  name: GetMicroStepValue()
  nameWithType: GetMicroStepValue()
  fullName: plc.AXOpen.Core.AxoSequencer.GetMicroStepValue()
  parent: plc.AXOpen.Core.AxoSequencer.GetMicroStepValue()
- uid: plc.AXOpen.Core.AxoSequencer.SetMicroStepValue(UINT)
  commentId: plc.AXOpen.Core.AxoSequencer.SetMicroStepValue(UINT)
  name: SetMicroStepValue(UINT)
  nameWithType: SetMicroStepValue(UINT)
  fullName: plc.AXOpen.Core.AxoSequencer.SetMicroStepValue(UINT)
  parent: plc.AXOpen.Core.AxoSequencer.SetMicroStepValue(UINT)
- uid: plc.AXOpen.Core.AxoSequencer.AndThen(IAxoTask)
  commentId: plc.AXOpen.Core.AxoSequencer.AndThen(IAxoTask)
  name: AndThen(IAxoTask)
  nameWithType: AndThen(IAxoTask)
  fullName: plc.AXOpen.Core.AxoSequencer.AndThen(IAxoTask)
  parent: plc.AXOpen.Core.AxoSequencer.AndThen(IAxoTask)
- uid: plc.AXOpen.Core.AxoSequencer.Close()
  commentId: plc.AXOpen.Core.AxoSequencer.Close()
  name: Close()
  nameWithType: Close()
  fullName: plc.AXOpen.Core.AxoSequencer.Close()
  parent: plc.AXOpen.Core.AxoSequencer.Close()
- uid: plc.AXOpen.Core.AxoTask.GetState()
  commentId: plc.AXOpen.Core.AxoTask.GetState()
  name: GetState()
  nameWithType: GetState()
  fullName: plc.AXOpen.Core.AxoTask.GetState()
  parent: plc.AXOpen.Core.AxoTask.GetState()
- uid: plc.AXOpen.Core.AxoTask.GetErrorDetails()
  commentId: plc.AXOpen.Core.AxoTask.GetErrorDetails()
  name: GetErrorDetails()
  nameWithType: GetErrorDetails()
  fullName: plc.AXOpen.Core.AxoTask.GetErrorDetails()
  parent: plc.AXOpen.Core.AxoTask.GetErrorDetails()
- uid: plc.AXOpen.Core.AxoTask.IsReady()
  commentId: plc.AXOpen.Core.AxoTask.IsReady()
  name: IsReady()
  nameWithType: IsReady()
  fullName: plc.AXOpen.Core.AxoTask.IsReady()
  parent: plc.AXOpen.Core.AxoTask.IsReady()
- uid: plc.AXOpen.Core.AxoTask.IsDone()
  commentId: plc.AXOpen.Core.AxoTask.IsDone()
  name: IsDone()
  nameWithType: IsDone()
  fullName: plc.AXOpen.Core.AxoTask.IsDone()
  parent: plc.AXOpen.Core.AxoTask.IsDone()
- uid: plc.AXOpen.Core.AxoTask.IsBusy()
  commentId: plc.AXOpen.Core.AxoTask.IsBusy()
  name: IsBusy()
  nameWithType: IsBusy()
  fullName: plc.AXOpen.Core.AxoTask.IsBusy()
  parent: plc.AXOpen.Core.AxoTask.IsBusy()
- uid: plc.AXOpen.Core.AxoTask.IsAborted()
  commentId: plc.AXOpen.Core.AxoTask.IsAborted()
  name: IsAborted()
  nameWithType: IsAborted()
  fullName: plc.AXOpen.Core.AxoTask.IsAborted()
  parent: plc.AXOpen.Core.AxoTask.IsAborted()
- uid: plc.AXOpen.Core.AxoTask.HasError()
  commentId: plc.AXOpen.Core.AxoTask.HasError()
  name: HasError()
  nameWithType: HasError()
  fullName: plc.AXOpen.Core.AxoTask.HasError()
  parent: plc.AXOpen.Core.AxoTask.HasError()
- uid: plc.AXOpen.Core.AxoTask.IsFirstExecutionCycle()
  commentId: plc.AXOpen.Core.AxoTask.IsFirstExecutionCycle()
  name: IsFirstExecutionCycle()
  nameWithType: IsFirstExecutionCycle()
  fullName: plc.AXOpen.Core.AxoTask.IsFirstExecutionCycle()
  parent: plc.AXOpen.Core.AxoTask.IsFirstExecutionCycle()
- uid: plc.AXOpen.Core.AxoTask.SetSuspendMultipleExecuteCallCheck(BOOL)
  commentId: plc.AXOpen.Core.AxoTask.SetSuspendMultipleExecuteCallCheck(BOOL)
  name: SetSuspendMultipleExecuteCallCheck(BOOL)
  nameWithType: SetSuspendMultipleExecuteCallCheck(BOOL)
  fullName: plc.AXOpen.Core.AxoTask.SetSuspendMultipleExecuteCallCheck(BOOL)
  parent: plc.AXOpen.Core.AxoTask.SetSuspendMultipleExecuteCallCheck(BOOL)
- uid: plc.AXOpen.Core.AxoTask.GetSuspendMultipleExecuteCallCheckState()
  commentId: plc.AXOpen.Core.AxoTask.GetSuspendMultipleExecuteCallCheckState()
  name: GetSuspendMultipleExecuteCallCheckState()
  nameWithType: GetSuspendMultipleExecuteCallCheckState()
  fullName: plc.AXOpen.Core.AxoTask.GetSuspendMultipleExecuteCallCheckState()
  parent: plc.AXOpen.Core.AxoTask.GetSuspendMultipleExecuteCallCheckState()
- uid: plc.AXOpen.Core.AxoTask.IsNewInvokeCall()
  commentId: plc.AXOpen.Core.AxoTask.IsNewInvokeCall()
  name: IsNewInvokeCall()
  nameWithType: IsNewInvokeCall()
  fullName: plc.AXOpen.Core.AxoTask.IsNewInvokeCall()
  parent: plc.AXOpen.Core.AxoTask.IsNewInvokeCall()
- uid: plc.AXOpen.Core.AxoTask.IsNewExecuteCall()
  commentId: plc.AXOpen.Core.AxoTask.IsNewExecuteCall()
  name: IsNewExecuteCall()
  nameWithType: IsNewExecuteCall()
  fullName: plc.AXOpen.Core.AxoTask.IsNewExecuteCall()
  parent: plc.AXOpen.Core.AxoTask.IsNewExecuteCall()
- uid: plc.AXOpen.Core.AxoTask.IsExecuteCalledInThisPlcCycle()
  commentId: plc.AXOpen.Core.AxoTask.IsExecuteCalledInThisPlcCycle()
  name: IsExecuteCalledInThisPlcCycle()
  nameWithType: IsExecuteCalledInThisPlcCycle()
  fullName: plc.AXOpen.Core.AxoTask.IsExecuteCalledInThisPlcCycle()
  parent: plc.AXOpen.Core.AxoTask.IsExecuteCalledInThisPlcCycle()
- uid: plc.AXOpen.Core.AxoTask.WasExecuteCalledInPreviousPlcCycle()
  commentId: plc.AXOpen.Core.AxoTask.WasExecuteCalledInPreviousPlcCycle()
  name: WasExecuteCalledInPreviousPlcCycle()
  nameWithType: WasExecuteCalledInPreviousPlcCycle()
  fullName: plc.AXOpen.Core.AxoTask.WasExecuteCalledInPreviousPlcCycle()
  parent: plc.AXOpen.Core.AxoTask.WasExecuteCalledInPreviousPlcCycle()
- uid: plc.AXOpen.Core.AxoTask.UpdateState()
  commentId: plc.AXOpen.Core.AxoTask.UpdateState()
  name: UpdateState()
  nameWithType: UpdateState()
  fullName: plc.AXOpen.Core.AxoTask.UpdateState()
  parent: plc.AXOpen.Core.AxoTask.UpdateState()
- uid: plc.AXOpen.Core.AxoTask.Invoke()
  commentId: plc.AXOpen.Core.AxoTask.Invoke()
  name: Invoke()
  nameWithType: Invoke()
  fullName: plc.AXOpen.Core.AxoTask.Invoke()
  parent: plc.AXOpen.Core.AxoTask.Invoke()
- uid: plc.AXOpen.Core.AxoTask.Restore()
  commentId: plc.AXOpen.Core.AxoTask.Restore()
  name: Restore()
  nameWithType: Restore()
  fullName: plc.AXOpen.Core.AxoTask.Restore()
  parent: plc.AXOpen.Core.AxoTask.Restore()
- uid: plc.AXOpen.Core.AxoTask.DoneWhen(BOOL)
  commentId: plc.AXOpen.Core.AxoTask.DoneWhen(BOOL)
  name: DoneWhen(BOOL)
  nameWithType: DoneWhen(BOOL)
  fullName: plc.AXOpen.Core.AxoTask.DoneWhen(BOOL)
  parent: plc.AXOpen.Core.AxoTask.DoneWhen(BOOL)
- uid: plc.AXOpen.Core.AxoTask.Execute()
  commentId: plc.AXOpen.Core.AxoTask.Execute()
  name: Execute()
  nameWithType: Execute()
  fullName: plc.AXOpen.Core.AxoTask.Execute()
  parent: plc.AXOpen.Core.AxoTask.Execute()
- uid: plc.AXOpen.Core.AxoTask.LogTask(STRING[80],eLogLevel,IAxoObject)
  commentId: plc.AXOpen.Core.AxoTask.LogTask(STRING[80],eLogLevel,IAxoObject)
  name: LogTask(STRING[80],eLogLevel,IAxoObject)
  nameWithType: LogTask(STRING[80],eLogLevel,IAxoObject)
  fullName: plc.AXOpen.Core.AxoTask.LogTask(STRING[80],eLogLevel,IAxoObject)
  parent: plc.AXOpen.Core.AxoTask.LogTask(STRING[80],eLogLevel,IAxoObject)
- uid: plc.AXOpen.Core.AxoTask.ThrowWhen(BOOL)
  commentId: plc.AXOpen.Core.AxoTask.ThrowWhen(BOOL)
  name: ThrowWhen(BOOL)
  nameWithType: ThrowWhen(BOOL)
  fullName: plc.AXOpen.Core.AxoTask.ThrowWhen(BOOL)
  parent: plc.AXOpen.Core.AxoTask.ThrowWhen(BOOL)
- uid: plc.AXOpen.Core.AxoTask.ThrowWhen(BOOL,STRING[254])
  commentId: plc.AXOpen.Core.AxoTask.ThrowWhen(BOOL,STRING[254])
  name: ThrowWhen(BOOL,STRING[254])
  nameWithType: ThrowWhen(BOOL,STRING[254])
  fullName: plc.AXOpen.Core.AxoTask.ThrowWhen(BOOL,STRING[254])
  parent: plc.AXOpen.Core.AxoTask.ThrowWhen(BOOL,STRING[254])
- uid: plc.AXOpen.Core.AxoTask.SetIsDisabled(BOOL)
  commentId: plc.AXOpen.Core.AxoTask.SetIsDisabled(BOOL)
  name: SetIsDisabled(BOOL)
  nameWithType: SetIsDisabled(BOOL)
  fullName: plc.AXOpen.Core.AxoTask.SetIsDisabled(BOOL)
  parent: plc.AXOpen.Core.AxoTask.SetIsDisabled(BOOL)
- uid: plc.AXOpen.Core.AxoTask.GetIsDisabled()
  commentId: plc.AXOpen.Core.AxoTask.GetIsDisabled()
  name: GetIsDisabled()
  nameWithType: GetIsDisabled()
  fullName: plc.AXOpen.Core.AxoTask.GetIsDisabled()
  parent: plc.AXOpen.Core.AxoTask.GetIsDisabled()
- uid: plc.AXOpen.Core.AxoTask.Abort()
  commentId: plc.AXOpen.Core.AxoTask.Abort()
  name: Abort()
  nameWithType: Abort()
  fullName: plc.AXOpen.Core.AxoTask.Abort()
  parent: plc.AXOpen.Core.AxoTask.Abort()
- uid: plc.AXOpen.Core.AxoTask.Resume()
  commentId: plc.AXOpen.Core.AxoTask.Resume()
  name: Resume()
  nameWithType: Resume()
  fullName: plc.AXOpen.Core.AxoTask.Resume()
  parent: plc.AXOpen.Core.AxoTask.Resume()
- uid: plc.AXOpen.Core.AxoTask.SetRemoteRestoreEnabled(BOOL)
  commentId: plc.AXOpen.Core.AxoTask.SetRemoteRestoreEnabled(BOOL)
  name: SetRemoteRestoreEnabled(BOOL)
  nameWithType: SetRemoteRestoreEnabled(BOOL)
  fullName: plc.AXOpen.Core.AxoTask.SetRemoteRestoreEnabled(BOOL)
  parent: plc.AXOpen.Core.AxoTask.SetRemoteRestoreEnabled(BOOL)
- uid: plc.AXOpen.Core.AxoTask.GetRemoteRestoreEnabled()
  commentId: plc.AXOpen.Core.AxoTask.GetRemoteRestoreEnabled()
  name: GetRemoteRestoreEnabled()
  nameWithType: GetRemoteRestoreEnabled()
  fullName: plc.AXOpen.Core.AxoTask.GetRemoteRestoreEnabled()
  parent: plc.AXOpen.Core.AxoTask.GetRemoteRestoreEnabled()
- uid: plc.AXOpen.Core.AxoTask.SetRemoteAbortEnabled(BOOL)
  commentId: plc.AXOpen.Core.AxoTask.SetRemoteAbortEnabled(BOOL)
  name: SetRemoteAbortEnabled(BOOL)
  nameWithType: SetRemoteAbortEnabled(BOOL)
  fullName: plc.AXOpen.Core.AxoTask.SetRemoteAbortEnabled(BOOL)
  parent: plc.AXOpen.Core.AxoTask.SetRemoteAbortEnabled(BOOL)
- uid: plc.AXOpen.Core.AxoTask.GetRemoteAbortEnabled()
  commentId: plc.AXOpen.Core.AxoTask.GetRemoteAbortEnabled()
  name: GetRemoteAbortEnabled()
  nameWithType: GetRemoteAbortEnabled()
  fullName: plc.AXOpen.Core.AxoTask.GetRemoteAbortEnabled()
  parent: plc.AXOpen.Core.AxoTask.GetRemoteAbortEnabled()
- uid: plc.AXOpen.Core.AxoTask.OnAbort()
  commentId: plc.AXOpen.Core.AxoTask.OnAbort()
  name: OnAbort()
  nameWithType: OnAbort()
  fullName: plc.AXOpen.Core.AxoTask.OnAbort()
  parent: plc.AXOpen.Core.AxoTask.OnAbort()
- uid: plc.AXOpen.Core.AxoTask.OnResume()
  commentId: plc.AXOpen.Core.AxoTask.OnResume()
  name: OnResume()
  nameWithType: OnResume()
  fullName: plc.AXOpen.Core.AxoTask.OnResume()
  parent: plc.AXOpen.Core.AxoTask.OnResume()
- uid: plc.AXOpen.Core.AxoTask.OnDone()
  commentId: plc.AXOpen.Core.AxoTask.OnDone()
  name: OnDone()
  nameWithType: OnDone()
  fullName: plc.AXOpen.Core.AxoTask.OnDone()
  parent: plc.AXOpen.Core.AxoTask.OnDone()
- uid: plc.AXOpen.Core.AxoTask.OnError()
  commentId: plc.AXOpen.Core.AxoTask.OnError()
  name: OnError()
  nameWithType: OnError()
  fullName: plc.AXOpen.Core.AxoTask.OnError()
  parent: plc.AXOpen.Core.AxoTask.OnError()
- uid: plc.AXOpen.Core.AxoTask.OnRestore()
  commentId: plc.AXOpen.Core.AxoTask.OnRestore()
  name: OnRestore()
  nameWithType: OnRestore()
  fullName: plc.AXOpen.Core.AxoTask.OnRestore()
  parent: plc.AXOpen.Core.AxoTask.OnRestore()
- uid: plc.AXOpen.Core.AxoTask.OnStart()
  commentId: plc.AXOpen.Core.AxoTask.OnStart()
  name: OnStart()
  nameWithType: OnStart()
  fullName: plc.AXOpen.Core.AxoTask.OnStart()
  parent: plc.AXOpen.Core.AxoTask.OnStart()
- uid: plc.AXOpen.Core.AxoTask.WhileError()
  commentId: plc.AXOpen.Core.AxoTask.WhileError()
  name: WhileError()
  nameWithType: WhileError()
  fullName: plc.AXOpen.Core.AxoTask.WhileError()
  parent: plc.AXOpen.Core.AxoTask.WhileError()
- uid: plc.AXOpen.Core.AxoTask.AbortTriggered()
  commentId: plc.AXOpen.Core.AxoTask.AbortTriggered()
  name: AbortTriggered()
  nameWithType: AbortTriggered()
  fullName: plc.AXOpen.Core.AxoTask.AbortTriggered()
  parent: plc.AXOpen.Core.AxoTask.AbortTriggered()
- uid: plc.AXOpen.Core.AxoTask.ResumeTriggered()
  commentId: plc.AXOpen.Core.AxoTask.ResumeTriggered()
  name: ResumeTriggered()
  nameWithType: ResumeTriggered()
  fullName: plc.AXOpen.Core.AxoTask.ResumeTriggered()
  parent: plc.AXOpen.Core.AxoTask.ResumeTriggered()
- uid: plc.AXOpen.Core.AxoTask.DoneReached()
  commentId: plc.AXOpen.Core.AxoTask.DoneReached()
  name: DoneReached()
  nameWithType: DoneReached()
  fullName: plc.AXOpen.Core.AxoTask.DoneReached()
  parent: plc.AXOpen.Core.AxoTask.DoneReached()
- uid: plc.AXOpen.Core.AxoTask.ErrorOccured()
  commentId: plc.AXOpen.Core.AxoTask.ErrorOccured()
  name: ErrorOccured()
  nameWithType: ErrorOccured()
  fullName: plc.AXOpen.Core.AxoTask.ErrorOccured()
  parent: plc.AXOpen.Core.AxoTask.ErrorOccured()
- uid: plc.AXOpen.Core.AxoTask.RestoreTriggered()
  commentId: plc.AXOpen.Core.AxoTask.RestoreTriggered()
  name: RestoreTriggered()
  nameWithType: RestoreTriggered()
  fullName: plc.AXOpen.Core.AxoTask.RestoreTriggered()
  parent: plc.AXOpen.Core.AxoTask.RestoreTriggered()
- uid: plc.AXOpen.Core.AxoTask.StartTriggered()
  commentId: plc.AXOpen.Core.AxoTask.StartTriggered()
  name: StartTriggered()
  nameWithType: StartTriggered()
  fullName: plc.AXOpen.Core.AxoTask.StartTriggered()
  parent: plc.AXOpen.Core.AxoTask.StartTriggered()
- uid: plc.AXOpen.Core.AxoObject.GetIdentity()
  commentId: plc.AXOpen.Core.AxoObject.GetIdentity()
  name: GetIdentity()
  nameWithType: GetIdentity()
  fullName: plc.AXOpen.Core.AxoObject.GetIdentity()
  parent: plc.AXOpen.Core.AxoObject.GetIdentity()
- uid: plc.AXOpen.Core.AxoObject.GetContext()
  commentId: plc.AXOpen.Core.AxoObject.GetContext()
  name: GetContext()
  nameWithType: GetContext()
  fullName: plc.AXOpen.Core.AxoObject.GetContext()
  parent: plc.AXOpen.Core.AxoObject.GetContext()
- uid: plc.AXOpen.Core.AxoObject.GetContextUnsafe()
  commentId: plc.AXOpen.Core.AxoObject.GetContextUnsafe()
  name: GetContextUnsafe()
  nameWithType: GetContextUnsafe()
  fullName: plc.AXOpen.Core.AxoObject.GetContextUnsafe()
  parent: plc.AXOpen.Core.AxoObject.GetContextUnsafe()
- uid: plc.AXOpen.Core.AxoObject.GetParent()
  commentId: plc.AXOpen.Core.AxoObject.GetParent()
  name: GetParent()
  nameWithType: GetParent()
  fullName: plc.AXOpen.Core.AxoObject.GetParent()
  parent: plc.AXOpen.Core.AxoObject.GetParent()
- uid: plc.AXOpen.Core.AxoObject.Initialize(IAxoObject)
  commentId: plc.AXOpen.Core.AxoObject.Initialize(IAxoObject)
  name: Initialize(IAxoObject)
  nameWithType: Initialize(IAxoObject)
  fullName: plc.AXOpen.Core.AxoObject.Initialize(IAxoObject)
  parent: plc.AXOpen.Core.AxoObject.Initialize(IAxoObject)
- uid: plc.AXOpen.Core.AxoObject.Initialize(IAxoContext)
  commentId: plc.AXOpen.Core.AxoObject.Initialize(IAxoContext)
  name: Initialize(IAxoContext)
  nameWithType: Initialize(IAxoContext)
  fullName: plc.AXOpen.Core.AxoObject.Initialize(IAxoContext)
  parent: plc.AXOpen.Core.AxoObject.Initialize(IAxoContext)
- uid: plc.AXOpen.Core.IAxoSequencer
  commentId: plc.AXOpen.Core.IAxoSequencer
  name: IAxoSequencer
  nameWithType: IAxoSequencer
  fullName: plc.AXOpen.Core.IAxoSequencer
  parent: plc.AXOpen.Core.IAxoSequencer
- uid: plc.AXOpen.Core.IAxoTask
  commentId: plc.AXOpen.Core.IAxoTask
  name: IAxoTask
  nameWithType: IAxoTask
  fullName: plc.AXOpen.Core.IAxoTask
  parent: plc.AXOpen.Core.IAxoTask
- uid: plc.AXOpen.Core.IAxoTaskState
  commentId: plc.AXOpen.Core.IAxoTaskState
  name: IAxoTaskState
  nameWithType: IAxoTaskState
  fullName: plc.AXOpen.Core.IAxoTaskState
  parent: plc.AXOpen.Core.IAxoTaskState
- uid: plc.AXOpen.Core.IAxoContext
  name: IAxoContext
  nameWithType: IAxoContext
  fullName: AXOpen.Core.IAxoContext
- uid: plc.AXOpen.Core.IAxoObject
  name: IAxoObject
  nameWithType: IAxoObject
  fullName: AXOpen.Core.IAxoObject


