## YamlMime:ManagedReference
items:
- uid: plc.AXOpen.Data.AxoDataCrudTask
  id: plc.AXOpen.Data.AxoDataCrudTask
  parent: plc.AXOpen.Data
  children:
  - plc.AXOpen.Data.AxoDataCrudTask.CrudOperation
  - plc.AXOpen.Data.AxoDataCrudTask.DataEntityIdentifier
  - plc.AXOpen.Data.AxoDataCrudTask._exist
  - plc.AXOpen.Data.AxoDataCrudTask.Invoke(STRING[254],eCrudOperation)
  - plc.AXOpen.Data.AxoDataCrudTask.Exist()
  name: AxoDataCrudTask
  fullName: AxoDataCrudTask
  type: Class
  source:
    remote:
      path: .\src\data\ctrl\src\AxoDataCrudTask.st
      branch: 293-Festo_CMMT-AS_class_not_derived_from_AxoDrive_just_point_to_point_movements
      repo: https://github.com/ix-ax/AXOpen.git
    id: plc.AXOpen.Data.AxoDataCrudTask
    path: .\src\data\ctrl\src\AxoDataCrudTask.st
    startLine: 9
  namespace: plc.AXOpen.Data
  summary: Provides remote execution for CRUD operations.> [!NOTE]> This is an extension of <xref href="AxoTask" data-throw-if-not-resolved="false"></xref>task see the documentatio for details about implementation in .NET.
  syntax:
    content: CLASS AxoDataCrudTask
  inheritance:
  - plc.AXOpen.Core.AxoRemoteTask
  - plc.AXOpen.Core.AxoTask
  - plc.AXOpen.Core.AxoObject
  inheritedMembers:
  - plc.AXOpen.Core.AxoRemoteTask.DoneSignature
  - plc.AXOpen.Core.AxoRemoteTask.IsInitialized
  - plc.AXOpen.Core.AxoRemoteTask.HasRemoteException
  - plc.AXOpen.Core.AxoRemoteTask.IsBeingCalledCounter
  - plc.AXOpen.Core.AxoRemoteTask.TaskNotInitialized
  - plc.AXOpen.Core.AxoRemoteTask.TaskHasRemoteException
  - plc.AXOpen.Core.AxoTask.Status
  - plc.AXOpen.Core.AxoTask.IsDisabled
  - plc.AXOpen.Core.AxoTask.RemoteInvoke
  - plc.AXOpen.Core.AxoTask.RemoteRestore
  - plc.AXOpen.Core.AxoTask.RemoteAbort
  - plc.AXOpen.Core.AxoTask.RemoteResume
  - plc.AXOpen.Core.AxoTask.StartSignature
  - plc.AXOpen.Core.AxoTask.Duration
  - plc.AXOpen.Core.AxoTask.StartTimeStamp
  - plc.AXOpen.Core.AxoTask.ErrorDetails
  - plc.AXOpen.Core.AxoObject.Identity
  - plc.AXOpen.Core.AxoRemoteTask.Execute()
  - plc.AXOpen.Core.AxoRemoteTask.GetStartSignature()
  - plc.AXOpen.Core.AxoRemoteTask.SetDoneSignature()
  - plc.AXOpen.Core.AxoTask.GetState()
  - plc.AXOpen.Core.AxoTask.GetErrorDetails()
  - plc.AXOpen.Core.AxoTask.IsReady()
  - plc.AXOpen.Core.AxoTask.IsDone()
  - plc.AXOpen.Core.AxoTask.IsBusy()
  - plc.AXOpen.Core.AxoTask.IsAborted()
  - plc.AXOpen.Core.AxoTask.HasError()
  - plc.AXOpen.Core.AxoTask.IsFirstExecutionCycle()
  - plc.AXOpen.Core.AxoTask.SetSuspendMultipleExecuteCallCheck(BOOL)
  - plc.AXOpen.Core.AxoTask.GetSuspendMultipleExecuteCallCheckState()
  - plc.AXOpen.Core.AxoTask.IsNewInvokeCall()
  - plc.AXOpen.Core.AxoTask.IsNewExecuteCall()
  - plc.AXOpen.Core.AxoTask.IsExecuteCalledInThisPlcCycle()
  - plc.AXOpen.Core.AxoTask.WasExecuteCalledInPreviousPlcCycle()
  - plc.AXOpen.Core.AxoTask.UpdateState()
  - plc.AXOpen.Core.AxoTask.Invoke()
  - plc.AXOpen.Core.AxoTask.Restore()
  - plc.AXOpen.Core.AxoTask.DoneWhen(BOOL)
  - plc.AXOpen.Core.AxoTask.Execute()
  - plc.AXOpen.Core.AxoTask.LogTask(STRING[80],eLogLevel,IAxoObject)
  - plc.AXOpen.Core.AxoTask.ThrowWhen(BOOL)
  - plc.AXOpen.Core.AxoTask.ThrowWhen(BOOL,STRING[254])
  - plc.AXOpen.Core.AxoTask.SetIsDisabled(BOOL)
  - plc.AXOpen.Core.AxoTask.GetIsDisabled()
  - plc.AXOpen.Core.AxoTask.Abort()
  - plc.AXOpen.Core.AxoTask.Resume()
  - plc.AXOpen.Core.AxoTask.SetRemoteRestoreEnabled(BOOL)
  - plc.AXOpen.Core.AxoTask.GetRemoteRestoreEnabled()
  - plc.AXOpen.Core.AxoTask.SetRemoteAbortEnabled(BOOL)
  - plc.AXOpen.Core.AxoTask.GetRemoteAbortEnabled()
  - plc.AXOpen.Core.AxoTask.OnAbort()
  - plc.AXOpen.Core.AxoTask.OnResume()
  - plc.AXOpen.Core.AxoTask.OnDone()
  - plc.AXOpen.Core.AxoTask.OnError()
  - plc.AXOpen.Core.AxoTask.OnRestore()
  - plc.AXOpen.Core.AxoTask.OnStart()
  - plc.AXOpen.Core.AxoTask.WhileError()
  - plc.AXOpen.Core.AxoTask.AbortTriggered()
  - plc.AXOpen.Core.AxoTask.ResumeTriggered()
  - plc.AXOpen.Core.AxoTask.DoneReached()
  - plc.AXOpen.Core.AxoTask.ErrorOccured()
  - plc.AXOpen.Core.AxoTask.RestoreTriggered()
  - plc.AXOpen.Core.AxoTask.StartTriggered()
  - plc.AXOpen.Core.AxoObject.GetIdentity()
  - plc.AXOpen.Core.AxoObject.GetContext()
  - plc.AXOpen.Core.AxoObject.GetContextUnsafe()
  - plc.AXOpen.Core.AxoObject.GetParent()
  - plc.AXOpen.Core.AxoObject.Initialize(IAxoObject)
  - plc.AXOpen.Core.AxoObject.Initialize(IAxoContext)
  implements:
  - plc.AXOpen.Data.IAxoEntityExistTaskState
  - plc.AXOpen.Core.IAxoTask
- uid: plc.AXOpen.Data.AxoDataCrudTask.CrudOperation
  id: plc.AXOpen.Data.AxoDataCrudTask.CrudOperation
  parent: AXOpen.Data
  children: []
  name: CrudOperation
  fullName: CrudOperation
  type: Property
  source:
    remote:
      path: .\src\data\ctrl\src\AxoDataCrudTask.st
      branch: 293-Festo_CMMT-AS_class_not_derived_from_AxoDrive_just_point_to_point_movements
      repo: https://github.com/ix-ax/AXOpen.git
    id: plc.AXOpen.Data.AxoDataCrudTask.CrudOperation
    path: .\src\data\ctrl\src\AxoDataCrudTask.st
    startLine: 17
  namespace: plc.AXOpen.Data
  summary: Gets or sets the type of CRUD operation to be perfomed.
  syntax:
    content: 'CrudOperation : AXOpen.Data.eCrudOperation'
    return:
      type: AXOpen.Data.eCrudOperation
- uid: plc.AXOpen.Data.AxoDataCrudTask.DataEntityIdentifier
  id: plc.AXOpen.Data.AxoDataCrudTask.DataEntityIdentifier
  parent: AXOpen.Data
  children: []
  name: DataEntityIdentifier
  fullName: DataEntityIdentifier
  type: Property
  source:
    remote:
      path: .\src\data\ctrl\src\AxoDataCrudTask.st
      branch: 293-Festo_CMMT-AS_class_not_derived_from_AxoDrive_just_point_to_point_movements
      repo: https://github.com/ix-ax/AXOpen.git
    id: plc.AXOpen.Data.AxoDataCrudTask.DataEntityIdentifier
    path: .\src\data\ctrl\src\AxoDataCrudTask.st
    startLine: 17
  namespace: plc.AXOpen.Data
  syntax:
    content: 'DataEntityIdentifier : STRING[254]'
    return:
      type: STRING[254]
- uid: plc.AXOpen.Data.AxoDataCrudTask._exist
  id: plc.AXOpen.Data.AxoDataCrudTask._exist
  parent: AXOpen.Data
  children: []
  name: _exist
  fullName: _exist
  type: Property
  source:
    remote:
      path: .\src\data\ctrl\src\AxoDataCrudTask.st
      branch: 293-Festo_CMMT-AS_class_not_derived_from_AxoDrive_just_point_to_point_movements
      repo: https://github.com/ix-ax/AXOpen.git
    id: plc.AXOpen.Data.AxoDataCrudTask._exist
    path: .\src\data\ctrl\src\AxoDataCrudTask.st
    startLine: 19
  namespace: plc.AXOpen.Data
  syntax:
    content: '_exist : BOOL'
    return:
      type: BOOL
- uid: plc.AXOpen.Data.AxoDataCrudTask.Invoke(STRING[254],eCrudOperation)
  id: plc.AXOpen.Data.AxoDataCrudTask.Invoke(STRING[254],eCrudOperation)
  parent: AXOpen.Data.AxoDataCrudTask
  children: []
  name: Invoke
  fullName: Invoke
  type: Method
  source:
    remote:
      path: .\src\data\ctrl\src\AxoDataCrudTask.st
      branch: 293-Festo_CMMT-AS_class_not_derived_from_AxoDrive_just_point_to_point_movements
      repo: https://github.com/ix-ax/AXOpen.git
    id: plc.AXOpen.Data.AxoDataCrudTask.Invoke
    path: .\src\data\ctrl\src\AxoDataCrudTask.st
    startLine: 27
  namespace: plc.AXOpen.Data
  summary: Invokes this task.
  syntax:
    content: Public AXOpen.Core.IAxoTaskState Invoke(in plc.STRING[254] identifier,in plc.AXOpen.Data.eCrudOperation operation)
    parameters:
    - id: identifier
      type: plc.STRING[254]
      description: Data entity identifier
    - id: operation
      type: plc.AXOpen.Data.eCrudOperation
      description: Operation to perfom.
    return:
      type: plc.AXOpen.Core.IAxoTaskState
- uid: plc.AXOpen.Data.AxoDataCrudTask.Exist()
  id: plc.AXOpen.Data.AxoDataCrudTask.Exist()
  parent: AXOpen.Data.AxoDataCrudTask
  children: []
  name: Exist
  fullName: Exist
  type: Method
  source:
    remote:
      path: .\src\data\ctrl\src\AxoDataCrudTask.st
      branch: 293-Festo_CMMT-AS_class_not_derived_from_AxoDrive_just_point_to_point_movements
      repo: https://github.com/ix-ax/AXOpen.git
    id: plc.AXOpen.Data.AxoDataCrudTask.Exist
    path: .\src\data\ctrl\src\AxoDataCrudTask.st
    startLine: 38
  namespace: plc.AXOpen.Data
  syntax:
    content: Public BOOL Exist()
    parameters: []
    return:
      type: plc.BOOL
references:
- uid: plc.AXOpen.Core.AxoRemoteTask.DoneSignature
  commentId: plc.AXOpen.Core.AxoRemoteTask.DoneSignature
  name: DoneSignature
  nameWithType: DoneSignature
  fullName: plc.AXOpen.Core.AxoRemoteTask.DoneSignature
  parent: plc.AXOpen.Core.AxoRemoteTask.DoneSignature
- uid: plc.AXOpen.Core.AxoRemoteTask.IsInitialized
  commentId: plc.AXOpen.Core.AxoRemoteTask.IsInitialized
  name: IsInitialized
  nameWithType: IsInitialized
  fullName: plc.AXOpen.Core.AxoRemoteTask.IsInitialized
  parent: plc.AXOpen.Core.AxoRemoteTask.IsInitialized
- uid: plc.AXOpen.Core.AxoRemoteTask.HasRemoteException
  commentId: plc.AXOpen.Core.AxoRemoteTask.HasRemoteException
  name: HasRemoteException
  nameWithType: HasRemoteException
  fullName: plc.AXOpen.Core.AxoRemoteTask.HasRemoteException
  parent: plc.AXOpen.Core.AxoRemoteTask.HasRemoteException
- uid: plc.AXOpen.Core.AxoRemoteTask.IsBeingCalledCounter
  commentId: plc.AXOpen.Core.AxoRemoteTask.IsBeingCalledCounter
  name: IsBeingCalledCounter
  nameWithType: IsBeingCalledCounter
  fullName: plc.AXOpen.Core.AxoRemoteTask.IsBeingCalledCounter
  parent: plc.AXOpen.Core.AxoRemoteTask.IsBeingCalledCounter
- uid: plc.AXOpen.Core.AxoRemoteTask.TaskNotInitialized
  commentId: plc.AXOpen.Core.AxoRemoteTask.TaskNotInitialized
  name: TaskNotInitialized
  nameWithType: TaskNotInitialized
  fullName: plc.AXOpen.Core.AxoRemoteTask.TaskNotInitialized
  parent: plc.AXOpen.Core.AxoRemoteTask.TaskNotInitialized
- uid: plc.AXOpen.Core.AxoRemoteTask.TaskHasRemoteException
  commentId: plc.AXOpen.Core.AxoRemoteTask.TaskHasRemoteException
  name: TaskHasRemoteException
  nameWithType: TaskHasRemoteException
  fullName: plc.AXOpen.Core.AxoRemoteTask.TaskHasRemoteException
  parent: plc.AXOpen.Core.AxoRemoteTask.TaskHasRemoteException
- uid: plc.AXOpen.Core.AxoTask.Status
  commentId: plc.AXOpen.Core.AxoTask.Status
  name: Status
  nameWithType: Status
  fullName: plc.AXOpen.Core.AxoTask.Status
  parent: plc.AXOpen.Core.AxoTask.Status
- uid: plc.AXOpen.Core.AxoTask.IsDisabled
  commentId: plc.AXOpen.Core.AxoTask.IsDisabled
  name: IsDisabled
  nameWithType: IsDisabled
  fullName: plc.AXOpen.Core.AxoTask.IsDisabled
  parent: plc.AXOpen.Core.AxoTask.IsDisabled
- uid: plc.AXOpen.Core.AxoTask.RemoteInvoke
  commentId: plc.AXOpen.Core.AxoTask.RemoteInvoke
  name: RemoteInvoke
  nameWithType: RemoteInvoke
  fullName: plc.AXOpen.Core.AxoTask.RemoteInvoke
  parent: plc.AXOpen.Core.AxoTask.RemoteInvoke
- uid: plc.AXOpen.Core.AxoTask.RemoteRestore
  commentId: plc.AXOpen.Core.AxoTask.RemoteRestore
  name: RemoteRestore
  nameWithType: RemoteRestore
  fullName: plc.AXOpen.Core.AxoTask.RemoteRestore
  parent: plc.AXOpen.Core.AxoTask.RemoteRestore
- uid: plc.AXOpen.Core.AxoTask.RemoteAbort
  commentId: plc.AXOpen.Core.AxoTask.RemoteAbort
  name: RemoteAbort
  nameWithType: RemoteAbort
  fullName: plc.AXOpen.Core.AxoTask.RemoteAbort
  parent: plc.AXOpen.Core.AxoTask.RemoteAbort
- uid: plc.AXOpen.Core.AxoTask.RemoteResume
  commentId: plc.AXOpen.Core.AxoTask.RemoteResume
  name: RemoteResume
  nameWithType: RemoteResume
  fullName: plc.AXOpen.Core.AxoTask.RemoteResume
  parent: plc.AXOpen.Core.AxoTask.RemoteResume
- uid: plc.AXOpen.Core.AxoTask.StartSignature
  commentId: plc.AXOpen.Core.AxoTask.StartSignature
  name: StartSignature
  nameWithType: StartSignature
  fullName: plc.AXOpen.Core.AxoTask.StartSignature
  parent: plc.AXOpen.Core.AxoTask.StartSignature
- uid: plc.AXOpen.Core.AxoTask.Duration
  commentId: plc.AXOpen.Core.AxoTask.Duration
  name: Duration
  nameWithType: Duration
  fullName: plc.AXOpen.Core.AxoTask.Duration
  parent: plc.AXOpen.Core.AxoTask.Duration
- uid: plc.AXOpen.Core.AxoTask.StartTimeStamp
  commentId: plc.AXOpen.Core.AxoTask.StartTimeStamp
  name: StartTimeStamp
  nameWithType: StartTimeStamp
  fullName: plc.AXOpen.Core.AxoTask.StartTimeStamp
  parent: plc.AXOpen.Core.AxoTask.StartTimeStamp
- uid: plc.AXOpen.Core.AxoTask.ErrorDetails
  commentId: plc.AXOpen.Core.AxoTask.ErrorDetails
  name: ErrorDetails
  nameWithType: ErrorDetails
  fullName: plc.AXOpen.Core.AxoTask.ErrorDetails
  parent: plc.AXOpen.Core.AxoTask.ErrorDetails
- uid: plc.AXOpen.Core.AxoObject.Identity
  commentId: plc.AXOpen.Core.AxoObject.Identity
  name: Identity
  nameWithType: Identity
  fullName: plc.AXOpen.Core.AxoObject.Identity
  parent: plc.AXOpen.Core.AxoObject.Identity
- uid: plc.AXOpen.Core.AxoRemoteTask.Execute()
  commentId: plc.AXOpen.Core.AxoRemoteTask.Execute()
  name: Execute()
  nameWithType: Execute()
  fullName: plc.AXOpen.Core.AxoRemoteTask.Execute()
  parent: plc.AXOpen.Core.AxoRemoteTask.Execute()
- uid: plc.AXOpen.Core.AxoRemoteTask.GetStartSignature()
  commentId: plc.AXOpen.Core.AxoRemoteTask.GetStartSignature()
  name: GetStartSignature()
  nameWithType: GetStartSignature()
  fullName: plc.AXOpen.Core.AxoRemoteTask.GetStartSignature()
  parent: plc.AXOpen.Core.AxoRemoteTask.GetStartSignature()
- uid: plc.AXOpen.Core.AxoRemoteTask.SetDoneSignature()
  commentId: plc.AXOpen.Core.AxoRemoteTask.SetDoneSignature()
  name: SetDoneSignature()
  nameWithType: SetDoneSignature()
  fullName: plc.AXOpen.Core.AxoRemoteTask.SetDoneSignature()
  parent: plc.AXOpen.Core.AxoRemoteTask.SetDoneSignature()
- uid: plc.AXOpen.Core.AxoTask.GetState()
  commentId: plc.AXOpen.Core.AxoTask.GetState()
  name: GetState()
  nameWithType: GetState()
  fullName: plc.AXOpen.Core.AxoTask.GetState()
  parent: plc.AXOpen.Core.AxoTask.GetState()
- uid: plc.AXOpen.Core.AxoTask.GetErrorDetails()
  commentId: plc.AXOpen.Core.AxoTask.GetErrorDetails()
  name: GetErrorDetails()
  nameWithType: GetErrorDetails()
  fullName: plc.AXOpen.Core.AxoTask.GetErrorDetails()
  parent: plc.AXOpen.Core.AxoTask.GetErrorDetails()
- uid: plc.AXOpen.Core.AxoTask.IsReady()
  commentId: plc.AXOpen.Core.AxoTask.IsReady()
  name: IsReady()
  nameWithType: IsReady()
  fullName: plc.AXOpen.Core.AxoTask.IsReady()
  parent: plc.AXOpen.Core.AxoTask.IsReady()
- uid: plc.AXOpen.Core.AxoTask.IsDone()
  commentId: plc.AXOpen.Core.AxoTask.IsDone()
  name: IsDone()
  nameWithType: IsDone()
  fullName: plc.AXOpen.Core.AxoTask.IsDone()
  parent: plc.AXOpen.Core.AxoTask.IsDone()
- uid: plc.AXOpen.Core.AxoTask.IsBusy()
  commentId: plc.AXOpen.Core.AxoTask.IsBusy()
  name: IsBusy()
  nameWithType: IsBusy()
  fullName: plc.AXOpen.Core.AxoTask.IsBusy()
  parent: plc.AXOpen.Core.AxoTask.IsBusy()
- uid: plc.AXOpen.Core.AxoTask.IsAborted()
  commentId: plc.AXOpen.Core.AxoTask.IsAborted()
  name: IsAborted()
  nameWithType: IsAborted()
  fullName: plc.AXOpen.Core.AxoTask.IsAborted()
  parent: plc.AXOpen.Core.AxoTask.IsAborted()
- uid: plc.AXOpen.Core.AxoTask.HasError()
  commentId: plc.AXOpen.Core.AxoTask.HasError()
  name: HasError()
  nameWithType: HasError()
  fullName: plc.AXOpen.Core.AxoTask.HasError()
  parent: plc.AXOpen.Core.AxoTask.HasError()
- uid: plc.AXOpen.Core.AxoTask.IsFirstExecutionCycle()
  commentId: plc.AXOpen.Core.AxoTask.IsFirstExecutionCycle()
  name: IsFirstExecutionCycle()
  nameWithType: IsFirstExecutionCycle()
  fullName: plc.AXOpen.Core.AxoTask.IsFirstExecutionCycle()
  parent: plc.AXOpen.Core.AxoTask.IsFirstExecutionCycle()
- uid: plc.AXOpen.Core.AxoTask.SetSuspendMultipleExecuteCallCheck(BOOL)
  commentId: plc.AXOpen.Core.AxoTask.SetSuspendMultipleExecuteCallCheck(BOOL)
  name: SetSuspendMultipleExecuteCallCheck(BOOL)
  nameWithType: SetSuspendMultipleExecuteCallCheck(BOOL)
  fullName: plc.AXOpen.Core.AxoTask.SetSuspendMultipleExecuteCallCheck(BOOL)
  parent: plc.AXOpen.Core.AxoTask.SetSuspendMultipleExecuteCallCheck(BOOL)
- uid: plc.AXOpen.Core.AxoTask.GetSuspendMultipleExecuteCallCheckState()
  commentId: plc.AXOpen.Core.AxoTask.GetSuspendMultipleExecuteCallCheckState()
  name: GetSuspendMultipleExecuteCallCheckState()
  nameWithType: GetSuspendMultipleExecuteCallCheckState()
  fullName: plc.AXOpen.Core.AxoTask.GetSuspendMultipleExecuteCallCheckState()
  parent: plc.AXOpen.Core.AxoTask.GetSuspendMultipleExecuteCallCheckState()
- uid: plc.AXOpen.Core.AxoTask.IsNewInvokeCall()
  commentId: plc.AXOpen.Core.AxoTask.IsNewInvokeCall()
  name: IsNewInvokeCall()
  nameWithType: IsNewInvokeCall()
  fullName: plc.AXOpen.Core.AxoTask.IsNewInvokeCall()
  parent: plc.AXOpen.Core.AxoTask.IsNewInvokeCall()
- uid: plc.AXOpen.Core.AxoTask.IsNewExecuteCall()
  commentId: plc.AXOpen.Core.AxoTask.IsNewExecuteCall()
  name: IsNewExecuteCall()
  nameWithType: IsNewExecuteCall()
  fullName: plc.AXOpen.Core.AxoTask.IsNewExecuteCall()
  parent: plc.AXOpen.Core.AxoTask.IsNewExecuteCall()
- uid: plc.AXOpen.Core.AxoTask.IsExecuteCalledInThisPlcCycle()
  commentId: plc.AXOpen.Core.AxoTask.IsExecuteCalledInThisPlcCycle()
  name: IsExecuteCalledInThisPlcCycle()
  nameWithType: IsExecuteCalledInThisPlcCycle()
  fullName: plc.AXOpen.Core.AxoTask.IsExecuteCalledInThisPlcCycle()
  parent: plc.AXOpen.Core.AxoTask.IsExecuteCalledInThisPlcCycle()
- uid: plc.AXOpen.Core.AxoTask.WasExecuteCalledInPreviousPlcCycle()
  commentId: plc.AXOpen.Core.AxoTask.WasExecuteCalledInPreviousPlcCycle()
  name: WasExecuteCalledInPreviousPlcCycle()
  nameWithType: WasExecuteCalledInPreviousPlcCycle()
  fullName: plc.AXOpen.Core.AxoTask.WasExecuteCalledInPreviousPlcCycle()
  parent: plc.AXOpen.Core.AxoTask.WasExecuteCalledInPreviousPlcCycle()
- uid: plc.AXOpen.Core.AxoTask.UpdateState()
  commentId: plc.AXOpen.Core.AxoTask.UpdateState()
  name: UpdateState()
  nameWithType: UpdateState()
  fullName: plc.AXOpen.Core.AxoTask.UpdateState()
  parent: plc.AXOpen.Core.AxoTask.UpdateState()
- uid: plc.AXOpen.Core.AxoTask.Invoke()
  commentId: plc.AXOpen.Core.AxoTask.Invoke()
  name: Invoke()
  nameWithType: Invoke()
  fullName: plc.AXOpen.Core.AxoTask.Invoke()
  parent: plc.AXOpen.Core.AxoTask.Invoke()
- uid: plc.AXOpen.Core.AxoTask.Restore()
  commentId: plc.AXOpen.Core.AxoTask.Restore()
  name: Restore()
  nameWithType: Restore()
  fullName: plc.AXOpen.Core.AxoTask.Restore()
  parent: plc.AXOpen.Core.AxoTask.Restore()
- uid: plc.AXOpen.Core.AxoTask.DoneWhen(BOOL)
  commentId: plc.AXOpen.Core.AxoTask.DoneWhen(BOOL)
  name: DoneWhen(BOOL)
  nameWithType: DoneWhen(BOOL)
  fullName: plc.AXOpen.Core.AxoTask.DoneWhen(BOOL)
  parent: plc.AXOpen.Core.AxoTask.DoneWhen(BOOL)
- uid: plc.AXOpen.Core.AxoTask.Execute()
  commentId: plc.AXOpen.Core.AxoTask.Execute()
  name: Execute()
  nameWithType: Execute()
  fullName: plc.AXOpen.Core.AxoTask.Execute()
  parent: plc.AXOpen.Core.AxoTask.Execute()
- uid: plc.AXOpen.Core.AxoTask.LogTask(STRING[80],eLogLevel,IAxoObject)
  commentId: plc.AXOpen.Core.AxoTask.LogTask(STRING[80],eLogLevel,IAxoObject)
  name: LogTask(STRING[80],eLogLevel,IAxoObject)
  nameWithType: LogTask(STRING[80],eLogLevel,IAxoObject)
  fullName: plc.AXOpen.Core.AxoTask.LogTask(STRING[80],eLogLevel,IAxoObject)
  parent: plc.AXOpen.Core.AxoTask.LogTask(STRING[80],eLogLevel,IAxoObject)
- uid: plc.AXOpen.Core.AxoTask.ThrowWhen(BOOL)
  commentId: plc.AXOpen.Core.AxoTask.ThrowWhen(BOOL)
  name: ThrowWhen(BOOL)
  nameWithType: ThrowWhen(BOOL)
  fullName: plc.AXOpen.Core.AxoTask.ThrowWhen(BOOL)
  parent: plc.AXOpen.Core.AxoTask.ThrowWhen(BOOL)
- uid: plc.AXOpen.Core.AxoTask.ThrowWhen(BOOL,STRING[254])
  commentId: plc.AXOpen.Core.AxoTask.ThrowWhen(BOOL,STRING[254])
  name: ThrowWhen(BOOL,STRING[254])
  nameWithType: ThrowWhen(BOOL,STRING[254])
  fullName: plc.AXOpen.Core.AxoTask.ThrowWhen(BOOL,STRING[254])
  parent: plc.AXOpen.Core.AxoTask.ThrowWhen(BOOL,STRING[254])
- uid: plc.AXOpen.Core.AxoTask.SetIsDisabled(BOOL)
  commentId: plc.AXOpen.Core.AxoTask.SetIsDisabled(BOOL)
  name: SetIsDisabled(BOOL)
  nameWithType: SetIsDisabled(BOOL)
  fullName: plc.AXOpen.Core.AxoTask.SetIsDisabled(BOOL)
  parent: plc.AXOpen.Core.AxoTask.SetIsDisabled(BOOL)
- uid: plc.AXOpen.Core.AxoTask.GetIsDisabled()
  commentId: plc.AXOpen.Core.AxoTask.GetIsDisabled()
  name: GetIsDisabled()
  nameWithType: GetIsDisabled()
  fullName: plc.AXOpen.Core.AxoTask.GetIsDisabled()
  parent: plc.AXOpen.Core.AxoTask.GetIsDisabled()
- uid: plc.AXOpen.Core.AxoTask.Abort()
  commentId: plc.AXOpen.Core.AxoTask.Abort()
  name: Abort()
  nameWithType: Abort()
  fullName: plc.AXOpen.Core.AxoTask.Abort()
  parent: plc.AXOpen.Core.AxoTask.Abort()
- uid: plc.AXOpen.Core.AxoTask.Resume()
  commentId: plc.AXOpen.Core.AxoTask.Resume()
  name: Resume()
  nameWithType: Resume()
  fullName: plc.AXOpen.Core.AxoTask.Resume()
  parent: plc.AXOpen.Core.AxoTask.Resume()
- uid: plc.AXOpen.Core.AxoTask.SetRemoteRestoreEnabled(BOOL)
  commentId: plc.AXOpen.Core.AxoTask.SetRemoteRestoreEnabled(BOOL)
  name: SetRemoteRestoreEnabled(BOOL)
  nameWithType: SetRemoteRestoreEnabled(BOOL)
  fullName: plc.AXOpen.Core.AxoTask.SetRemoteRestoreEnabled(BOOL)
  parent: plc.AXOpen.Core.AxoTask.SetRemoteRestoreEnabled(BOOL)
- uid: plc.AXOpen.Core.AxoTask.GetRemoteRestoreEnabled()
  commentId: plc.AXOpen.Core.AxoTask.GetRemoteRestoreEnabled()
  name: GetRemoteRestoreEnabled()
  nameWithType: GetRemoteRestoreEnabled()
  fullName: plc.AXOpen.Core.AxoTask.GetRemoteRestoreEnabled()
  parent: plc.AXOpen.Core.AxoTask.GetRemoteRestoreEnabled()
- uid: plc.AXOpen.Core.AxoTask.SetRemoteAbortEnabled(BOOL)
  commentId: plc.AXOpen.Core.AxoTask.SetRemoteAbortEnabled(BOOL)
  name: SetRemoteAbortEnabled(BOOL)
  nameWithType: SetRemoteAbortEnabled(BOOL)
  fullName: plc.AXOpen.Core.AxoTask.SetRemoteAbortEnabled(BOOL)
  parent: plc.AXOpen.Core.AxoTask.SetRemoteAbortEnabled(BOOL)
- uid: plc.AXOpen.Core.AxoTask.GetRemoteAbortEnabled()
  commentId: plc.AXOpen.Core.AxoTask.GetRemoteAbortEnabled()
  name: GetRemoteAbortEnabled()
  nameWithType: GetRemoteAbortEnabled()
  fullName: plc.AXOpen.Core.AxoTask.GetRemoteAbortEnabled()
  parent: plc.AXOpen.Core.AxoTask.GetRemoteAbortEnabled()
- uid: plc.AXOpen.Core.AxoTask.OnAbort()
  commentId: plc.AXOpen.Core.AxoTask.OnAbort()
  name: OnAbort()
  nameWithType: OnAbort()
  fullName: plc.AXOpen.Core.AxoTask.OnAbort()
  parent: plc.AXOpen.Core.AxoTask.OnAbort()
- uid: plc.AXOpen.Core.AxoTask.OnResume()
  commentId: plc.AXOpen.Core.AxoTask.OnResume()
  name: OnResume()
  nameWithType: OnResume()
  fullName: plc.AXOpen.Core.AxoTask.OnResume()
  parent: plc.AXOpen.Core.AxoTask.OnResume()
- uid: plc.AXOpen.Core.AxoTask.OnDone()
  commentId: plc.AXOpen.Core.AxoTask.OnDone()
  name: OnDone()
  nameWithType: OnDone()
  fullName: plc.AXOpen.Core.AxoTask.OnDone()
  parent: plc.AXOpen.Core.AxoTask.OnDone()
- uid: plc.AXOpen.Core.AxoTask.OnError()
  commentId: plc.AXOpen.Core.AxoTask.OnError()
  name: OnError()
  nameWithType: OnError()
  fullName: plc.AXOpen.Core.AxoTask.OnError()
  parent: plc.AXOpen.Core.AxoTask.OnError()
- uid: plc.AXOpen.Core.AxoTask.OnRestore()
  commentId: plc.AXOpen.Core.AxoTask.OnRestore()
  name: OnRestore()
  nameWithType: OnRestore()
  fullName: plc.AXOpen.Core.AxoTask.OnRestore()
  parent: plc.AXOpen.Core.AxoTask.OnRestore()
- uid: plc.AXOpen.Core.AxoTask.OnStart()
  commentId: plc.AXOpen.Core.AxoTask.OnStart()
  name: OnStart()
  nameWithType: OnStart()
  fullName: plc.AXOpen.Core.AxoTask.OnStart()
  parent: plc.AXOpen.Core.AxoTask.OnStart()
- uid: plc.AXOpen.Core.AxoTask.WhileError()
  commentId: plc.AXOpen.Core.AxoTask.WhileError()
  name: WhileError()
  nameWithType: WhileError()
  fullName: plc.AXOpen.Core.AxoTask.WhileError()
  parent: plc.AXOpen.Core.AxoTask.WhileError()
- uid: plc.AXOpen.Core.AxoTask.AbortTriggered()
  commentId: plc.AXOpen.Core.AxoTask.AbortTriggered()
  name: AbortTriggered()
  nameWithType: AbortTriggered()
  fullName: plc.AXOpen.Core.AxoTask.AbortTriggered()
  parent: plc.AXOpen.Core.AxoTask.AbortTriggered()
- uid: plc.AXOpen.Core.AxoTask.ResumeTriggered()
  commentId: plc.AXOpen.Core.AxoTask.ResumeTriggered()
  name: ResumeTriggered()
  nameWithType: ResumeTriggered()
  fullName: plc.AXOpen.Core.AxoTask.ResumeTriggered()
  parent: plc.AXOpen.Core.AxoTask.ResumeTriggered()
- uid: plc.AXOpen.Core.AxoTask.DoneReached()
  commentId: plc.AXOpen.Core.AxoTask.DoneReached()
  name: DoneReached()
  nameWithType: DoneReached()
  fullName: plc.AXOpen.Core.AxoTask.DoneReached()
  parent: plc.AXOpen.Core.AxoTask.DoneReached()
- uid: plc.AXOpen.Core.AxoTask.ErrorOccured()
  commentId: plc.AXOpen.Core.AxoTask.ErrorOccured()
  name: ErrorOccured()
  nameWithType: ErrorOccured()
  fullName: plc.AXOpen.Core.AxoTask.ErrorOccured()
  parent: plc.AXOpen.Core.AxoTask.ErrorOccured()
- uid: plc.AXOpen.Core.AxoTask.RestoreTriggered()
  commentId: plc.AXOpen.Core.AxoTask.RestoreTriggered()
  name: RestoreTriggered()
  nameWithType: RestoreTriggered()
  fullName: plc.AXOpen.Core.AxoTask.RestoreTriggered()
  parent: plc.AXOpen.Core.AxoTask.RestoreTriggered()
- uid: plc.AXOpen.Core.AxoTask.StartTriggered()
  commentId: plc.AXOpen.Core.AxoTask.StartTriggered()
  name: StartTriggered()
  nameWithType: StartTriggered()
  fullName: plc.AXOpen.Core.AxoTask.StartTriggered()
  parent: plc.AXOpen.Core.AxoTask.StartTriggered()
- uid: plc.AXOpen.Core.AxoObject.GetIdentity()
  commentId: plc.AXOpen.Core.AxoObject.GetIdentity()
  name: GetIdentity()
  nameWithType: GetIdentity()
  fullName: plc.AXOpen.Core.AxoObject.GetIdentity()
  parent: plc.AXOpen.Core.AxoObject.GetIdentity()
- uid: plc.AXOpen.Core.AxoObject.GetContext()
  commentId: plc.AXOpen.Core.AxoObject.GetContext()
  name: GetContext()
  nameWithType: GetContext()
  fullName: plc.AXOpen.Core.AxoObject.GetContext()
  parent: plc.AXOpen.Core.AxoObject.GetContext()
- uid: plc.AXOpen.Core.AxoObject.GetContextUnsafe()
  commentId: plc.AXOpen.Core.AxoObject.GetContextUnsafe()
  name: GetContextUnsafe()
  nameWithType: GetContextUnsafe()
  fullName: plc.AXOpen.Core.AxoObject.GetContextUnsafe()
  parent: plc.AXOpen.Core.AxoObject.GetContextUnsafe()
- uid: plc.AXOpen.Core.AxoObject.GetParent()
  commentId: plc.AXOpen.Core.AxoObject.GetParent()
  name: GetParent()
  nameWithType: GetParent()
  fullName: plc.AXOpen.Core.AxoObject.GetParent()
  parent: plc.AXOpen.Core.AxoObject.GetParent()
- uid: plc.AXOpen.Core.AxoObject.Initialize(IAxoObject)
  commentId: plc.AXOpen.Core.AxoObject.Initialize(IAxoObject)
  name: Initialize(IAxoObject)
  nameWithType: Initialize(IAxoObject)
  fullName: plc.AXOpen.Core.AxoObject.Initialize(IAxoObject)
  parent: plc.AXOpen.Core.AxoObject.Initialize(IAxoObject)
- uid: plc.AXOpen.Core.AxoObject.Initialize(IAxoContext)
  commentId: plc.AXOpen.Core.AxoObject.Initialize(IAxoContext)
  name: Initialize(IAxoContext)
  nameWithType: Initialize(IAxoContext)
  fullName: plc.AXOpen.Core.AxoObject.Initialize(IAxoContext)
  parent: plc.AXOpen.Core.AxoObject.Initialize(IAxoContext)
- uid: plc.AXOpen.Data.IAxoEntityExistTaskState
  commentId: plc.AXOpen.Data.IAxoEntityExistTaskState
  name: IAxoEntityExistTaskState
  nameWithType: IAxoEntityExistTaskState
  fullName: plc.AXOpen.Data.IAxoEntityExistTaskState
  parent: plc.AXOpen.Data.IAxoEntityExistTaskState
- uid: plc.AXOpen.Core.IAxoTask
  commentId: plc.AXOpen.Core.IAxoTask
  name: IAxoTask
  nameWithType: IAxoTask
  fullName: plc.AXOpen.Core.IAxoTask
  parent: plc.AXOpen.Core.IAxoTask
- uid: plc.AXOpen.Data.eCrudOperation
  name: eCrudOperation
  nameWithType: eCrudOperation
  fullName: AXOpen.Data.eCrudOperation
- uid: plc.STRING[254]
  name: STRING[254]
  nameWithType: STRING[254]
  fullName: STRING[254]
- uid: plc.BOOL
  name: BOOL
  nameWithType: BOOL
  fullName: BOOL
- uid: plc.AXOpen.Core.IAxoTaskState
  name: IAxoTaskState
  nameWithType: IAxoTaskState
  fullName: AXOpen.Core.IAxoTaskState


