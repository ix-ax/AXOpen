## YamlMime:ManagedReference
items:
- uid: plc.AXOpen.Inspectors.AxoInspectorTask
  id: plc.AXOpen.Inspectors.AxoInspectorTask
  parent: plc.AXOpen.Inspectors
  children:
  - plc.AXOpen.Inspectors.AxoInspectorTask._onDoneFlag
  - plc.AXOpen.Inspectors.AxoInspectorTask._inspectionData
  - plc.AXOpen.Inspectors.AxoInspectorTask._passTimer
  - plc.AXOpen.Inspectors.AxoInspectorTask._failTimer
  - plc.AXOpen.Inspectors.AxoInspectorTask.InspectionData()
  - plc.AXOpen.Inspectors.AxoInspectorTask.SetInspectionData(REF_TO AXOpen.Inspectors.AxoInspectorData)
  - plc.AXOpen.Inspectors.AxoInspectorTask.OnDoneFlag()
  - plc.AXOpen.Inspectors.AxoInspectorTask.Execute()
  - plc.AXOpen.Inspectors.AxoInspectorTask.OnStart()
  - plc.AXOpen.Inspectors.AxoInspectorTask.Restore()
  - plc.AXOpen.Inspectors.AxoInspectorTask.OnDone()
  name: AxoInspectorTask
  fullName: AxoInspectorTask
  type: Class
  source:
    remote:
      path: .\src\inspectors\ctrl\src\AxoInspectorTask.st
      branch: 209-_NEW-FEATURE_Create_library_for_Rexroth_drives
      repo: https://github.com/ix-ax/AXOpen.git
    id: plc.AXOpen.Inspectors.AxoInspectorTask
    path: .\src\inspectors\ctrl\src\AxoInspectorTask.st
    startLine: 8
  namespace: plc.AXOpen.Inspectors
  syntax:
    content: CLASS AxoInspectorTask
  inheritance:
  - plc.AXOpen.Core.AxoTask
  - plc.AXOpen.Core.AxoObject
  inheritedMembers:
  - plc.AXOpen.Core.AxoTask.Status
  - plc.AXOpen.Core.AxoTask.IsDisabled
  - plc.AXOpen.Core.AxoTask.RemoteInvoke
  - plc.AXOpen.Core.AxoTask.RemoteRestore
  - plc.AXOpen.Core.AxoTask.RemoteAbort
  - plc.AXOpen.Core.AxoTask.RemoteResume
  - plc.AXOpen.Core.AxoTask.StartSignature
  - plc.AXOpen.Core.AxoTask.Duration
  - plc.AXOpen.Core.AxoTask.StartTimeStamp
  - plc.AXOpen.Core.AxoTask.ErrorDetails
  - plc.AXOpen.Core.AxoTask._CyclicExecuteIsNotCalled
  - plc.AXOpen.Core.AxoObject.Identity
  - plc.AXOpen.Core.AxoTask.GetState()
  - plc.AXOpen.Core.AxoTask.GetErrorDetails()
  - plc.AXOpen.Core.AxoTask.IsReady()
  - plc.AXOpen.Core.AxoTask.IsDone()
  - plc.AXOpen.Core.AxoTask.IsBusy()
  - plc.AXOpen.Core.AxoTask.IsAborted()
  - plc.AXOpen.Core.AxoTask.HasError()
  - plc.AXOpen.Core.AxoTask.IsInvokeCalled()
  - plc.AXOpen.Core.AxoTask.IsNewInvokeCall()
  - plc.AXOpen.Core.AxoTask.IsInvokeCalledInThisPlcCycle()
  - plc.AXOpen.Core.AxoTask.WasInvokeCalledInPreviousPlcCycle()
  - plc.AXOpen.Core.AxoTask.IsNewExecuteCall()
  - plc.AXOpen.Core.AxoTask.IsExecuteCalledInThisPlcCycle()
  - plc.AXOpen.Core.AxoTask.WasExecuteCalledInPreviousPlcCycle()
  - plc.AXOpen.Core.AxoTask.UpdateState()
  - plc.AXOpen.Core.AxoTask.Invoke()
  - plc.AXOpen.Core.AxoTask.Restore()
  - plc.AXOpen.Core.AxoTask.DoneWhen(BOOL)
  - plc.AXOpen.Core.AxoTask.Execute()
  - plc.AXOpen.Core.AxoTask.LogTask(STRING[80],eLogLevel,IAxoObject)
  - plc.AXOpen.Core.AxoTask.ThrowWhen(BOOL)
  - plc.AXOpen.Core.AxoTask.ThrowWhen(BOOL,STRING[254])
  - plc.AXOpen.Core.AxoTask.SetIsDisabled(BOOL)
  - plc.AXOpen.Core.AxoTask.GetIsDisabled()
  - plc.AXOpen.Core.AxoTask.Abort()
  - plc.AXOpen.Core.AxoTask.Resume()
  - plc.AXOpen.Core.AxoTask.OnAbort()
  - plc.AXOpen.Core.AxoTask.OnResume()
  - plc.AXOpen.Core.AxoTask.OnDone()
  - plc.AXOpen.Core.AxoTask.OnError()
  - plc.AXOpen.Core.AxoTask.OnRestore()
  - plc.AXOpen.Core.AxoTask.OnStart()
  - plc.AXOpen.Core.AxoTask.WhileError()
  - plc.AXOpen.Core.AxoObject.GetIdentity()
  - plc.AXOpen.Core.AxoObject.GetContext()
  - plc.AXOpen.Core.AxoObject.GetParent()
  - plc.AXOpen.Core.AxoObject.Initialize(IAxoObject)
  - plc.AXOpen.Core.AxoObject.Initialize(IAxoContext)
  implements:
  - plc.AXOpen.Core.IAxoTask
  - plc.AXOpen.Core.IAxoTaskState
- uid: plc.AXOpen.Inspectors.AxoInspectorTask._onDoneFlag
  id: plc.AXOpen.Inspectors.AxoInspectorTask._onDoneFlag
  parent: AXOpen.Inspectors
  children: []
  name: _onDoneFlag
  fullName: _onDoneFlag
  type: Property
  source:
    remote:
      path: .\src\inspectors\ctrl\src\AxoInspectorTask.st
      branch: 209-_NEW-FEATURE_Create_library_for_Rexroth_drives
      repo: https://github.com/ix-ax/AXOpen.git
    id: plc.AXOpen.Inspectors.AxoInspectorTask._onDoneFlag
    path: .\src\inspectors\ctrl\src\AxoInspectorTask.st
    startLine: 11
  namespace: plc.AXOpen.Inspectors
  syntax:
    content: '_onDoneFlag : BOOL'
    return:
      type: BOOL
- uid: plc.AXOpen.Inspectors.AxoInspectorTask._inspectionData
  id: plc.AXOpen.Inspectors.AxoInspectorTask._inspectionData
  parent: AXOpen.Inspectors
  children: []
  name: _inspectionData
  fullName: _inspectionData
  type: Property
  source:
    remote:
      path: .\src\inspectors\ctrl\src\AxoInspectorTask.st
      branch: 209-_NEW-FEATURE_Create_library_for_Rexroth_drives
      repo: https://github.com/ix-ax/AXOpen.git
    id: plc.AXOpen.Inspectors.AxoInspectorTask._inspectionData
    path: .\src\inspectors\ctrl\src\AxoInspectorTask.st
    startLine: 11
  namespace: plc.AXOpen.Inspectors
  syntax:
    content: '_inspectionData : REF_TO AXOpen.Inspectors.AxoInspectorData'
    return:
      type: REF_TO AXOpen.Inspectors.AxoInspectorData
- uid: plc.AXOpen.Inspectors.AxoInspectorTask._passTimer
  id: plc.AXOpen.Inspectors.AxoInspectorTask._passTimer
  parent: AXOpen.Inspectors
  children: []
  name: _passTimer
  fullName: _passTimer
  type: Property
  source:
    remote:
      path: .\src\inspectors\ctrl\src\AxoInspectorTask.st
      branch: 209-_NEW-FEATURE_Create_library_for_Rexroth_drives
      repo: https://github.com/ix-ax/AXOpen.git
    id: plc.AXOpen.Inspectors.AxoInspectorTask._passTimer
    path: .\src\inspectors\ctrl\src\AxoInspectorTask.st
    startLine: 16
  namespace: plc.AXOpen.Inspectors
  syntax:
    content: '_passTimer : UNDEFINED'
    return:
      type: UNDEFINED
- uid: plc.AXOpen.Inspectors.AxoInspectorTask._failTimer
  id: plc.AXOpen.Inspectors.AxoInspectorTask._failTimer
  parent: AXOpen.Inspectors
  children: []
  name: _failTimer
  fullName: _failTimer
  type: Property
  source:
    remote:
      path: .\src\inspectors\ctrl\src\AxoInspectorTask.st
      branch: 209-_NEW-FEATURE_Create_library_for_Rexroth_drives
      repo: https://github.com/ix-ax/AXOpen.git
    id: plc.AXOpen.Inspectors.AxoInspectorTask._failTimer
    path: .\src\inspectors\ctrl\src\AxoInspectorTask.st
    startLine: 17
  namespace: plc.AXOpen.Inspectors
  syntax:
    content: '_failTimer : UNDEFINED'
    return:
      type: UNDEFINED
- uid: plc.AXOpen.Inspectors.AxoInspectorTask.InspectionData()
  id: plc.AXOpen.Inspectors.AxoInspectorTask.InspectionData()
  parent: AXOpen.Inspectors.AxoInspectorTask
  children: []
  name: InspectionData
  fullName: InspectionData
  type: Method
  source:
    remote:
      path: .\src\inspectors\ctrl\src\AxoInspectorTask.st
      branch: 209-_NEW-FEATURE_Create_library_for_Rexroth_drives
      repo: https://github.com/ix-ax/AXOpen.git
    id: plc.AXOpen.Inspectors.AxoInspectorTask.InspectionData
    path: .\src\inspectors\ctrl\src\AxoInspectorTask.st
    startLine: 22
  namespace: plc.AXOpen.Inspectors
  syntax:
    content: Public REF_TO AXOpen.Inspectors.AxoInspectorData InspectionData()
    parameters: &o0 []
    return:
      type: plc.REF_TO AXOpen.Inspectors.AxoInspectorData
- uid: plc.AXOpen.Inspectors.AxoInspectorTask.SetInspectionData(REF_TO AXOpen.Inspectors.AxoInspectorData)
  id: plc.AXOpen.Inspectors.AxoInspectorTask.SetInspectionData(REF_TO AXOpen.Inspectors.AxoInspectorData)
  parent: AXOpen.Inspectors.AxoInspectorTask
  children: []
  name: SetInspectionData
  fullName: SetInspectionData
  type: Method
  source:
    remote:
      path: .\src\inspectors\ctrl\src\AxoInspectorTask.st
      branch: 209-_NEW-FEATURE_Create_library_for_Rexroth_drives
      repo: https://github.com/ix-ax/AXOpen.git
    id: plc.AXOpen.Inspectors.AxoInspectorTask.SetInspectionData
    path: .\src\inspectors\ctrl\src\AxoInspectorTask.st
    startLine: 27
  namespace: plc.AXOpen.Inspectors
  syntax:
    content: Internal REF_TO AXOpen.Inspectors.AxoInspectorData SetInspectionData(in plc.REF_TO AXOpen.Inspectors.AxoInspectorData inInspectionData)
    parameters:
    - id: inInspectionData
      type: plc.REF_TO AXOpen.Inspectors.AxoInspectorData
    return:
      type: plc.REF_TO AXOpen.Inspectors.AxoInspectorData
- uid: plc.AXOpen.Inspectors.AxoInspectorTask.OnDoneFlag()
  id: plc.AXOpen.Inspectors.AxoInspectorTask.OnDoneFlag()
  parent: AXOpen.Inspectors.AxoInspectorTask
  children: []
  name: OnDoneFlag
  fullName: OnDoneFlag
  type: Method
  source:
    remote:
      path: .\src\inspectors\ctrl\src\AxoInspectorTask.st
      branch: 209-_NEW-FEATURE_Create_library_for_Rexroth_drives
      repo: https://github.com/ix-ax/AXOpen.git
    id: plc.AXOpen.Inspectors.AxoInspectorTask.OnDoneFlag
    path: .\src\inspectors\ctrl\src\AxoInspectorTask.st
    startLine: 37
  namespace: plc.AXOpen.Inspectors
  syntax:
    content: Public BOOL OnDoneFlag()
    parameters: *o0
    return:
      type: plc.BOOL
- uid: plc.AXOpen.Inspectors.AxoInspectorTask.Execute()
  id: plc.AXOpen.Inspectors.AxoInspectorTask.Execute()
  parent: AXOpen.Inspectors.AxoInspectorTask
  children: []
  name: Execute
  fullName: Execute
  type: Method
  source:
    remote:
      path: .\src\inspectors\ctrl\src\AxoInspectorTask.st
      branch: 209-_NEW-FEATURE_Create_library_for_Rexroth_drives
      repo: https://github.com/ix-ax/AXOpen.git
    id: plc.AXOpen.Inspectors.AxoInspectorTask.Execute
    path: .\src\inspectors\ctrl\src\AxoInspectorTask.st
    startLine: 46
  namespace: plc.AXOpen.Inspectors
  summary: Execute inspection task.
  syntax:
    content: Public BOOL Execute()
    parameters: *o0
    return:
      type: plc.BOOL
- uid: plc.AXOpen.Inspectors.AxoInspectorTask.OnStart()
  id: plc.AXOpen.Inspectors.AxoInspectorTask.OnStart()
  parent: AXOpen.Inspectors.AxoInspectorTask
  children: []
  name: OnStart
  fullName: OnStart
  type: Method
  source:
    remote:
      path: .\src\inspectors\ctrl\src\AxoInspectorTask.st
      branch: 209-_NEW-FEATURE_Create_library_for_Rexroth_drives
      repo: https://github.com/ix-ax/AXOpen.git
    id: plc.AXOpen.Inspectors.AxoInspectorTask.OnStart
    path: .\src\inspectors\ctrl\src\AxoInspectorTask.st
    startLine: 55
  namespace: plc.AXOpen.Inspectors
  summary: Executes once when inspection starts.
  syntax:
    content: Protected VOID OnStart()
    parameters: *o0
    return:
      type: VOID
- uid: plc.AXOpen.Inspectors.AxoInspectorTask.Restore()
  id: plc.AXOpen.Inspectors.AxoInspectorTask.Restore()
  parent: AXOpen.Inspectors.AxoInspectorTask
  children: []
  name: Restore
  fullName: Restore
  type: Method
  source:
    remote:
      path: .\src\inspectors\ctrl\src\AxoInspectorTask.st
      branch: 209-_NEW-FEATURE_Create_library_for_Rexroth_drives
      repo: https://github.com/ix-ax/AXOpen.git
    id: plc.AXOpen.Inspectors.AxoInspectorTask.Restore
    path: .\src\inspectors\ctrl\src\AxoInspectorTask.st
    startLine: 77
  namespace: plc.AXOpen.Inspectors
  syntax:
    content: Public VOID Restore()
    parameters: *o0
    return:
      type: VOID
- uid: plc.AXOpen.Inspectors.AxoInspectorTask.OnDone()
  id: plc.AXOpen.Inspectors.AxoInspectorTask.OnDone()
  parent: AXOpen.Inspectors.AxoInspectorTask
  children: []
  name: OnDone
  fullName: OnDone
  type: Method
  source:
    remote:
      path: .\src\inspectors\ctrl\src\AxoInspectorTask.st
      branch: 209-_NEW-FEATURE_Create_library_for_Rexroth_drives
      repo: https://github.com/ix-ax/AXOpen.git
    id: plc.AXOpen.Inspectors.AxoInspectorTask.OnDone
    path: .\src\inspectors\ctrl\src\AxoInspectorTask.st
    startLine: 83
  namespace: plc.AXOpen.Inspectors
  summary: When inspection Task is done, evaluate inspection result and write to inspection data.
  syntax:
    content: Protected VOID OnDone()
    parameters: *o0
    return:
      type: VOID
references:
- uid: plc.AXOpen.Core.AxoTask.Status
  commentId: plc.AXOpen.Core.AxoTask.Status
  name: Status
  nameWithType: Status
  fullName: plc.AXOpen.Core.AxoTask.Status
  parent: plc.AXOpen.Core.AxoTask.Status
- uid: plc.AXOpen.Core.AxoTask.IsDisabled
  commentId: plc.AXOpen.Core.AxoTask.IsDisabled
  name: IsDisabled
  nameWithType: IsDisabled
  fullName: plc.AXOpen.Core.AxoTask.IsDisabled
  parent: plc.AXOpen.Core.AxoTask.IsDisabled
- uid: plc.AXOpen.Core.AxoTask.RemoteInvoke
  commentId: plc.AXOpen.Core.AxoTask.RemoteInvoke
  name: RemoteInvoke
  nameWithType: RemoteInvoke
  fullName: plc.AXOpen.Core.AxoTask.RemoteInvoke
  parent: plc.AXOpen.Core.AxoTask.RemoteInvoke
- uid: plc.AXOpen.Core.AxoTask.RemoteRestore
  commentId: plc.AXOpen.Core.AxoTask.RemoteRestore
  name: RemoteRestore
  nameWithType: RemoteRestore
  fullName: plc.AXOpen.Core.AxoTask.RemoteRestore
  parent: plc.AXOpen.Core.AxoTask.RemoteRestore
- uid: plc.AXOpen.Core.AxoTask.RemoteAbort
  commentId: plc.AXOpen.Core.AxoTask.RemoteAbort
  name: RemoteAbort
  nameWithType: RemoteAbort
  fullName: plc.AXOpen.Core.AxoTask.RemoteAbort
  parent: plc.AXOpen.Core.AxoTask.RemoteAbort
- uid: plc.AXOpen.Core.AxoTask.RemoteResume
  commentId: plc.AXOpen.Core.AxoTask.RemoteResume
  name: RemoteResume
  nameWithType: RemoteResume
  fullName: plc.AXOpen.Core.AxoTask.RemoteResume
  parent: plc.AXOpen.Core.AxoTask.RemoteResume
- uid: plc.AXOpen.Core.AxoTask.StartSignature
  commentId: plc.AXOpen.Core.AxoTask.StartSignature
  name: StartSignature
  nameWithType: StartSignature
  fullName: plc.AXOpen.Core.AxoTask.StartSignature
  parent: plc.AXOpen.Core.AxoTask.StartSignature
- uid: plc.AXOpen.Core.AxoTask.Duration
  commentId: plc.AXOpen.Core.AxoTask.Duration
  name: Duration
  nameWithType: Duration
  fullName: plc.AXOpen.Core.AxoTask.Duration
  parent: plc.AXOpen.Core.AxoTask.Duration
- uid: plc.AXOpen.Core.AxoTask.StartTimeStamp
  commentId: plc.AXOpen.Core.AxoTask.StartTimeStamp
  name: StartTimeStamp
  nameWithType: StartTimeStamp
  fullName: plc.AXOpen.Core.AxoTask.StartTimeStamp
  parent: plc.AXOpen.Core.AxoTask.StartTimeStamp
- uid: plc.AXOpen.Core.AxoTask.ErrorDetails
  commentId: plc.AXOpen.Core.AxoTask.ErrorDetails
  name: ErrorDetails
  nameWithType: ErrorDetails
  fullName: plc.AXOpen.Core.AxoTask.ErrorDetails
  parent: plc.AXOpen.Core.AxoTask.ErrorDetails
- uid: plc.AXOpen.Core.AxoTask._CyclicExecuteIsNotCalled
  commentId: plc.AXOpen.Core.AxoTask._CyclicExecuteIsNotCalled
  name: _CyclicExecuteIsNotCalled
  nameWithType: _CyclicExecuteIsNotCalled
  fullName: plc.AXOpen.Core.AxoTask._CyclicExecuteIsNotCalled
  parent: plc.AXOpen.Core.AxoTask._CyclicExecuteIsNotCalled
- uid: plc.AXOpen.Core.AxoObject.Identity
  commentId: plc.AXOpen.Core.AxoObject.Identity
  name: Identity
  nameWithType: Identity
  fullName: plc.AXOpen.Core.AxoObject.Identity
  parent: plc.AXOpen.Core.AxoObject.Identity
- uid: plc.AXOpen.Core.AxoTask.GetState()
  commentId: plc.AXOpen.Core.AxoTask.GetState()
  name: GetState()
  nameWithType: GetState()
  fullName: plc.AXOpen.Core.AxoTask.GetState()
  parent: plc.AXOpen.Core.AxoTask.GetState()
- uid: plc.AXOpen.Core.AxoTask.GetErrorDetails()
  commentId: plc.AXOpen.Core.AxoTask.GetErrorDetails()
  name: GetErrorDetails()
  nameWithType: GetErrorDetails()
  fullName: plc.AXOpen.Core.AxoTask.GetErrorDetails()
  parent: plc.AXOpen.Core.AxoTask.GetErrorDetails()
- uid: plc.AXOpen.Core.AxoTask.IsReady()
  commentId: plc.AXOpen.Core.AxoTask.IsReady()
  name: IsReady()
  nameWithType: IsReady()
  fullName: plc.AXOpen.Core.AxoTask.IsReady()
  parent: plc.AXOpen.Core.AxoTask.IsReady()
- uid: plc.AXOpen.Core.AxoTask.IsDone()
  commentId: plc.AXOpen.Core.AxoTask.IsDone()
  name: IsDone()
  nameWithType: IsDone()
  fullName: plc.AXOpen.Core.AxoTask.IsDone()
  parent: plc.AXOpen.Core.AxoTask.IsDone()
- uid: plc.AXOpen.Core.AxoTask.IsBusy()
  commentId: plc.AXOpen.Core.AxoTask.IsBusy()
  name: IsBusy()
  nameWithType: IsBusy()
  fullName: plc.AXOpen.Core.AxoTask.IsBusy()
  parent: plc.AXOpen.Core.AxoTask.IsBusy()
- uid: plc.AXOpen.Core.AxoTask.IsAborted()
  commentId: plc.AXOpen.Core.AxoTask.IsAborted()
  name: IsAborted()
  nameWithType: IsAborted()
  fullName: plc.AXOpen.Core.AxoTask.IsAborted()
  parent: plc.AXOpen.Core.AxoTask.IsAborted()
- uid: plc.AXOpen.Core.AxoTask.HasError()
  commentId: plc.AXOpen.Core.AxoTask.HasError()
  name: HasError()
  nameWithType: HasError()
  fullName: plc.AXOpen.Core.AxoTask.HasError()
  parent: plc.AXOpen.Core.AxoTask.HasError()
- uid: plc.AXOpen.Core.AxoTask.IsInvokeCalled()
  commentId: plc.AXOpen.Core.AxoTask.IsInvokeCalled()
  name: IsInvokeCalled()
  nameWithType: IsInvokeCalled()
  fullName: plc.AXOpen.Core.AxoTask.IsInvokeCalled()
  parent: plc.AXOpen.Core.AxoTask.IsInvokeCalled()
- uid: plc.AXOpen.Core.AxoTask.IsNewInvokeCall()
  commentId: plc.AXOpen.Core.AxoTask.IsNewInvokeCall()
  name: IsNewInvokeCall()
  nameWithType: IsNewInvokeCall()
  fullName: plc.AXOpen.Core.AxoTask.IsNewInvokeCall()
  parent: plc.AXOpen.Core.AxoTask.IsNewInvokeCall()
- uid: plc.AXOpen.Core.AxoTask.IsInvokeCalledInThisPlcCycle()
  commentId: plc.AXOpen.Core.AxoTask.IsInvokeCalledInThisPlcCycle()
  name: IsInvokeCalledInThisPlcCycle()
  nameWithType: IsInvokeCalledInThisPlcCycle()
  fullName: plc.AXOpen.Core.AxoTask.IsInvokeCalledInThisPlcCycle()
  parent: plc.AXOpen.Core.AxoTask.IsInvokeCalledInThisPlcCycle()
- uid: plc.AXOpen.Core.AxoTask.WasInvokeCalledInPreviousPlcCycle()
  commentId: plc.AXOpen.Core.AxoTask.WasInvokeCalledInPreviousPlcCycle()
  name: WasInvokeCalledInPreviousPlcCycle()
  nameWithType: WasInvokeCalledInPreviousPlcCycle()
  fullName: plc.AXOpen.Core.AxoTask.WasInvokeCalledInPreviousPlcCycle()
  parent: plc.AXOpen.Core.AxoTask.WasInvokeCalledInPreviousPlcCycle()
- uid: plc.AXOpen.Core.AxoTask.IsNewExecuteCall()
  commentId: plc.AXOpen.Core.AxoTask.IsNewExecuteCall()
  name: IsNewExecuteCall()
  nameWithType: IsNewExecuteCall()
  fullName: plc.AXOpen.Core.AxoTask.IsNewExecuteCall()
  parent: plc.AXOpen.Core.AxoTask.IsNewExecuteCall()
- uid: plc.AXOpen.Core.AxoTask.IsExecuteCalledInThisPlcCycle()
  commentId: plc.AXOpen.Core.AxoTask.IsExecuteCalledInThisPlcCycle()
  name: IsExecuteCalledInThisPlcCycle()
  nameWithType: IsExecuteCalledInThisPlcCycle()
  fullName: plc.AXOpen.Core.AxoTask.IsExecuteCalledInThisPlcCycle()
  parent: plc.AXOpen.Core.AxoTask.IsExecuteCalledInThisPlcCycle()
- uid: plc.AXOpen.Core.AxoTask.WasExecuteCalledInPreviousPlcCycle()
  commentId: plc.AXOpen.Core.AxoTask.WasExecuteCalledInPreviousPlcCycle()
  name: WasExecuteCalledInPreviousPlcCycle()
  nameWithType: WasExecuteCalledInPreviousPlcCycle()
  fullName: plc.AXOpen.Core.AxoTask.WasExecuteCalledInPreviousPlcCycle()
  parent: plc.AXOpen.Core.AxoTask.WasExecuteCalledInPreviousPlcCycle()
- uid: plc.AXOpen.Core.AxoTask.UpdateState()
  commentId: plc.AXOpen.Core.AxoTask.UpdateState()
  name: UpdateState()
  nameWithType: UpdateState()
  fullName: plc.AXOpen.Core.AxoTask.UpdateState()
  parent: plc.AXOpen.Core.AxoTask.UpdateState()
- uid: plc.AXOpen.Core.AxoTask.Invoke()
  commentId: plc.AXOpen.Core.AxoTask.Invoke()
  name: Invoke()
  nameWithType: Invoke()
  fullName: plc.AXOpen.Core.AxoTask.Invoke()
  parent: plc.AXOpen.Core.AxoTask.Invoke()
- uid: plc.AXOpen.Core.AxoTask.Restore()
  commentId: plc.AXOpen.Core.AxoTask.Restore()
  name: Restore()
  nameWithType: Restore()
  fullName: plc.AXOpen.Core.AxoTask.Restore()
  parent: plc.AXOpen.Core.AxoTask.Restore()
- uid: plc.AXOpen.Core.AxoTask.DoneWhen(BOOL)
  commentId: plc.AXOpen.Core.AxoTask.DoneWhen(BOOL)
  name: DoneWhen(BOOL)
  nameWithType: DoneWhen(BOOL)
  fullName: plc.AXOpen.Core.AxoTask.DoneWhen(BOOL)
  parent: plc.AXOpen.Core.AxoTask.DoneWhen(BOOL)
- uid: plc.AXOpen.Core.AxoTask.Execute()
  commentId: plc.AXOpen.Core.AxoTask.Execute()
  name: Execute()
  nameWithType: Execute()
  fullName: plc.AXOpen.Core.AxoTask.Execute()
  parent: plc.AXOpen.Core.AxoTask.Execute()
- uid: plc.AXOpen.Core.AxoTask.LogTask(STRING[80],eLogLevel,IAxoObject)
  commentId: plc.AXOpen.Core.AxoTask.LogTask(STRING[80],eLogLevel,IAxoObject)
  name: LogTask(STRING[80],eLogLevel,IAxoObject)
  nameWithType: LogTask(STRING[80],eLogLevel,IAxoObject)
  fullName: plc.AXOpen.Core.AxoTask.LogTask(STRING[80],eLogLevel,IAxoObject)
  parent: plc.AXOpen.Core.AxoTask.LogTask(STRING[80],eLogLevel,IAxoObject)
- uid: plc.AXOpen.Core.AxoTask.ThrowWhen(BOOL)
  commentId: plc.AXOpen.Core.AxoTask.ThrowWhen(BOOL)
  name: ThrowWhen(BOOL)
  nameWithType: ThrowWhen(BOOL)
  fullName: plc.AXOpen.Core.AxoTask.ThrowWhen(BOOL)
  parent: plc.AXOpen.Core.AxoTask.ThrowWhen(BOOL)
- uid: plc.AXOpen.Core.AxoTask.ThrowWhen(BOOL,STRING[254])
  commentId: plc.AXOpen.Core.AxoTask.ThrowWhen(BOOL,STRING[254])
  name: ThrowWhen(BOOL,STRING[254])
  nameWithType: ThrowWhen(BOOL,STRING[254])
  fullName: plc.AXOpen.Core.AxoTask.ThrowWhen(BOOL,STRING[254])
  parent: plc.AXOpen.Core.AxoTask.ThrowWhen(BOOL,STRING[254])
- uid: plc.AXOpen.Core.AxoTask.SetIsDisabled(BOOL)
  commentId: plc.AXOpen.Core.AxoTask.SetIsDisabled(BOOL)
  name: SetIsDisabled(BOOL)
  nameWithType: SetIsDisabled(BOOL)
  fullName: plc.AXOpen.Core.AxoTask.SetIsDisabled(BOOL)
  parent: plc.AXOpen.Core.AxoTask.SetIsDisabled(BOOL)
- uid: plc.AXOpen.Core.AxoTask.GetIsDisabled()
  commentId: plc.AXOpen.Core.AxoTask.GetIsDisabled()
  name: GetIsDisabled()
  nameWithType: GetIsDisabled()
  fullName: plc.AXOpen.Core.AxoTask.GetIsDisabled()
  parent: plc.AXOpen.Core.AxoTask.GetIsDisabled()
- uid: plc.AXOpen.Core.AxoTask.Abort()
  commentId: plc.AXOpen.Core.AxoTask.Abort()
  name: Abort()
  nameWithType: Abort()
  fullName: plc.AXOpen.Core.AxoTask.Abort()
  parent: plc.AXOpen.Core.AxoTask.Abort()
- uid: plc.AXOpen.Core.AxoTask.Resume()
  commentId: plc.AXOpen.Core.AxoTask.Resume()
  name: Resume()
  nameWithType: Resume()
  fullName: plc.AXOpen.Core.AxoTask.Resume()
  parent: plc.AXOpen.Core.AxoTask.Resume()
- uid: plc.AXOpen.Core.AxoTask.OnAbort()
  commentId: plc.AXOpen.Core.AxoTask.OnAbort()
  name: OnAbort()
  nameWithType: OnAbort()
  fullName: plc.AXOpen.Core.AxoTask.OnAbort()
  parent: plc.AXOpen.Core.AxoTask.OnAbort()
- uid: plc.AXOpen.Core.AxoTask.OnResume()
  commentId: plc.AXOpen.Core.AxoTask.OnResume()
  name: OnResume()
  nameWithType: OnResume()
  fullName: plc.AXOpen.Core.AxoTask.OnResume()
  parent: plc.AXOpen.Core.AxoTask.OnResume()
- uid: plc.AXOpen.Core.AxoTask.OnDone()
  commentId: plc.AXOpen.Core.AxoTask.OnDone()
  name: OnDone()
  nameWithType: OnDone()
  fullName: plc.AXOpen.Core.AxoTask.OnDone()
  parent: plc.AXOpen.Core.AxoTask.OnDone()
- uid: plc.AXOpen.Core.AxoTask.OnError()
  commentId: plc.AXOpen.Core.AxoTask.OnError()
  name: OnError()
  nameWithType: OnError()
  fullName: plc.AXOpen.Core.AxoTask.OnError()
  parent: plc.AXOpen.Core.AxoTask.OnError()
- uid: plc.AXOpen.Core.AxoTask.OnRestore()
  commentId: plc.AXOpen.Core.AxoTask.OnRestore()
  name: OnRestore()
  nameWithType: OnRestore()
  fullName: plc.AXOpen.Core.AxoTask.OnRestore()
  parent: plc.AXOpen.Core.AxoTask.OnRestore()
- uid: plc.AXOpen.Core.AxoTask.OnStart()
  commentId: plc.AXOpen.Core.AxoTask.OnStart()
  name: OnStart()
  nameWithType: OnStart()
  fullName: plc.AXOpen.Core.AxoTask.OnStart()
  parent: plc.AXOpen.Core.AxoTask.OnStart()
- uid: plc.AXOpen.Core.AxoTask.WhileError()
  commentId: plc.AXOpen.Core.AxoTask.WhileError()
  name: WhileError()
  nameWithType: WhileError()
  fullName: plc.AXOpen.Core.AxoTask.WhileError()
  parent: plc.AXOpen.Core.AxoTask.WhileError()
- uid: plc.AXOpen.Core.AxoObject.GetIdentity()
  commentId: plc.AXOpen.Core.AxoObject.GetIdentity()
  name: GetIdentity()
  nameWithType: GetIdentity()
  fullName: plc.AXOpen.Core.AxoObject.GetIdentity()
  parent: plc.AXOpen.Core.AxoObject.GetIdentity()
- uid: plc.AXOpen.Core.AxoObject.GetContext()
  commentId: plc.AXOpen.Core.AxoObject.GetContext()
  name: GetContext()
  nameWithType: GetContext()
  fullName: plc.AXOpen.Core.AxoObject.GetContext()
  parent: plc.AXOpen.Core.AxoObject.GetContext()
- uid: plc.AXOpen.Core.AxoObject.GetParent()
  commentId: plc.AXOpen.Core.AxoObject.GetParent()
  name: GetParent()
  nameWithType: GetParent()
  fullName: plc.AXOpen.Core.AxoObject.GetParent()
  parent: plc.AXOpen.Core.AxoObject.GetParent()
- uid: plc.AXOpen.Core.AxoObject.Initialize(IAxoObject)
  commentId: plc.AXOpen.Core.AxoObject.Initialize(IAxoObject)
  name: Initialize(IAxoObject)
  nameWithType: Initialize(IAxoObject)
  fullName: plc.AXOpen.Core.AxoObject.Initialize(IAxoObject)
  parent: plc.AXOpen.Core.AxoObject.Initialize(IAxoObject)
- uid: plc.AXOpen.Core.AxoObject.Initialize(IAxoContext)
  commentId: plc.AXOpen.Core.AxoObject.Initialize(IAxoContext)
  name: Initialize(IAxoContext)
  nameWithType: Initialize(IAxoContext)
  fullName: plc.AXOpen.Core.AxoObject.Initialize(IAxoContext)
  parent: plc.AXOpen.Core.AxoObject.Initialize(IAxoContext)
- uid: plc.AXOpen.Core.IAxoTask
  commentId: plc.AXOpen.Core.IAxoTask
  name: IAxoTask
  nameWithType: IAxoTask
  fullName: plc.AXOpen.Core.IAxoTask
  parent: plc.AXOpen.Core.IAxoTask
- uid: plc.AXOpen.Core.IAxoTaskState
  commentId: plc.AXOpen.Core.IAxoTaskState
  name: IAxoTaskState
  nameWithType: IAxoTaskState
  fullName: plc.AXOpen.Core.IAxoTaskState
  parent: plc.AXOpen.Core.IAxoTaskState
- uid: plc.BOOL
  name: BOOL
  nameWithType: BOOL
  fullName: BOOL
- uid: plc.REF_TO AXOpen.Inspectors.AxoInspectorData
  name: REF_TO AXOpen.Inspectors.AxoInspectorData
  nameWithType: REF_TO AXOpen.Inspectors.AxoInspectorData
  fullName: REF_TO AXOpen.Inspectors.AxoInspectorData
- uid: plc.UNDEFINED
  name: UNDEFINED
  nameWithType: UNDEFINED
  fullName: UNDEFINED


