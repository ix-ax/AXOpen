## YamlMime:ManagedReference
items:
- uid: plc.AXOpen.Data.AxoDataExchange
  id: plc.AXOpen.Data.AxoDataExchange
  parent: plc.AXOpen.Data
  children:
  - plc.AXOpen.Data.AxoDataExchange.Operation
  - plc.AXOpen.Data.AxoDataExchange.Run(IAxoObject)
  - plc.AXOpen.Data.AxoDataExchange.Run(IAxoContext)
  - plc.AXOpen.Data.AxoDataExchange.Create(STRING[254])
  - plc.AXOpen.Data.AxoDataExchange.Read(STRING[254])
  - plc.AXOpen.Data.AxoDataExchange.Update(STRING[254])
  - plc.AXOpen.Data.AxoDataExchange.Delete(STRING[254])
  - plc.AXOpen.Data.AxoDataExchange.EntityExist(STRING[254])
  - plc.AXOpen.Data.AxoDataExchange.CreateOrUpdate(STRING[254])
  - plc.AXOpen.Data.AxoDataExchange.Restore()
  name: AxoDataExchange
  fullName: AxoDataExchange
  type: Class
  source:
    remote:
      path: .\src\data\ctrl\src\AxoDataExchange.st
      branch: 209-_NEW-FEATURE_Create_library_for_Rexroth_drives
      repo: https://github.com/ix-ax/AXOpen.git
    id: plc.AXOpen.Data.AxoDataExchange
    path: .\src\data\ctrl\src\AxoDataExchange.st
    startLine: 6
  namespace: plc.AXOpen.Data
  summary: Provides base class for any data exchange with an arbitrary remote repository.
  syntax:
    content: CLASS AxoDataExchange
  inheritance:
  - plc.AXOpen.Data.AxoDataExchangeBase
  - plc.AXOpen.Core.AxoObject
  inheritedMembers:
  - plc.AXOpen.Core.AxoObject.Identity
  - plc.AXOpen.Core.AxoObject.GetIdentity()
  - plc.AXOpen.Core.AxoObject.GetContext()
  - plc.AXOpen.Core.AxoObject.GetParent()
  - plc.AXOpen.Core.AxoObject.Initialize(IAxoObject)
  - plc.AXOpen.Core.AxoObject.Initialize(IAxoContext)
  implements:
  - plc.AXOpen.Data.IAxoDataExchange
  - plc.AXOpen.Core.IAxoObject
- uid: plc.AXOpen.Data.AxoDataExchange.Operation
  id: plc.AXOpen.Data.AxoDataExchange.Operation
  parent: AXOpen.Data
  children: []
  name: Operation
  fullName: Operation
  type: Property
  source:
    remote:
      path: .\src\data\ctrl\src\AxoDataExchange.st
      branch: 209-_NEW-FEATURE_Create_library_for_Rexroth_drives
      repo: https://github.com/ix-ax/AXOpen.git
    id: plc.AXOpen.Data.AxoDataExchange.Operation
    path: .\src\data\ctrl\src\AxoDataExchange.st
    startLine: 9
  namespace: plc.AXOpen.Data
  syntax:
    content: 'Operation : AXOpen.Data.AxoDataCrudTask'
    return:
      type: AXOpen.Data.AxoDataCrudTask
- uid: plc.AXOpen.Data.AxoDataExchange.Run(IAxoObject)
  id: plc.AXOpen.Data.AxoDataExchange.Run(IAxoObject)
  parent: AXOpen.Data.AxoDataExchange
  children: []
  name: Run
  fullName: Run
  type: Method
  source:
    remote:
      path: .\src\data\ctrl\src\AxoDataExchange.st
      branch: 209-_NEW-FEATURE_Create_library_for_Rexroth_drives
      repo: https://github.com/ix-ax/AXOpen.git
    id: plc.AXOpen.Data.AxoDataExchange.Run
    path: .\src\data\ctrl\src\AxoDataExchange.st
    startLine: 17
  namespace: plc.AXOpen.Data
  summary: Runs intialization and cyclical handling of this AxoDataExchange.
  syntax:
    content: Public VOID Run(in plc.AXOpen.Core.IAxoObject parent)
    parameters:
    - id: parent
      type: plc.AXOpen.Core.IAxoObject
      description: Parent of this object
    return:
      type: VOID
- uid: plc.AXOpen.Data.AxoDataExchange.Run(IAxoContext)
  id: plc.AXOpen.Data.AxoDataExchange.Run(IAxoContext)
  parent: AXOpen.Data.AxoDataExchange
  children: []
  name: Run
  fullName: Run
  type: Method
  source:
    remote:
      path: .\src\data\ctrl\src\AxoDataExchange.st
      branch: 209-_NEW-FEATURE_Create_library_for_Rexroth_drives
      repo: https://github.com/ix-ax/AXOpen.git
    id: plc.AXOpen.Data.AxoDataExchange.Run
    path: .\src\data\ctrl\src\AxoDataExchange.st
    startLine: 31
  namespace: plc.AXOpen.Data
  summary: Runs intialization and cyclical handling of this AxoDataExchange.
  syntax:
    content: Public VOID Run(in plc.AXOpen.Core.IAxoContext context)
    parameters:
    - id: context
      type: plc.AXOpen.Core.IAxoContext
      description: Root context of this object
    return:
      type: VOID
- uid: plc.AXOpen.Data.AxoDataExchange.Create(STRING[254])
  id: plc.AXOpen.Data.AxoDataExchange.Create(STRING[254])
  parent: AXOpen.Data.AxoDataExchange
  children: []
  name: Create
  fullName: Create
  type: Method
  source:
    remote:
      path: .\src\data\ctrl\src\AxoDataExchange.st
      branch: 209-_NEW-FEATURE_Create_library_for_Rexroth_drives
      repo: https://github.com/ix-ax/AXOpen.git
    id: plc.AXOpen.Data.AxoDataExchange.Create
    path: .\src\data\ctrl\src\AxoDataExchange.st
    startLine: 44
  namespace: plc.AXOpen.Data
  summary: Creates new entry into the remote repository from data entity of this AxoDataExchange.
  syntax:
    content: Public AXOpen.Core.IAxoTaskState Create(in plc.STRING[254] identifier)
    parameters:
    - id: identifier
      type: plc.STRING[254]
      description: Data identifier.
    return:
      type: plc.AXOpen.Core.IAxoTaskState
- uid: plc.AXOpen.Data.AxoDataExchange.Read(STRING[254])
  id: plc.AXOpen.Data.AxoDataExchange.Read(STRING[254])
  parent: AXOpen.Data.AxoDataExchange
  children: []
  name: Read
  fullName: Read
  type: Method
  source:
    remote:
      path: .\src\data\ctrl\src\AxoDataExchange.st
      branch: 209-_NEW-FEATURE_Create_library_for_Rexroth_drives
      repo: https://github.com/ix-ax/AXOpen.git
    id: plc.AXOpen.Data.AxoDataExchange.Read
    path: .\src\data\ctrl\src\AxoDataExchange.st
    startLine: 56
  namespace: plc.AXOpen.Data
  summary: Reads data from remote repository and copies them into data entity of this AxoDataExchange.
  syntax:
    content: Public AXOpen.Core.IAxoTaskState Read(in plc.STRING[254] identifier)
    parameters:
    - id: identifier
      type: plc.STRING[254]
      description: Data identifier.
    return:
      type: plc.AXOpen.Core.IAxoTaskState
- uid: plc.AXOpen.Data.AxoDataExchange.Update(STRING[254])
  id: plc.AXOpen.Data.AxoDataExchange.Update(STRING[254])
  parent: AXOpen.Data.AxoDataExchange
  children: []
  name: Update
  fullName: Update
  type: Method
  source:
    remote:
      path: .\src\data\ctrl\src\AxoDataExchange.st
      branch: 209-_NEW-FEATURE_Create_library_for_Rexroth_drives
      repo: https://github.com/ix-ax/AXOpen.git
    id: plc.AXOpen.Data.AxoDataExchange.Update
    path: .\src\data\ctrl\src\AxoDataExchange.st
    startLine: 68
  namespace: plc.AXOpen.Data
  summary: Updates data in remote repository from data entiry of this AxoDataExchange.
  syntax:
    content: Public AXOpen.Core.IAxoTaskState Update(in plc.STRING[254] identifier)
    parameters:
    - id: identifier
      type: plc.STRING[254]
      description: Data identifier.
    return:
      type: plc.AXOpen.Core.IAxoTaskState
- uid: plc.AXOpen.Data.AxoDataExchange.Delete(STRING[254])
  id: plc.AXOpen.Data.AxoDataExchange.Delete(STRING[254])
  parent: AXOpen.Data.AxoDataExchange
  children: []
  name: Delete
  fullName: Delete
  type: Method
  source:
    remote:
      path: .\src\data\ctrl\src\AxoDataExchange.st
      branch: 209-_NEW-FEATURE_Create_library_for_Rexroth_drives
      repo: https://github.com/ix-ax/AXOpen.git
    id: plc.AXOpen.Data.AxoDataExchange.Delete
    path: .\src\data\ctrl\src\AxoDataExchange.st
    startLine: 79
  namespace: plc.AXOpen.Data
  summary: Deletes data entry with given ID from remote repository.
  syntax:
    content: Public AXOpen.Core.IAxoTaskState Delete(in plc.STRING[254] identifier)
    parameters:
    - id: identifier
      type: plc.STRING[254]
      description: Data identifier.
    return:
      type: plc.AXOpen.Core.IAxoTaskState
- uid: plc.AXOpen.Data.AxoDataExchange.EntityExist(STRING[254])
  id: plc.AXOpen.Data.AxoDataExchange.EntityExist(STRING[254])
  parent: AXOpen.Data.AxoDataExchange
  children: []
  name: EntityExist
  fullName: EntityExist
  type: Method
  source:
    remote:
      path: .\src\data\ctrl\src\AxoDataExchange.st
      branch: 209-_NEW-FEATURE_Create_library_for_Rexroth_drives
      repo: https://github.com/ix-ax/AXOpen.git
    id: plc.AXOpen.Data.AxoDataExchange.EntityExist
    path: .\src\data\ctrl\src\AxoDataExchange.st
    startLine: 90
  namespace: plc.AXOpen.Data
  summary: Check if data entry exists with given ID in remote repository.
  syntax:
    content: Public AXOpen.Data.IAxoEntityExistTaskState EntityExist(in plc.STRING[254] identifier)
    parameters:
    - id: identifier
      type: plc.STRING[254]
      description: Data identifier.
    return:
      type: plc.AXOpen.Data.IAxoEntityExistTaskState
- uid: plc.AXOpen.Data.AxoDataExchange.CreateOrUpdate(STRING[254])
  id: plc.AXOpen.Data.AxoDataExchange.CreateOrUpdate(STRING[254])
  parent: AXOpen.Data.AxoDataExchange
  children: []
  name: CreateOrUpdate
  fullName: CreateOrUpdate
  type: Method
  source:
    remote:
      path: .\src\data\ctrl\src\AxoDataExchange.st
      branch: 209-_NEW-FEATURE_Create_library_for_Rexroth_drives
      repo: https://github.com/ix-ax/AXOpen.git
    id: plc.AXOpen.Data.AxoDataExchange.CreateOrUpdate
    path: .\src\data\ctrl\src\AxoDataExchange.st
    startLine: 102
  namespace: plc.AXOpen.Data
  summary: Creates or Updates data in remote repository from data entiry of this AxoDataExchange.
  syntax:
    content: Public AXOpen.Core.IAxoTaskState CreateOrUpdate(in plc.STRING[254] identifier)
    parameters:
    - id: identifier
      type: plc.STRING[254]
      description: Data identifier.
    return:
      type: plc.AXOpen.Core.IAxoTaskState
- uid: plc.AXOpen.Data.AxoDataExchange.Restore()
  id: plc.AXOpen.Data.AxoDataExchange.Restore()
  parent: AXOpen.Data.AxoDataExchange
  children: []
  name: Restore
  fullName: Restore
  type: Method
  source:
    remote:
      path: .\src\data\ctrl\src\AxoDataExchange.st
      branch: 209-_NEW-FEATURE_Create_library_for_Rexroth_drives
      repo: https://github.com/ix-ax/AXOpen.git
    id: plc.AXOpen.Data.AxoDataExchange.Restore
    path: .\src\data\ctrl\src\AxoDataExchange.st
    startLine: 113
  namespace: plc.AXOpen.Data
  summary: Restores all tasks associated with this object.
  syntax:
    content: Public VOID Restore()
    parameters: []
    return:
      type: VOID
references:
- uid: plc.AXOpen.Core.AxoObject.Identity
  commentId: plc.AXOpen.Core.AxoObject.Identity
  name: Identity
  nameWithType: Identity
  fullName: plc.AXOpen.Core.AxoObject.Identity
  parent: plc.AXOpen.Core.AxoObject.Identity
- uid: plc.AXOpen.Core.AxoObject.GetIdentity()
  commentId: plc.AXOpen.Core.AxoObject.GetIdentity()
  name: GetIdentity()
  nameWithType: GetIdentity()
  fullName: plc.AXOpen.Core.AxoObject.GetIdentity()
  parent: plc.AXOpen.Core.AxoObject.GetIdentity()
- uid: plc.AXOpen.Core.AxoObject.GetContext()
  commentId: plc.AXOpen.Core.AxoObject.GetContext()
  name: GetContext()
  nameWithType: GetContext()
  fullName: plc.AXOpen.Core.AxoObject.GetContext()
  parent: plc.AXOpen.Core.AxoObject.GetContext()
- uid: plc.AXOpen.Core.AxoObject.GetParent()
  commentId: plc.AXOpen.Core.AxoObject.GetParent()
  name: GetParent()
  nameWithType: GetParent()
  fullName: plc.AXOpen.Core.AxoObject.GetParent()
  parent: plc.AXOpen.Core.AxoObject.GetParent()
- uid: plc.AXOpen.Core.AxoObject.Initialize(IAxoObject)
  commentId: plc.AXOpen.Core.AxoObject.Initialize(IAxoObject)
  name: Initialize(IAxoObject)
  nameWithType: Initialize(IAxoObject)
  fullName: plc.AXOpen.Core.AxoObject.Initialize(IAxoObject)
  parent: plc.AXOpen.Core.AxoObject.Initialize(IAxoObject)
- uid: plc.AXOpen.Core.AxoObject.Initialize(IAxoContext)
  commentId: plc.AXOpen.Core.AxoObject.Initialize(IAxoContext)
  name: Initialize(IAxoContext)
  nameWithType: Initialize(IAxoContext)
  fullName: plc.AXOpen.Core.AxoObject.Initialize(IAxoContext)
  parent: plc.AXOpen.Core.AxoObject.Initialize(IAxoContext)
- uid: plc.AXOpen.Data.IAxoDataExchange
  commentId: plc.AXOpen.Data.IAxoDataExchange
  name: IAxoDataExchange
  nameWithType: IAxoDataExchange
  fullName: plc.AXOpen.Data.IAxoDataExchange
  parent: plc.AXOpen.Data.IAxoDataExchange
- uid: plc.AXOpen.Core.IAxoObject
  commentId: plc.AXOpen.Core.IAxoObject
  name: IAxoObject
  nameWithType: IAxoObject
  fullName: plc.AXOpen.Core.IAxoObject
  parent: plc.AXOpen.Core.IAxoObject
- uid: plc.AXOpen.Data.AxoDataCrudTask
  name: AxoDataCrudTask
  nameWithType: AxoDataCrudTask
  fullName: AXOpen.Data.AxoDataCrudTask
- uid: plc.AXOpen.Core.IAxoContext
  name: IAxoContext
  nameWithType: IAxoContext
  fullName: AXOpen.Core.IAxoContext
- uid: plc.AXOpen.Core.IAxoTaskState
  name: IAxoTaskState
  nameWithType: IAxoTaskState
  fullName: AXOpen.Core.IAxoTaskState
- uid: plc.STRING[254]
  name: STRING[254]
  nameWithType: STRING[254]
  fullName: STRING[254]
- uid: plc.AXOpen.Data.IAxoEntityExistTaskState
  name: IAxoEntityExistTaskState
  nameWithType: IAxoEntityExistTaskState
  fullName: AXOpen.Data.IAxoEntityExistTaskState


