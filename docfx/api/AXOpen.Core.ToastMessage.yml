### YamlMime:ManagedReference
items:
- uid: AXOpen.Core.ToastMessage
  commentId: T:AXOpen.Core.ToastMessage
  id: ToastMessage
  parent: AXOpen.Core
  children:
  - AXOpen.Core.ToastMessage.#ctor(AXOpen.Core.blazor.Toaster.Toast)
  langs:
  - csharp
  - vb
  name: ToastMessage
  nameWithType: ToastMessage
  fullName: AXOpen.Core.ToastMessage
  type: Class
  source:
    remote:
      path: src/core/src/AXOpen.Core.Blazor/Toaster/ToastMessage.cs
      branch: 64-_NEW-FEATURE_Add_momentary_and_toggle_task_from_tco
      repo: https://github.com/ix-ax/ix.framework.git
    id: ToastMessage
    path: ../src/core/src/AXOpen.Core.Blazor/Toaster/ToastMessage.cs
    startLine: 10
  assemblies:
  - axopen_core_blazor
  namespace: AXOpen.Core
  syntax:
    content: 'public class ToastMessage : ValueChangedMessage<Toast>'
    content.vb: Public Class ToastMessage Inherits ValueChangedMessage(Of Toast)
  inheritance:
  - System.Object
  - CommunityToolkit.Mvvm.Messaging.Messages.ValueChangedMessage{AXOpen.Core.blazor.Toaster.Toast}
  inheritedMembers:
  - CommunityToolkit.Mvvm.Messaging.Messages.ValueChangedMessage{AXOpen.Core.blazor.Toaster.Toast}.Value
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AXOpen.Core.ToastMessage.#ctor(AXOpen.Core.blazor.Toaster.Toast)
  commentId: M:AXOpen.Core.ToastMessage.#ctor(AXOpen.Core.blazor.Toaster.Toast)
  id: '#ctor(AXOpen.Core.blazor.Toaster.Toast)'
  parent: AXOpen.Core.ToastMessage
  langs:
  - csharp
  - vb
  name: ToastMessage(Toast)
  nameWithType: ToastMessage.ToastMessage(Toast)
  fullName: AXOpen.Core.ToastMessage.ToastMessage(AXOpen.Core.blazor.Toaster.Toast)
  type: Constructor
  source:
    remote:
      path: src/core/src/AXOpen.Core.Blazor/Toaster/ToastMessage.cs
      branch: 64-_NEW-FEATURE_Add_momentary_and_toggle_task_from_tco
      repo: https://github.com/ix-ax/ix.framework.git
    id: .ctor
    path: ../src/core/src/AXOpen.Core.Blazor/Toaster/ToastMessage.cs
    startLine: 12
  assemblies:
  - axopen_core_blazor
  namespace: AXOpen.Core
  syntax:
    content: public ToastMessage(Toast toast)
    parameters:
    - id: toast
      type: AXOpen.Core.blazor.Toaster.Toast
    content.vb: Public Sub New(toast As Toast)
  overload: AXOpen.Core.ToastMessage.#ctor*
  nameWithType.vb: ToastMessage.New(Toast)
  fullName.vb: AXOpen.Core.ToastMessage.New(AXOpen.Core.blazor.Toaster.Toast)
  name.vb: New(Toast)
references:
- uid: AXOpen.Core
  commentId: N:AXOpen.Core
  name: AXOpen.Core
  nameWithType: AXOpen.Core
  fullName: AXOpen.Core
  spec.csharp:
  - uid: AXOpen
    name: AXOpen
  - name: .
  - uid: AXOpen.Core
    name: Core
  spec.vb:
  - uid: AXOpen
    name: AXOpen
  - name: .
  - uid: AXOpen.Core
    name: Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: CommunityToolkit.Mvvm.Messaging.Messages.ValueChangedMessage{AXOpen.Core.blazor.Toaster.Toast}
  commentId: T:CommunityToolkit.Mvvm.Messaging.Messages.ValueChangedMessage{AXOpen.Core.blazor.Toaster.Toast}
  parent: CommunityToolkit.Mvvm.Messaging.Messages
  definition: CommunityToolkit.Mvvm.Messaging.Messages.ValueChangedMessage`1
  name: ValueChangedMessage<Toast>
  nameWithType: ValueChangedMessage<Toast>
  fullName: CommunityToolkit.Mvvm.Messaging.Messages.ValueChangedMessage<AXOpen.Core.blazor.Toaster.Toast>
  nameWithType.vb: ValueChangedMessage(Of Toast)
  fullName.vb: CommunityToolkit.Mvvm.Messaging.Messages.ValueChangedMessage(Of AXOpen.Core.blazor.Toaster.Toast)
  name.vb: ValueChangedMessage(Of Toast)
  spec.csharp:
  - uid: CommunityToolkit.Mvvm.Messaging.Messages.ValueChangedMessage`1
    name: ValueChangedMessage
    isExternal: true
  - name: <
  - uid: AXOpen.Core.blazor.Toaster.Toast
    name: Toast
  - name: '>'
  spec.vb:
  - uid: CommunityToolkit.Mvvm.Messaging.Messages.ValueChangedMessage`1
    name: ValueChangedMessage
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: AXOpen.Core.blazor.Toaster.Toast
    name: Toast
  - name: )
- uid: CommunityToolkit.Mvvm.Messaging.Messages.ValueChangedMessage{AXOpen.Core.blazor.Toaster.Toast}.Value
  commentId: P:CommunityToolkit.Mvvm.Messaging.Messages.ValueChangedMessage{AXOpen.Core.blazor.Toaster.Toast}.Value
  parent: CommunityToolkit.Mvvm.Messaging.Messages.ValueChangedMessage{AXOpen.Core.blazor.Toaster.Toast}
  definition: CommunityToolkit.Mvvm.Messaging.Messages.ValueChangedMessage`1.Value
  name: Value
  nameWithType: ValueChangedMessage<Toast>.Value
  fullName: CommunityToolkit.Mvvm.Messaging.Messages.ValueChangedMessage<AXOpen.Core.blazor.Toaster.Toast>.Value
  nameWithType.vb: ValueChangedMessage(Of Toast).Value
  fullName.vb: CommunityToolkit.Mvvm.Messaging.Messages.ValueChangedMessage(Of AXOpen.Core.blazor.Toaster.Toast).Value
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CommunityToolkit.Mvvm.Messaging.Messages.ValueChangedMessage`1
  commentId: T:CommunityToolkit.Mvvm.Messaging.Messages.ValueChangedMessage`1
  isExternal: true
  name: ValueChangedMessage<T>
  nameWithType: ValueChangedMessage<T>
  fullName: CommunityToolkit.Mvvm.Messaging.Messages.ValueChangedMessage<T>
  nameWithType.vb: ValueChangedMessage(Of T)
  fullName.vb: CommunityToolkit.Mvvm.Messaging.Messages.ValueChangedMessage(Of T)
  name.vb: ValueChangedMessage(Of T)
  spec.csharp:
  - uid: CommunityToolkit.Mvvm.Messaging.Messages.ValueChangedMessage`1
    name: ValueChangedMessage
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: CommunityToolkit.Mvvm.Messaging.Messages.ValueChangedMessage`1
    name: ValueChangedMessage
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: CommunityToolkit.Mvvm.Messaging.Messages
  commentId: N:CommunityToolkit.Mvvm.Messaging.Messages
  isExternal: true
  name: CommunityToolkit.Mvvm.Messaging.Messages
  nameWithType: CommunityToolkit.Mvvm.Messaging.Messages
  fullName: CommunityToolkit.Mvvm.Messaging.Messages
  spec.csharp:
  - uid: CommunityToolkit
    name: CommunityToolkit
    isExternal: true
  - name: .
  - uid: CommunityToolkit.Mvvm
    name: Mvvm
    isExternal: true
  - name: .
  - uid: CommunityToolkit.Mvvm.Messaging
    name: Messaging
    isExternal: true
  - name: .
  - uid: CommunityToolkit.Mvvm.Messaging.Messages
    name: Messages
    isExternal: true
  spec.vb:
  - uid: CommunityToolkit
    name: CommunityToolkit
    isExternal: true
  - name: .
  - uid: CommunityToolkit.Mvvm
    name: Mvvm
    isExternal: true
  - name: .
  - uid: CommunityToolkit.Mvvm.Messaging
    name: Messaging
    isExternal: true
  - name: .
  - uid: CommunityToolkit.Mvvm.Messaging.Messages
    name: Messages
    isExternal: true
- uid: CommunityToolkit.Mvvm.Messaging.Messages.ValueChangedMessage`1.Value
  commentId: P:CommunityToolkit.Mvvm.Messaging.Messages.ValueChangedMessage`1.Value
  isExternal: true
  name: Value
  nameWithType: ValueChangedMessage<T>.Value
  fullName: CommunityToolkit.Mvvm.Messaging.Messages.ValueChangedMessage<T>.Value
  nameWithType.vb: ValueChangedMessage(Of T).Value
  fullName.vb: CommunityToolkit.Mvvm.Messaging.Messages.ValueChangedMessage(Of T).Value
- uid: AXOpen.Core.ToastMessage.#ctor*
  commentId: Overload:AXOpen.Core.ToastMessage.#ctor
  name: ToastMessage
  nameWithType: ToastMessage.ToastMessage
  fullName: AXOpen.Core.ToastMessage.ToastMessage
  nameWithType.vb: ToastMessage.New
  fullName.vb: AXOpen.Core.ToastMessage.New
  name.vb: New
- uid: AXOpen.Core.blazor.Toaster.Toast
  commentId: T:AXOpen.Core.blazor.Toaster.Toast
  parent: AXOpen.Core.blazor.Toaster
  name: Toast
  nameWithType: Toast
  fullName: AXOpen.Core.blazor.Toaster.Toast
- uid: AXOpen.Core.blazor.Toaster
  commentId: N:AXOpen.Core.blazor.Toaster
  name: AXOpen.Core.blazor.Toaster
  nameWithType: AXOpen.Core.blazor.Toaster
  fullName: AXOpen.Core.blazor.Toaster
  spec.csharp:
  - uid: AXOpen
    name: AXOpen
  - name: .
  - uid: AXOpen.Core
    name: Core
  - name: .
  - uid: AXOpen.Core.blazor
    name: blazor
  - name: .
  - uid: AXOpen.Core.blazor.Toaster
    name: Toaster
  spec.vb:
  - uid: AXOpen
    name: AXOpen
  - name: .
  - uid: AXOpen.Core
    name: Core
  - name: .
  - uid: AXOpen.Core.blazor
    name: blazor
  - name: .
  - uid: AXOpen.Core.blazor.Toaster
    name: Toaster
