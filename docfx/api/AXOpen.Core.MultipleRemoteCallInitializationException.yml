### YamlMime:ManagedReference
items:
- uid: AXOpen.Core.MultipleRemoteCallInitializationException
  commentId: T:AXOpen.Core.MultipleRemoteCallInitializationException
  id: MultipleRemoteCallInitializationException
  parent: AXOpen.Core
  children:
  - AXOpen.Core.MultipleRemoteCallInitializationException.#ctor
  - AXOpen.Core.MultipleRemoteCallInitializationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - AXOpen.Core.MultipleRemoteCallInitializationException.#ctor(System.String,System.Exception)
  - AXOpen.Core.MultipleRemoteCallInitializationException.#ctor(System.String)
  langs:
  - csharp
  - vb
  name: MultipleRemoteCallInitializationException
  nameWithType: MultipleRemoteCallInitializationException
  fullName: AXOpen.Core.MultipleRemoteCallInitializationException
  type: Class
  source:
    remote:
      path: src/core/src/AXOpen.Core/AxoRemoteTask/MultipleRemoteCallInitializationException.cs
      branch: 64-_NEW-FEATURE_Add_momentary_and_toggle_task_from_tco
      repo: https://github.com/ix-ax/ix.framework.git
    id: MultipleRemoteCallInitializationException
    path: ../src/core/src/AXOpen.Core/AxoRemoteTask/MultipleRemoteCallInitializationException.cs
    startLine: 9
  assemblies:
  - ix_ax_axopen_core
  namespace: AXOpen.Core
  syntax:
    content: 'public class MultipleRemoteCallInitializationException : Exception, ISerializable'
    content.vb: Public Class MultipleRemoteCallInitializationException Inherits Exception Implements ISerializable
  inheritance:
  - System.Object
  - System.Exception
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.Exception.GetBaseException
  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Exception.GetType
  - System.Exception.ToString
  - System.Exception.Data
  - System.Exception.HelpLink
  - System.Exception.HResult
  - System.Exception.InnerException
  - System.Exception.Message
  - System.Exception.Source
  - System.Exception.StackTrace
  - System.Exception.TargetSite
  - System.Exception.SerializeObjectState
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: AXOpen.Core.MultipleRemoteCallInitializationException.#ctor
  commentId: M:AXOpen.Core.MultipleRemoteCallInitializationException.#ctor
  id: '#ctor'
  parent: AXOpen.Core.MultipleRemoteCallInitializationException
  langs:
  - csharp
  - vb
  name: MultipleRemoteCallInitializationException()
  nameWithType: MultipleRemoteCallInitializationException.MultipleRemoteCallInitializationException()
  fullName: AXOpen.Core.MultipleRemoteCallInitializationException.MultipleRemoteCallInitializationException()
  type: Constructor
  source:
    remote:
      path: src/core/src/AXOpen.Core/AxoRemoteTask/MultipleRemoteCallInitializationException.cs
      branch: 64-_NEW-FEATURE_Add_momentary_and_toggle_task_from_tco
      repo: https://github.com/ix-ax/ix.framework.git
    id: .ctor
    path: ../src/core/src/AXOpen.Core/AxoRemoteTask/MultipleRemoteCallInitializationException.cs
    startLine: 11
  assemblies:
  - ix_ax_axopen_core
  namespace: AXOpen.Core
  syntax:
    content: public MultipleRemoteCallInitializationException()
    content.vb: Public Sub New()
  overload: AXOpen.Core.MultipleRemoteCallInitializationException.#ctor*
  nameWithType.vb: MultipleRemoteCallInitializationException.New()
  fullName.vb: AXOpen.Core.MultipleRemoteCallInitializationException.New()
  name.vb: New()
- uid: AXOpen.Core.MultipleRemoteCallInitializationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:AXOpen.Core.MultipleRemoteCallInitializationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: AXOpen.Core.MultipleRemoteCallInitializationException
  langs:
  - csharp
  - vb
  name: MultipleRemoteCallInitializationException(SerializationInfo, StreamingContext)
  nameWithType: MultipleRemoteCallInitializationException.MultipleRemoteCallInitializationException(SerializationInfo, StreamingContext)
  fullName: AXOpen.Core.MultipleRemoteCallInitializationException.MultipleRemoteCallInitializationException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  type: Constructor
  source:
    remote:
      path: src/core/src/AXOpen.Core/AxoRemoteTask/MultipleRemoteCallInitializationException.cs
      branch: 64-_NEW-FEATURE_Add_momentary_and_toggle_task_from_tco
      repo: https://github.com/ix-ax/ix.framework.git
    id: .ctor
    path: ../src/core/src/AXOpen.Core/AxoRemoteTask/MultipleRemoteCallInitializationException.cs
    startLine: 20
  assemblies:
  - ix_ax_axopen_core
  namespace: AXOpen.Core
  summary: Initializes a new instance of the <xref href="AXOpen.Core.MultipleRemoteCallInitializationException" data-throw-if-not-resolved="false"></xref> class with serialized data.
  example: []
  syntax:
    content: protected MultipleRemoteCallInitializationException(SerializationInfo info, StreamingContext context)
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The <xref href="System.Runtime.Serialization.SerializationInfo" data-throw-if-not-resolved="false"></xref> that holds the serialized object data about the exception being thrown.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The <xref href="System.Runtime.Serialization.StreamingContext" data-throw-if-not-resolved="false"></xref> that contains contextual information about the source or destination.
    content.vb: Protected Sub New(info As SerializationInfo, context As StreamingContext)
  overload: AXOpen.Core.MultipleRemoteCallInitializationException.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">info</code> parameter is null.
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: The class name is null or <xref href="System.Exception.HResult" data-throw-if-not-resolved="false"></xref> is zero (0).
  nameWithType.vb: MultipleRemoteCallInitializationException.New(SerializationInfo, StreamingContext)
  fullName.vb: AXOpen.Core.MultipleRemoteCallInitializationException.New(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  name.vb: New(SerializationInfo, StreamingContext)
- uid: AXOpen.Core.MultipleRemoteCallInitializationException.#ctor(System.String)
  commentId: M:AXOpen.Core.MultipleRemoteCallInitializationException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: AXOpen.Core.MultipleRemoteCallInitializationException
  langs:
  - csharp
  - vb
  name: MultipleRemoteCallInitializationException(string)
  nameWithType: MultipleRemoteCallInitializationException.MultipleRemoteCallInitializationException(string)
  fullName: AXOpen.Core.MultipleRemoteCallInitializationException.MultipleRemoteCallInitializationException(string)
  type: Constructor
  source:
    remote:
      path: src/core/src/AXOpen.Core/AxoRemoteTask/MultipleRemoteCallInitializationException.cs
      branch: 64-_NEW-FEATURE_Add_momentary_and_toggle_task_from_tco
      repo: https://github.com/ix-ax/ix.framework.git
    id: .ctor
    path: ../src/core/src/AXOpen.Core/AxoRemoteTask/MultipleRemoteCallInitializationException.cs
    startLine: 27
  assemblies:
  - ix_ax_axopen_core
  namespace: AXOpen.Core
  summary: Initializes a new instance of the <xref href="AXOpen.Core.MultipleRemoteCallInitializationException" data-throw-if-not-resolved="false"></xref> class with a specified error message.
  example: []
  syntax:
    content: public MultipleRemoteCallInitializationException(string message)
    parameters:
    - id: message
      type: System.String
      description: The message that describes the error.
    content.vb: Public Sub New(message As String)
  overload: AXOpen.Core.MultipleRemoteCallInitializationException.#ctor*
  nameWithType.vb: MultipleRemoteCallInitializationException.New(String)
  fullName.vb: AXOpen.Core.MultipleRemoteCallInitializationException.New(String)
  name.vb: New(String)
- uid: AXOpen.Core.MultipleRemoteCallInitializationException.#ctor(System.String,System.Exception)
  commentId: M:AXOpen.Core.MultipleRemoteCallInitializationException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: AXOpen.Core.MultipleRemoteCallInitializationException
  langs:
  - csharp
  - vb
  name: MultipleRemoteCallInitializationException(string, Exception)
  nameWithType: MultipleRemoteCallInitializationException.MultipleRemoteCallInitializationException(string, Exception)
  fullName: AXOpen.Core.MultipleRemoteCallInitializationException.MultipleRemoteCallInitializationException(string, System.Exception)
  type: Constructor
  source:
    remote:
      path: src/core/src/AXOpen.Core/AxoRemoteTask/MultipleRemoteCallInitializationException.cs
      branch: 64-_NEW-FEATURE_Add_momentary_and_toggle_task_from_tco
      repo: https://github.com/ix-ax/ix.framework.git
    id: .ctor
    path: ../src/core/src/AXOpen.Core/AxoRemoteTask/MultipleRemoteCallInitializationException.cs
    startLine: 35
  assemblies:
  - ix_ax_axopen_core
  namespace: AXOpen.Core
  summary: Initializes a new instance of the <xref href="AXOpen.Core.MultipleRemoteCallInitializationException" data-throw-if-not-resolved="false"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.
  example: []
  syntax:
    content: public MultipleRemoteCallInitializationException(string message, Exception innerException)
    parameters:
    - id: message
      type: System.String
      description: The error message that explains the reason for the exception.
    - id: innerException
      type: System.Exception
      description: The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.
    content.vb: Public Sub New(message As String, innerException As Exception)
  overload: AXOpen.Core.MultipleRemoteCallInitializationException.#ctor*
  nameWithType.vb: MultipleRemoteCallInitializationException.New(String, Exception)
  fullName.vb: AXOpen.Core.MultipleRemoteCallInitializationException.New(String, System.Exception)
  name.vb: New(String, Exception)
references:
- uid: AXOpen.Core
  commentId: N:AXOpen.Core
  name: AXOpen.Core
  nameWithType: AXOpen.Core
  fullName: AXOpen.Core
  spec.csharp:
  - uid: AXOpen
    name: AXOpen
  - name: .
  - uid: AXOpen.Core
    name: Core
  spec.vb:
  - uid: AXOpen
    name: AXOpen
  - name: .
  - uid: AXOpen.Core
    name: Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.Exception.GetBaseException
  commentId: M:System.Exception.GetBaseException
  parent: System.Exception
  isExternal: true
  name: GetBaseException()
  nameWithType: Exception.GetBaseException()
  fullName: System.Exception.GetBaseException()
  spec.csharp:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    isExternal: true
  - name: (
  - name: )
- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Exception
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    isExternal: true
  - name: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    isExternal: true
  - name: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    isExternal: true
  - name: )
- uid: System.Exception.GetType
  commentId: M:System.Exception.GetType
  parent: System.Exception
  isExternal: true
  name: GetType()
  nameWithType: Exception.GetType()
  fullName: System.Exception.GetType()
  spec.csharp:
  - uid: System.Exception.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Exception.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Exception.ToString
  commentId: M:System.Exception.ToString
  parent: System.Exception
  isExternal: true
  name: ToString()
  nameWithType: Exception.ToString()
  fullName: System.Exception.ToString()
  spec.csharp:
  - uid: System.Exception.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Exception.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System.Exception.Data
  commentId: P:System.Exception.Data
  parent: System.Exception
  isExternal: true
  name: Data
  nameWithType: Exception.Data
  fullName: System.Exception.Data
- uid: System.Exception.HelpLink
  commentId: P:System.Exception.HelpLink
  parent: System.Exception
  isExternal: true
  name: HelpLink
  nameWithType: Exception.HelpLink
  fullName: System.Exception.HelpLink
- uid: System.Exception.HResult
  commentId: P:System.Exception.HResult
  parent: System.Exception
  isExternal: true
  name: HResult
  nameWithType: Exception.HResult
  fullName: System.Exception.HResult
- uid: System.Exception.InnerException
  commentId: P:System.Exception.InnerException
  parent: System.Exception
  isExternal: true
  name: InnerException
  nameWithType: Exception.InnerException
  fullName: System.Exception.InnerException
- uid: System.Exception.Message
  commentId: P:System.Exception.Message
  parent: System.Exception
  isExternal: true
  name: Message
  nameWithType: Exception.Message
  fullName: System.Exception.Message
- uid: System.Exception.Source
  commentId: P:System.Exception.Source
  parent: System.Exception
  isExternal: true
  name: Source
  nameWithType: Exception.Source
  fullName: System.Exception.Source
- uid: System.Exception.StackTrace
  commentId: P:System.Exception.StackTrace
  parent: System.Exception
  isExternal: true
  name: StackTrace
  nameWithType: Exception.StackTrace
  fullName: System.Exception.StackTrace
- uid: System.Exception.TargetSite
  commentId: P:System.Exception.TargetSite
  parent: System.Exception
  isExternal: true
  name: TargetSite
  nameWithType: Exception.TargetSite
  fullName: System.Exception.TargetSite
- uid: System.Exception.SerializeObjectState
  commentId: E:System.Exception.SerializeObjectState
  parent: System.Exception
  isExternal: true
  name: SerializeObjectState
  nameWithType: Exception.SerializeObjectState
  fullName: System.Exception.SerializeObjectState
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Runtime
    name: Runtime
    isExternal: true
  - name: .
  - uid: System.Runtime.Serialization
    name: Serialization
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Runtime
    name: Runtime
    isExternal: true
  - name: .
  - uid: System.Runtime.Serialization
    name: Serialization
    isExternal: true
- uid: AXOpen.Core.MultipleRemoteCallInitializationException.#ctor*
  commentId: Overload:AXOpen.Core.MultipleRemoteCallInitializationException.#ctor
  name: MultipleRemoteCallInitializationException
  nameWithType: MultipleRemoteCallInitializationException.MultipleRemoteCallInitializationException
  fullName: AXOpen.Core.MultipleRemoteCallInitializationException.MultipleRemoteCallInitializationException
  nameWithType.vb: MultipleRemoteCallInitializationException.New
  fullName.vb: AXOpen.Core.MultipleRemoteCallInitializationException.New
  name.vb: New
- uid: AXOpen.Core.MultipleRemoteCallInitializationException
  commentId: T:AXOpen.Core.MultipleRemoteCallInitializationException
  name: MultipleRemoteCallInitializationException
  nameWithType: MultipleRemoteCallInitializationException
  fullName: AXOpen.Core.MultipleRemoteCallInitializationException
- uid: System.Runtime.Serialization.SerializationInfo
  commentId: T:System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: true
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  commentId: T:System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.Runtime.Serialization.SerializationException
  commentId: T:System.Runtime.Serialization.SerializationException
  isExternal: true
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
