### YamlMime:ManagedReference
items:
- uid: AXOpen.Core.blazor.Toaster.ToastService
  commentId: T:AXOpen.Core.blazor.Toaster.ToastService
  id: ToastService
  parent: AXOpen.Core.blazor.Toaster
  children:
  - AXOpen.Core.blazor.Toaster.ToastService.#ctor
  - AXOpen.Core.blazor.Toaster.ToastService.AddToast(AXOpen.Core.blazor.Toaster.Toast)
  - AXOpen.Core.blazor.Toaster.ToastService.AddToast(System.String,System.String,System.String,System.Int32)
  - AXOpen.Core.blazor.Toaster.ToastService.Dispose
  - AXOpen.Core.blazor.Toaster.ToastService.GetToasts
  - AXOpen.Core.blazor.Toaster.ToastService.RemoveAllToast
  - AXOpen.Core.blazor.Toaster.ToastService.RemoveToast(AXOpen.Core.blazor.Toaster.Toast)
  - AXOpen.Core.blazor.Toaster.ToastService.ToasterChanged
  langs:
  - csharp
  - vb
  name: ToastService
  nameWithType: ToastService
  fullName: AXOpen.Core.blazor.Toaster.ToastService
  type: Class
  source:
    remote:
      path: src/core/src/AXOpen.Core.Blazor/Toaster/ToastService.cs
      branch: 64-_NEW-FEATURE_Add_momentary_and_toggle_task_from_tco
      repo: https://github.com/ix-ax/ix.framework.git
    id: ToastService
    path: ../src/core/src/AXOpen.Core.Blazor/Toaster/ToastService.cs
    startLine: 5
  assemblies:
  - axopen_core_blazor
  namespace: AXOpen.Core.blazor.Toaster
  syntax:
    content: 'public class ToastService : IDisposable'
    content.vb: Public Class ToastService Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AXOpen.Core.blazor.Toaster.ToastService.ToasterChanged
  commentId: E:AXOpen.Core.blazor.Toaster.ToastService.ToasterChanged
  id: ToasterChanged
  parent: AXOpen.Core.blazor.Toaster.ToastService
  langs:
  - csharp
  - vb
  name: ToasterChanged
  nameWithType: ToastService.ToasterChanged
  fullName: AXOpen.Core.blazor.Toaster.ToastService.ToasterChanged
  type: Event
  source:
    remote:
      path: src/core/src/AXOpen.Core.Blazor/Toaster/ToastService.cs
      branch: 64-_NEW-FEATURE_Add_momentary_and_toggle_task_from_tco
      repo: https://github.com/ix-ax/ix.framework.git
    id: ToasterChanged
    path: ../src/core/src/AXOpen.Core.Blazor/Toaster/ToastService.cs
    startLine: 10
  assemblies:
  - axopen_core_blazor
  namespace: AXOpen.Core.blazor.Toaster
  syntax:
    content: public event EventHandler? ToasterChanged
    return:
      type: System.EventHandler
    content.vb: Public Event ToasterChanged As EventHandler
- uid: AXOpen.Core.blazor.Toaster.ToastService.#ctor
  commentId: M:AXOpen.Core.blazor.Toaster.ToastService.#ctor
  id: '#ctor'
  parent: AXOpen.Core.blazor.Toaster.ToastService
  langs:
  - csharp
  - vb
  name: ToastService()
  nameWithType: ToastService.ToastService()
  fullName: AXOpen.Core.blazor.Toaster.ToastService.ToastService()
  type: Constructor
  source:
    remote:
      path: src/core/src/AXOpen.Core.Blazor/Toaster/ToastService.cs
      branch: 64-_NEW-FEATURE_Add_momentary_and_toggle_task_from_tco
      repo: https://github.com/ix-ax/ix.framework.git
    id: .ctor
    path: ../src/core/src/AXOpen.Core.Blazor/Toaster/ToastService.cs
    startLine: 12
  assemblies:
  - axopen_core_blazor
  namespace: AXOpen.Core.blazor.Toaster
  syntax:
    content: public ToastService()
    content.vb: Public Sub New()
  overload: AXOpen.Core.blazor.Toaster.ToastService.#ctor*
  nameWithType.vb: ToastService.New()
  fullName.vb: AXOpen.Core.blazor.Toaster.ToastService.New()
  name.vb: New()
- uid: AXOpen.Core.blazor.Toaster.ToastService.AddToast(System.String,System.String,System.String,System.Int32)
  commentId: M:AXOpen.Core.blazor.Toaster.ToastService.AddToast(System.String,System.String,System.String,System.Int32)
  id: AddToast(System.String,System.String,System.String,System.Int32)
  parent: AXOpen.Core.blazor.Toaster.ToastService
  langs:
  - csharp
  - vb
  name: AddToast(string, string, string, int)
  nameWithType: ToastService.AddToast(string, string, string, int)
  fullName: AXOpen.Core.blazor.Toaster.ToastService.AddToast(string, string, string, int)
  type: Method
  source:
    remote:
      path: src/core/src/AXOpen.Core.Blazor/Toaster/ToastService.cs
      branch: 64-_NEW-FEATURE_Add_momentary_and_toggle_task_from_tco
      repo: https://github.com/ix-ax/ix.framework.git
    id: AddToast
    path: ../src/core/src/AXOpen.Core.Blazor/Toaster/ToastService.cs
    startLine: 26
  assemblies:
  - axopen_core_blazor
  namespace: AXOpen.Core.blazor.Toaster
  syntax:
    content: public void AddToast(string type, string title, string message, int time)
    parameters:
    - id: type
      type: System.String
    - id: title
      type: System.String
    - id: message
      type: System.String
    - id: time
      type: System.Int32
    content.vb: Public Sub AddToast(type As String, title As String, message As String, time As Integer)
  overload: AXOpen.Core.blazor.Toaster.ToastService.AddToast*
  nameWithType.vb: ToastService.AddToast(String, String, String, Integer)
  fullName.vb: AXOpen.Core.blazor.Toaster.ToastService.AddToast(String, String, String, Integer)
  name.vb: AddToast(String, String, String, Integer)
- uid: AXOpen.Core.blazor.Toaster.ToastService.AddToast(AXOpen.Core.blazor.Toaster.Toast)
  commentId: M:AXOpen.Core.blazor.Toaster.ToastService.AddToast(AXOpen.Core.blazor.Toaster.Toast)
  id: AddToast(AXOpen.Core.blazor.Toaster.Toast)
  parent: AXOpen.Core.blazor.Toaster.ToastService
  langs:
  - csharp
  - vb
  name: AddToast(Toast)
  nameWithType: ToastService.AddToast(Toast)
  fullName: AXOpen.Core.blazor.Toaster.ToastService.AddToast(AXOpen.Core.blazor.Toaster.Toast)
  type: Method
  source:
    remote:
      path: src/core/src/AXOpen.Core.Blazor/Toaster/ToastService.cs
      branch: 64-_NEW-FEATURE_Add_momentary_and_toggle_task_from_tco
      repo: https://github.com/ix-ax/ix.framework.git
    id: AddToast
    path: ../src/core/src/AXOpen.Core.Blazor/Toaster/ToastService.cs
    startLine: 32
  assemblies:
  - axopen_core_blazor
  namespace: AXOpen.Core.blazor.Toaster
  syntax:
    content: public void AddToast(Toast toast)
    parameters:
    - id: toast
      type: AXOpen.Core.blazor.Toaster.Toast
    content.vb: Public Sub AddToast(toast As Toast)
  overload: AXOpen.Core.blazor.Toaster.ToastService.AddToast*
- uid: AXOpen.Core.blazor.Toaster.ToastService.GetToasts
  commentId: M:AXOpen.Core.blazor.Toaster.ToastService.GetToasts
  id: GetToasts
  parent: AXOpen.Core.blazor.Toaster.ToastService
  langs:
  - csharp
  - vb
  name: GetToasts()
  nameWithType: ToastService.GetToasts()
  fullName: AXOpen.Core.blazor.Toaster.ToastService.GetToasts()
  type: Method
  source:
    remote:
      path: src/core/src/AXOpen.Core.Blazor/Toaster/ToastService.cs
      branch: 64-_NEW-FEATURE_Add_momentary_and_toggle_task_from_tco
      repo: https://github.com/ix-ax/ix.framework.git
    id: GetToasts
    path: ../src/core/src/AXOpen.Core.Blazor/Toaster/ToastService.cs
    startLine: 38
  assemblies:
  - axopen_core_blazor
  namespace: AXOpen.Core.blazor.Toaster
  syntax:
    content: public List<Toast> GetToasts()
    return:
      type: System.Collections.Generic.List{AXOpen.Core.blazor.Toaster.Toast}
    content.vb: Public Function GetToasts() As List(Of Toast)
  overload: AXOpen.Core.blazor.Toaster.ToastService.GetToasts*
- uid: AXOpen.Core.blazor.Toaster.ToastService.RemoveToast(AXOpen.Core.blazor.Toaster.Toast)
  commentId: M:AXOpen.Core.blazor.Toaster.ToastService.RemoveToast(AXOpen.Core.blazor.Toaster.Toast)
  id: RemoveToast(AXOpen.Core.blazor.Toaster.Toast)
  parent: AXOpen.Core.blazor.Toaster.ToastService
  langs:
  - csharp
  - vb
  name: RemoveToast(Toast)
  nameWithType: ToastService.RemoveToast(Toast)
  fullName: AXOpen.Core.blazor.Toaster.ToastService.RemoveToast(AXOpen.Core.blazor.Toaster.Toast)
  type: Method
  source:
    remote:
      path: src/core/src/AXOpen.Core.Blazor/Toaster/ToastService.cs
      branch: 64-_NEW-FEATURE_Add_momentary_and_toggle_task_from_tco
      repo: https://github.com/ix-ax/ix.framework.git
    id: RemoveToast
    path: ../src/core/src/AXOpen.Core.Blazor/Toaster/ToastService.cs
    startLine: 44
  assemblies:
  - axopen_core_blazor
  namespace: AXOpen.Core.blazor.Toaster
  syntax:
    content: public void RemoveToast(Toast toast)
    parameters:
    - id: toast
      type: AXOpen.Core.blazor.Toaster.Toast
    content.vb: Public Sub RemoveToast(toast As Toast)
  overload: AXOpen.Core.blazor.Toaster.ToastService.RemoveToast*
- uid: AXOpen.Core.blazor.Toaster.ToastService.RemoveAllToast
  commentId: M:AXOpen.Core.blazor.Toaster.ToastService.RemoveAllToast
  id: RemoveAllToast
  parent: AXOpen.Core.blazor.Toaster.ToastService
  langs:
  - csharp
  - vb
  name: RemoveAllToast()
  nameWithType: ToastService.RemoveAllToast()
  fullName: AXOpen.Core.blazor.Toaster.ToastService.RemoveAllToast()
  type: Method
  source:
    remote:
      path: src/core/src/AXOpen.Core.Blazor/Toaster/ToastService.cs
      branch: 64-_NEW-FEATURE_Add_momentary_and_toggle_task_from_tco
      repo: https://github.com/ix-ax/ix.framework.git
    id: RemoveAllToast
    path: ../src/core/src/AXOpen.Core.Blazor/Toaster/ToastService.cs
    startLine: 50
  assemblies:
  - axopen_core_blazor
  namespace: AXOpen.Core.blazor.Toaster
  syntax:
    content: public void RemoveAllToast()
    content.vb: Public Sub RemoveAllToast()
  overload: AXOpen.Core.blazor.Toaster.ToastService.RemoveAllToast*
- uid: AXOpen.Core.blazor.Toaster.ToastService.Dispose
  commentId: M:AXOpen.Core.blazor.Toaster.ToastService.Dispose
  id: Dispose
  parent: AXOpen.Core.blazor.Toaster.ToastService
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: ToastService.Dispose()
  fullName: AXOpen.Core.blazor.Toaster.ToastService.Dispose()
  type: Method
  source:
    remote:
      path: src/core/src/AXOpen.Core.Blazor/Toaster/ToastService.cs
      branch: 64-_NEW-FEATURE_Add_momentary_and_toggle_task_from_tco
      repo: https://github.com/ix-ax/ix.framework.git
    id: Dispose
    path: ../src/core/src/AXOpen.Core.Blazor/Toaster/ToastService.cs
    startLine: 72
  assemblies:
  - axopen_core_blazor
  namespace: AXOpen.Core.blazor.Toaster
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: AXOpen.Core.blazor.Toaster.ToastService.Dispose*
  implements:
  - System.IDisposable.Dispose
references:
- uid: AXOpen.Core.blazor.Toaster
  commentId: N:AXOpen.Core.blazor.Toaster
  name: AXOpen.Core.blazor.Toaster
  nameWithType: AXOpen.Core.blazor.Toaster
  fullName: AXOpen.Core.blazor.Toaster
  spec.csharp:
  - uid: AXOpen
    name: AXOpen
  - name: .
  - uid: AXOpen.Core
    name: Core
  - name: .
  - uid: AXOpen.Core.blazor
    name: blazor
  - name: .
  - uid: AXOpen.Core.blazor.Toaster
    name: Toaster
  spec.vb:
  - uid: AXOpen
    name: AXOpen
  - name: .
  - uid: AXOpen.Core
    name: Core
  - name: .
  - uid: AXOpen.Core.blazor
    name: blazor
  - name: .
  - uid: AXOpen.Core.blazor.Toaster
    name: Toaster
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.EventHandler
  commentId: T:System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: AXOpen.Core.blazor.Toaster.ToastService.#ctor*
  commentId: Overload:AXOpen.Core.blazor.Toaster.ToastService.#ctor
  name: ToastService
  nameWithType: ToastService.ToastService
  fullName: AXOpen.Core.blazor.Toaster.ToastService.ToastService
  nameWithType.vb: ToastService.New
  fullName.vb: AXOpen.Core.blazor.Toaster.ToastService.New
  name.vb: New
- uid: AXOpen.Core.blazor.Toaster.ToastService.AddToast*
  commentId: Overload:AXOpen.Core.blazor.Toaster.ToastService.AddToast
  name: AddToast
  nameWithType: ToastService.AddToast
  fullName: AXOpen.Core.blazor.Toaster.ToastService.AddToast
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: AXOpen.Core.blazor.Toaster.Toast
  commentId: T:AXOpen.Core.blazor.Toaster.Toast
  parent: AXOpen.Core.blazor.Toaster
  name: Toast
  nameWithType: Toast
  fullName: AXOpen.Core.blazor.Toaster.Toast
- uid: AXOpen.Core.blazor.Toaster.ToastService.GetToasts*
  commentId: Overload:AXOpen.Core.blazor.Toaster.ToastService.GetToasts
  name: GetToasts
  nameWithType: ToastService.GetToasts
  fullName: AXOpen.Core.blazor.Toaster.ToastService.GetToasts
- uid: System.Collections.Generic.List{AXOpen.Core.blazor.Toaster.Toast}
  commentId: T:System.Collections.Generic.List{AXOpen.Core.blazor.Toaster.Toast}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Toast>
  nameWithType: List<Toast>
  fullName: System.Collections.Generic.List<AXOpen.Core.blazor.Toaster.Toast>
  nameWithType.vb: List(Of Toast)
  fullName.vb: System.Collections.Generic.List(Of AXOpen.Core.blazor.Toaster.Toast)
  name.vb: List(Of Toast)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: AXOpen.Core.blazor.Toaster.Toast
    name: Toast
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: AXOpen.Core.blazor.Toaster.Toast
    name: Toast
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: AXOpen.Core.blazor.Toaster.ToastService.RemoveToast*
  commentId: Overload:AXOpen.Core.blazor.Toaster.ToastService.RemoveToast
  name: RemoveToast
  nameWithType: ToastService.RemoveToast
  fullName: AXOpen.Core.blazor.Toaster.ToastService.RemoveToast
- uid: AXOpen.Core.blazor.Toaster.ToastService.RemoveAllToast*
  commentId: Overload:AXOpen.Core.blazor.Toaster.ToastService.RemoveAllToast
  name: RemoveAllToast
  nameWithType: ToastService.RemoveAllToast
  fullName: AXOpen.Core.blazor.Toaster.ToastService.RemoveAllToast
- uid: AXOpen.Core.blazor.Toaster.ToastService.Dispose*
  commentId: Overload:AXOpen.Core.blazor.Toaster.ToastService.Dispose
  name: Dispose
  nameWithType: ToastService.Dispose
  fullName: AXOpen.Core.blazor.Toaster.ToastService.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
  - name: (
  - name: )
