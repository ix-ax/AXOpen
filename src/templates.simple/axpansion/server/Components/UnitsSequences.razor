@using AXOpen.Core;
@using AXOpen.VisualComposer;
@using AXSharp.Connector
@inherits RenderableComplexComponentBase<AXSharp.Connector.ITwinObject>

<div class="container">
    @* <div class="row"> *@
    @*     <h1>@Component.AttributeName</h1> *@
    @* </div> *@
    <!-- TOP LEVEL TASKS -->
    <div class="d-flex justify-content-end">    
                 
        @* @foreach (var task in this.Component.GetChildren().OfType<IModeContainer>().Where(p => p is AxoTask).Select(p => p as AxoTask)) *@
        @* { *@
        @*     $1$ <div> #1# *@
        @*     $1$     <AuthorizeView Roles="can_run_automat_mode"> #1# *@
        @*     $1$         <Authorized> #1# *@
        @*     $1$             <AxoTaskCommandView Component="@task" /> #1# *@
        @*     $1$         </Authorized> #1# *@
        @*     $1$         <NotAuthorized> #1# *@
        @*     $1$             <AxoTaskStatusView Component="@task" /> #1# *@
        @*     $1$         </NotAuthorized> #1# *@
        @*     $1$     </AuthorizeView> #1# *@
        @*     $1$ </div> #1# *@
        @* *@
        @*     <RenderableContentControl Context="@task" PresentationTemplate="AXOpen.Core.AxoTaskView"></RenderableContentControl> *@
        @*     $1$ <AxoTaskCommandView Component="@task" /> #1# *@
        @* } *@
    </div>

    <!-- TASK DETAILS -->
    <div class="row">
        @foreach (AxoSequencer axoSequencer in Component.GetChildren().OfType<AxoSequencer>())
        {
            @if (axoSequencer.Status.Cyclic == (ushort)eAxoTaskState.Busy)
            {
                <div class="d-flex">
                    <div class="container rounded-3 @AxoStepHelper.StepRowColor(axoSequencer.CurrentStep)">
                        <div class="col fs-3">
                            @AxoStepHelper.Description(axoSequencer.CurrentStep)
                        </div>
                    </div>

                    <a class="btn btn-primary ms-1 d-flex align-items-center" role="button" @onclick="Collapse">
                        <span class="bi-chevron-down d-inline-block collapsible @(_isCollapsed ? "show" : "open")" />
                    </a>
                </div>

                @if (!_isCollapsed)
                {
                    <div>
                        <AxoSequencerView Component="@axoSequencer" HasTaskControlButton="false"></AxoSequencerView>
                    </div>
                }

                <div class="m-5">
                    <VisualComposerContainer Objects="@ObjectCollection"/>
                </div>

            }
        }
    </div>
</div>

@code
{

    [Parameter]
    public ITwinObject[] ObjectCollection { get; set; }
    
    private bool _isCollapsed = true;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        List<AxoSequencer> allSequencers = Component.GetChildren().OfType<AxoSequencer>().ToList();

        foreach (var sequncer in allSequencers)
        {
            UpdateValuesOnChange(sequncer.Status);
            UpdateValuesOnChange(sequncer.CurrentStep.StepDescription);
            UpdateValuesOnChange(sequncer.CurrentStep.Status);
        }
    }

    private void Collapse()
    {
        _isCollapsed = !_isCollapsed;
    }
}