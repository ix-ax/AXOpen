@using AXSharp.Connector
@using AXOpen.Core
@using AXOpen.VisualComposer;
@using axosimple.server.Pages.Settings
@inherits ComponentBase

<div class="content-wrapper">
    @* <div> *@
    @*     <VisualComposerContainer Objects="@AllVisualItems" Id="@Component.Symbol"></VisualComposerContainer> *@
    @* </div> *@
    <UnitsSequences Component="@this.Component.Unit" ObjectCollection="@this.Component.Associates"></UnitsSequences>
    <UnitsService ServiceTask="((dynamic)this.Component.Unit).ServiceMode" Components="@this.Component.Associates"></UnitsService>
</div>

<!-- Modal data alarms -->
<div class="modal fade" id="alarmsviewmodal" tabindex="-1" aria-labelledby="alarmsviewTitle" aria-hidden="true">
    <AlarmsView MessageProvider="@this.Component.MessageProvider"></AlarmsView>
</div>


<!-- Modal technology window -->
<div class="modal fade" id="technologysettingsviewmodal" tabindex="-1" aria-labelledby="technologysettingsviewmodalTitle" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog modal-xl modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <div class="container">
                    <div class="row">
                        <h1 class="modal-title fs-5" id="technologysettingsviewmodalTitle">@Component?.Unit.HumanReadable</h1>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="@HideModalTechnologySettings"></button>
                    </div>
                    <div class="row p-2">
                    </div>
                    <div class="row">
                        <button type="button" class="btn btn-primary"
                                @onclick="async () => {await Component.TechnologySettings.OnlineToShadowAsync();
                                               await Component.SharedTechnologySettings.OnlineToShadowAsync();
                                    }">
                            Refresh
                        </button>
                    </div>
                </div>
            </div>
            <div class="modal-body">
                <div class="container-fluid">
                    <div class="row">
                        @if (EnableModalTechnologySettings)
                        {
                            <RenderableContentControl Context="@Component.SharedTechnologySettings" Presentation="Display" />
                            <RenderableContentControl Context="@Component.TechnologySettings" Presentation="Display" />
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal data window -->
<div class="modal fade" id="dataviewmodal" tabindex="-1" aria-labelledby="dataviewmodalTitle" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog modal-xl modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <div class="container">
                    <div class="row">
                        <h1 class="modal-title fs-5" id="dataviewmodalTitle">@Component?.Unit.HumanReadable</h1>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="@HideModalProductionData"></button>
                    </div>
                    <div class="row p-2">
                    </div>
                    <div class="row">
                        <button type="button" class="btn btn-primary"
                                @onclick="async () => {await Component.DataHeader.OnlineToShadowAsync();
                                               await Component.Data.OnlineToShadowAsync();
                                    }">
                            Refresh
                        </button>
                    </div>
                </div>
            </div>
            <div class="modal-body">
                @if (EnableModalProductionData)
                {
                    <div class="container-fluid">
                        <div class="row">
                            <RenderableContentControl Context="@Component.DataHeader" Presentation="Status-Display" />
                            <RenderableContentControl Context="@Component.Data" Presentation="Status-Display" />
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>


<!-- Modal data components -->
<div class="modal fade" id="componentsviewmodal" tabindex="-1" aria-labelledby="componentsviewTitle" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog modal-xl modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <div class="container">
                    <div class="row">
                        <h1 class="modal-title fs-5" id="componentsTitle">Components</h1>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="@HideModalComponents"></button>
                    </div>
                </div>
            </div>
            <div class="modal-body">
                @if (EnableModalComponents)
                {
                    <div class="container-fluid">
                        <div class="row">
                            <RenderableContentControl Context="Component.UnitComponents" Presentation="Command-Control" />
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<div class="text-white p-2 fixed-bottom" style="z-index: 0;">

    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#technologysettingsviewmodal" onclick="@ShowModalTechnologySettings">
        Technology Settings
    </button>

    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#dataviewmodal" onclick="@ShowModalProductionData">
        Process Data
    </button>

    <AlarmsButton MessageProvider="@this.Component?.MessageProvider"></AlarmsButton>
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#componentsviewmodal" onclick="@ShowModalComponents">
        Components
    </button>
</div>

<AXOpen.Core.Blazor.AxoDialogs.AxoDialogLocator LocatorPath="@this.Component?.Unit.Symbol" ObservedObjects="new[] {this.Component.Unit}"></AXOpen.Core.Blazor.AxoDialogs.AxoDialogLocator>
<AXOpen.Core.Blazor.Dialogs.AxoAlertLocator LocatorPath="@this.Component?.Unit.Symbol" ObservedObjects="new[] {this.Component.Unit}"></AXOpen.Core.Blazor.Dialogs.AxoAlertLocator>

