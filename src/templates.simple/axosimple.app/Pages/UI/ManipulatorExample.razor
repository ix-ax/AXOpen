@page "/ui/ManipulatorExample"
@using AXOpen.Base.Dialogs;
@using AXOpen.Core.Blazor.AxoDialogs;
@using axosimple.hmi.Components;
@using AXOpen.Data;
@using AXOpen.Messaging.Static
@using AXSharp.Connector;


@inject IAlertDialogService _alerts

<UnitsSequences Component="@Entry.Plc.Context.PneumaticManipulator" PollingInterval="250"></UnitsSequences>
<UnitsService ServiceTask="@Entry.Plc.Context.PneumaticManipulator.ServiceMode" Components="@Entry.Plc.Context.PneumaticManipulator.Components" PollingInterval="250"></UnitsService>

@foreach (var message in Messengers)
{
    if (message.IsActive.LastValue)
    { 
        <RenderableContentControl Context="message" Presentation="Base"></RenderableContentControl>
    }
     
}



<AxoDialogLocator DialogId="custation001" ObservedObjects="new[] {Entry.Plc.Context.PneumaticManipulator}"></AxoDialogLocator>


<AXOpen.Core.Blazor.Dialogs.AxoAlertDialogLocator ObservedObjects="new[] {Entry.Plc.Context.PneumaticManipulator}" UseScopedAlerts=false></AXOpen.Core.Blazor.Dialogs.AxoAlertDialogLocator>


@*<button class="btn btn-primary" @onclick="@showAlert">Show alert</button>*@


@code
{
    private ModalDialog ModalDialog { get; set; }
    private IEnumerable<AxoMessenger> Messengers => Entry.Plc.Context.PneumaticManipulator.GetChildren().Flatten(p => p.GetChildren()).OfType<AxoMessenger>();
    private void showAlert()
    {
        _alerts.AddAlertDialog(eAlertDialogType.Info, "Ahoj", "som dialog", 5);
        StateHasChanged();
    }
}

