@page "/ui/ManipulatorExample"
@using AXOpen.Base.Dialogs;
@using AXOpen.Core.Blazor.AxoDialogs;
@using AXOpen.Core.Blazor.Dialogs
@using axosimple.hmi.Components;
@using AXOpen.Data;
@using AXOpen.Messaging.Static
@using AXSharp.Connector;

@inject IAlertDialogService _alerts





<div class="accordion" id="accordionExample">
  <div class="accordion-item">
    <h2 class="accordion-header" id="headingOne">
      <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
           Digital inspector & Analogue inspector & Data Inspector
      </button>
    </h2>
    <div id="collapseOne" class="accordion-collapse collapse" aria-labelledby="headingOne" data-bs-parent="#accordionExample">
      <div class="accordion-body">
                <h3>Digital inspector & Analogue inspector & Data Inspector</h3>
            <div class="row">

                <RenderableContentControl Context="@Entry.Plc.Context.PneumaticManipulator.AutomatSequence._presenceInspector" Presentation="Control" Class="col"></RenderableContentControl>


                <RenderableContentControl Context="@Entry.Plc.Context.PneumaticManipulator.AutomatSequence._valueInspector" Presentation="Control" Class="col"></RenderableContentControl>


                <RenderableContentControl Context="@Entry.Plc.Context.PneumaticManipulator.AutomatSequence._dataInspector" Presentation="Control" Class="col"></RenderableContentControl>
            </div>
      </div>
    </div>
  </div>
</div>



<RenderableContentControl Context="@Entry.Plc.Context.PneumaticManipulator.AutomatSequence._inspectionResult" Presentation="Control"></RenderableContentControl>
<RenderableContentControl Context="@Entry.Plc.Context.PneumaticManipulator.AutomatSequence._inspectionValue" Presentation="Control"></RenderableContentControl>
<RenderableContentControl Context="@Entry.Plc.Context.PneumaticManipulator.AutomatSequence._inspectionData" Presentation="Control"></RenderableContentControl>

<UnitsSequences Component="@Entry.Plc.Context.PneumaticManipulator" PollingInterval="250"></UnitsSequences>
<UnitsService ServiceTask="@Entry.Plc.Context.PneumaticManipulator.ServiceMode" Components="@Entry.Plc.Context.PneumaticManipulator.Components" PollingInterval="250"></UnitsService>

@foreach (var message in Messengers)
{
    if (message.IsActive.LastValue)
    { 
        <RenderableContentControl Context="message" Presentation="Base"></RenderableContentControl>
    }
     
}



<h1>template generated</h1>
<RenderableContentControl Context="@Entry.Plc.Context.PneumaticManipulator.AutomatSequence._presenceInspector" Presentation="Command"></RenderableContentControl>
<RenderableContentControl Context="@Entry.Plc.Context.PneumaticManipulator.AutomatSequence._valueInspector" Presentation="Command"></RenderableContentControl>
<RenderableContentControl Context="@Entry.Plc.Context.PneumaticManipulator.AutomatSequence._dataInspector" Presentation="Command"></RenderableContentControl>


<AxoDialogLocator DialogId="custation001" ObservedObjects="new[] {Entry.Plc.Context.PneumaticManipulator}"></AxoDialogLocator>

<AxoAlertDialogLocator ObservedObjects="new[] {Entry.Plc.Context.PneumaticManipulator}"/>

<h1>Comprehensive result</h1>

<RenderableContentControl Context="@Entry.Plc.Context.PneumaticManipulator.AutomatSequence._comprehensiveResult"></RenderableContentControl>


<button class="btn btn-primary" @onclick="@Reset">Reset comprehensive result</button>


@code
{
  
    private IEnumerable<AxoMessenger> Messengers => Entry.Plc.Context.PneumaticManipulator.GetChildren().Flatten(p => p.GetChildren()).OfType<AxoMessenger>();
    private void Reset()
    {
        Entry.Plc.Context.PneumaticManipulator.AutomatSequence._comprehensiveResult.Result.Cyclic = 0;
        _alerts.AddAlertDialog(eAlertDialogType.Info, "Comprehenesive result", "Reseted", 3);
        StateHasChanged();
    }





}

