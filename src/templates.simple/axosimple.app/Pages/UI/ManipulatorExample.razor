@page "/ui/ManipulatorExample"
@using axosimple.hmi.Components;
@using AXOpen.Data;
@using AXOpen.Messaging.Static
@using AXSharp.Connector;
@inherits RenderableComponentBase;

<UnitsSequences Component="@Entry.Plc.Context.PneumaticManipulator" PollingInterval="250"></UnitsSequences>
<UnitsService ServiceTask="@Entry.Plc.Context.PneumaticManipulator.ServiceMode" Components="@Entry.Plc.Context.PneumaticManipulator.Components" PollingInterval="250"></UnitsService>
@*<UnitsData Data="Entry.Plc.Context.PneumaticManipulator.ProcessData.Shared.Set" PollingInterval="100"></UnitsData>*@

@foreach (var message in Messengers)
{
    if (message.IsActive.LastValue)
    {
        <RenderableContentControl Context="message" Presentation="Base"></RenderableContentControl>
    }
}

@code
{
    private IEnumerable<AxoMessenger> Messengers => Entry.Plc.Context.PneumaticManipulator.GetChildren().Flatten(p => p.GetChildren()).OfType<AxoMessenger>();

    protected override Task OnInitializedAsync()
    {
        this.UpdateValuesOnChange(@Entry.Plc.Context.PneumaticManipulator);
        return base.OnInitializedAsync();
    }
}

