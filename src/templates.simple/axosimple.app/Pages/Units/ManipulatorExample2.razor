@page "/Units/ManipulatorExample2"
@using AXOpen.Core.Blazor.AxoDialogs;
@using AXOpen.Core.Blazor.Dialogs
@using axosimple.hmi.Components;
@using AXOpen.Data;
@using AXOpen.Messaging.Static
@using AXSharp.Connector;

<UnitsSequences Component="@Entry.Plc.Context.PneumaticManipulator2" PollingInterval="250"></UnitsSequences>
<UnitsService ServiceTask="@Entry.Plc.Context.PneumaticManipulator2.ServiceMode" Components="@Entry.Plc.Context.PneumaticManipulator2.Components" PollingInterval="250"></UnitsService>

@foreach (var message in Messengers)
{
    if (message.IsActive.LastValue)
    {
        <RenderableContentControl Context="message" Presentation="Base"></RenderableContentControl>
    }

}



@*<AxoAlertDialogLocator ObservedObjects="new[] {Entry.Plc.Context.PneumaticManipulator2}" IsScoped="false"></AxoAlertDialogLocator>*@

<AxoDialogLocator DialogId="custation02" ObservedObjects="new[] {Entry.Plc.Context.PneumaticManipulator2}"></AxoDialogLocator>
<AxoAlertDialogLocator ObservedObjects="new[] {Entry.Plc.Context.PneumaticManipulator2}" />

@code
{
     private IEnumerable<AxoMessenger> Messengers => Entry.Plc.Context.PneumaticManipulator2.GetChildren().Flatten(p => p.GetChildren()).OfType<AxoMessenger>();
}

