name: "axosimple"
version: '0.1.4-alpha.79'
type: app
registries:
  '@ix-ax': https://npm.pkg.github.com/
devDependencies:
  "@ax/sdk": ^4.0.3
  "@ax/sld": ^0.15.9
dependencies:
  "@ix-ax/axopen.data": '0.1.4-alpha.79'
  "@ix-ax/axopen.simatic1500": '0.1.4-alpha.79'
  "@ax/system-serde": ^2.0.2
variables:
  APAX_BUILD_ARGS: [-d]
scripts:
  ixc:
    - dotnet tool restore --no-cache
    - dotnet ixc
    - dotnet ixr
  prebuild:
    - apax update-targets
  postbuild: apax ixc
  download:
    - apax install
    - apax build
    # Here you will need to set the argumen -t to your plc OP and -i to platfrom you are dowloading to

    # --default-server-interface is a must if you are using WebAPI      
    - apax sld --accept-security-disclaimer -t $AXTARGET -i $AXTARGETPLATFORMINPUT -r --default-server-interface
  watch:
    - dotnet watch --project ..\\axosimple.app\\axosimple.hmi.csproj
  da:
    - apax download
    - apax watch
  check+download: |
    if [ $AXTARGET ]; then
      if [ $AXTARGETPLATFORMINPUT ]; then
        if ping -n 1 $AXTARGET &> /dev/null; then
          echo "Downloading from:" $AXTARGETPLATFORMINPUT "=>" $AXTARGET
          apax download
        else
          echo "Target with IP address:" $AXTARGET "is not accessible. No download is going to be performed!!!"
        fi
      else
        echo "Environment variable AXTARGETPLATFORMINPUT not defined!!!"
      fi
    else
      echo "Environment variable AXTARGET not defined!!!"
    fi
  update-targets: |
    if [ $AXBUILDTARGET_1 ]; then
      yq -i "del(.targets)" apax.yml
      yq -i ".targets[0] = strenv(AXBUILDTARGET_1)" apax.yml
      if [ $AXBUILDTARGET_2 ]; then
        yq -i ".targets[1] = strenv(AXBUILDTARGET_2)" apax.yml
      fi
      if [ $AXBUILDTARGET_3 ]; then
        yq -i ".targets[2] = strenv(AXBUILDTARGET_3)" apax.yml
      fi
    fi
  rr:
    - apax build
    - apax download
    - apax watch
  fr:
    - ..\\scripts\\StartPlcSimAdvCli.exe
    - apax install
    - apax rr
targets:
  - plcsim
  - axunit-llvm
  - llvm
