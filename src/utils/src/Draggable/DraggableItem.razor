@if (Show)
{
    <AuthorizeView Roles="Administrator">
        <Authorized>
            <div draggable="true" @ondragend="OnDragEnd" @ondragstart="OnDragStart" style="position: absolute; left: @(ratioImgX.ToString().Replace(',', '.'))%; top: @(ratioImgY.ToString().Replace(',', '.'))%; display: @(Show ? "block" : "none"); translate: @(Transform.X)% @(Transform.Y)%; @(Width != -1 ? "width: " + Width + "rem" : null); @(Height != -1 ? "height: " + Height + "rem" : null); z-index: @ZIndex;">
                @if (ChildContent == null)
                {
                    <RenderableContentControl Context="@AxoObject" Presentation="@Presentation.ToString()" />
                }
                else
                {
                    @ChildContent
                }
                <a class="position-absolute text-decoration-none text-black" style="left: 97%; top: 0%; translate: -100% -50%; cursor: pointer;" data-bs-toggle="modal" data-bs-target="#settings-@Id.Replace('.', '_')">
                    <span class="bi bi-gear-fill fs-4" aria-hidden="true" />
                </a>
            </div>

            <div class="modal fade" id="settings-@Id.Replace('.', '_')" tabindex="-1" aria-hidden="true">
                <div class="modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h1 class="modal-title fs-5" id="alarmsviewTitle">@Id</h1>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body justify-content-center">
                            <div class="mb-1 row">
                                <label class="col-sm-2 col-form-label">Show</label>
                                <div class="col-sm-10">
                                    <input class="form-check-input" type="checkbox" checked="@(Show ? "checked" : null)" @onclick="() => {Show = !Show;}">
                                </div>
                            </div>
                            <div class="mb-1 row">
                                <label class="col-sm-2 col-form-label">Presentation</label>
                                <div class="col-sm-10">
                                    <select class="form-select" value="@Presentation.ToString()" @onchange="@((args) => @Presentation = PresentationType.FromString((string)args.Value))">
                                        @foreach (var presentation in PresentationType.AllTypes)
                                        {
                                            <option data value="@presentation.ToString()">@presentation.ToString()</option>
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="mb-1 row">
                                <label class="col-sm-2 col-form-label">Transform</label>
                                <div class="col-sm-10">
                                    <select class="form-select" value="@Transform.ToString()" @onchange="@((args) => @Transform = TransformType.FromString((string)args.Value))">
                                        @foreach (var transform in TransformType.AllTypes)
                                        {
                                            <option data value="@transform.ToString()">@transform.ToString()</option>
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="mb-1 row">
                                <label class="col-sm-2 col-form-label">Width</label>
                                <div class="col-sm-10">
                                    <input type="text" class="form-control" placeholder="Width" @bind="Width">
                                </div>
                            </div>
                            <div class="mb-1 row">
                                <label class="col-sm-2 col-form-label">Height</label>
                                <div class="col-sm-10">
                                    <input type="text" class="form-control" placeholder="Height" @bind="Height">
                                </div>
                            </div>
                            <div class="mb-1 row">
                                <label class="col-sm-2 col-form-label">ZIndex</label>
                                <div class="col-sm-10">
                                    <input type="text" class="form-control" placeholder="ZIndex" @bind="ZIndex">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </Authorized>
        <NotAuthorized>
            <div style="position: absolute; left: @(ratioImgX.ToString().Replace(',', '.'))%; top: @(ratioImgY.ToString().Replace(',', '.'))%; display: @(Show ? "block" : "none"); translate: @(Transform.X)% @(Transform.Y)%;">
                @if (ChildContent == null)
                {
                    <RenderableContentControl Context="@AxoObject" Presentation="@Presentation.ToString()" />
                }
                else
                {
                    @ChildContent
                }
            </div>
        </NotAuthorized>
    </AuthorizeView>
}