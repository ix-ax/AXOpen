<AuthorizeView Roles="Administrator">
    <Authorized>
        @if (InDesign)
        {
            <div id="@Id.Replace('.', '_')-@UniqueGuid" style="position: absolute; left: @(Left.ToString().Replace(',', '.'))%; top: @(Top.ToString().Replace(',', '.'))%; transform: scale(@(Scale)); translate: @(Transform.X)% @(Transform.Y)%; width: @(Width != -1 ? Width + "rem" : "max-content"); height: @(Height != -1 ? Height + "rem" : "max-content"); z-index: @ZIndex;">
                <div class="@(Background ? "card border border-3 p-2 rounded-3" : null)" style="@(Background ? "background-color: " + @BackgroundColor + "; border-color: " + @BackgroundColor + " !important;" : null)">
                    <RenderableContentControl @ref="renderableContentControlRcc"
                                              Context="@TwinElement"
                                              Presentation="@Presentation.ToString()"
                                              ParentContainer="@this"
                                              PresentationTemplate="@PresentationTemplate" />
                </div>
                <a class="position-absolute text-decoration-none text-black" style="left: 97%; top: 0%; translate: -100% -50%; cursor: pointer;" data-bs-toggle="modal"
                   data-bs-target="#settings-@Id.Replace('.', '_')-@UniqueGuid">
                    <span class="bi bi-pencil-square fs-4 @(Parent?.Theme)" aria-hidden="true" />
                </a>
            </div>
        }
        else
        {
            <div style="position: absolute; left: @(Left.ToString().Replace(',', '.'))%; top: @(Top.ToString().Replace(',', '.'))%; transform: scale(@(Scale)); translate: @(Transform.X)% @(Transform.Y)%; width: @(Width != -1 ? Width + "rem" : "max-content"); height: @(Height != -1 ? Height + "rem" : "max-content"); z-index: @ZIndex;">
                <div class="@(Background ? "card border border-3 p-2 rounded-3" : null)" style="@(Background ? "background-color: " + @BackgroundColor + "; border-color: " + @BackgroundColor + " !important;" : null)">
                    <RenderableContentControl Context="@TwinElement"
                                              Presentation="@Presentation.ToString()"
                                              ParentContainer="@this"
                                              PresentationTemplate="@PresentationTemplate" />
                </div>
            </div>
        }
    </Authorized>
    <NotAuthorized>
        @if (Roles != null && Roles != "")
        {
            <AuthorizeView Roles="@Roles" Context="SecondAuthorizeView">
                <div style="position: absolute; left: @(Left.ToString().Replace(',', '.'))%; top: @(Top.ToString().Replace(',', '.'))%; translate: @(Transform.X)% @(Transform.Y)%; width: @(Width != -1 ? Width + "rem" : "max-content"); height: @(Height != -1 ? Height + "rem" : "max-content"); z-index: @ZIndex;">
                    <div class="@(Background ? "card border border-3 p-2 rounded-3" : null)" style="@(Background ? "background-color: " + @BackgroundColor + "; border-color: " + @BackgroundColor + " !important;" : null)">
                        <RenderableContentControl Context="@TwinElement"
                                                  Presentation="@Presentation.ToString()"
                                                  ParentContainer="@this"
                                                  PresentationTemplate="@PresentationTemplate" />
                    </div>
                </div>
            </AuthorizeView>
        }
        else
        {
            <div style="position: absolute; left: @(Left.ToString().Replace(',', '.'))%; top: @(Top.ToString().Replace(',', '.'))%; translate: @(Transform.X)% @(Transform.Y)%; width: @(Width != -1 ? Width + "rem" : "max-content"); height: @(Height != -1 ? Height + "rem" : "max-content"); z-index: @ZIndex;">
                <div class="@(Background ? "card border border-3 p-2 rounded-3" : null)" style="background-color: @(BackgroundColor);">
                    <RenderableContentControl Context="@TwinElement"
                                              Presentation="@Presentation.ToString()"
                                              ParentContainer="@this"
                                              PresentationTemplate="@PresentationTemplate" />
                </div>
            </div>
        }
    </NotAuthorized>
</AuthorizeView>

@code
{
    [Parameter]
    public bool InDesign { get; set; }
    private RenderableContentControl renderableContentControlRcc;
}
