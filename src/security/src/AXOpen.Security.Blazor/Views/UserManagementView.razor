@inject IRepositoryService _repositoryService
@using AxOpen.Security.Entities;
@using AxOpen.Security.Services;
@using Microsoft.AspNetCore.Components.Forms
@namespace AxOpen.Security.Views

<div class="card" style="min-height: 20vh; max-height: 40vh">
    <div class="card-header">
        <h4>@Localizer["List of users:"]</h4>
    </div>
    <div class="card-body overflow-auto">
        <table class="table table-hover">
            <thead>
                <tr>
                    <th scope="col">@Localizer["Username"]</th>
                    <th scope="col">@Localizer["Can change password"]</th>
                    <th scope="col">@Localizer["Created"]</th>
                    <th scope="col">@Localizer["Modified"]</th>
                </tr>
            </thead>
            <tbody>
                @foreach (User user in AllUsers)
                {
                    <tr @onclick="@(() => RowClicked(user))" class="@((SelectedUser != null) ? ((SelectedUser.UserName == user.UserName) ? "table-active" : "") : "")">
                        <th>@user.UserName</th>
                        <td>@user.CanUserChangePassword</td>
                        <td>@user.Created</td>
                        <td>@user.Modified</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<a class="btn btn-primary mt-4" role="button" href="Identity/Account/Register">@Localizer["Create new user"]</a>
@if (SelectedUser != null)
{
    <div class="card mt-4">
        <div class="card-header">
            <div class="d-flex">
                <h4 class="me-auto">@Localizer["Selected user:"]</h4>
                <button type="button" class="btn-close align-self-center" @onclick="@(() => CloseUserDetail())"></button>
            </div>
        </div>
        <div class="card-body">
            <EditForm Model="@_model" OnValidSubmit="OnValidUpdate">
                <DataAnnotationsValidator />
                <div class="form-group">
                    <label>@Localizer["Username"]</label>
                    <InputText @bind-Value="_model.Username" type="text" class="form-control" disabled />
                    <ValidationMessage For="@(() => _model.Username)" />
                </div>

                <div class="form-group">
                    <label>@Localizer["Password"]</label>
                    <InputText @bind-Value="_model.Password" type="password" class="form-control" />
                    <ValidationMessage For="@(() => _model.Password)" />
                </div>

                <div class="form-group">
                    <label>
                        @Localizer["Confirm password"]</label>
                    <InputText @bind-Value="_model.ConfirmPassword" type="password" class="form-control" />
                    <ValidationMessage For="@(() => _model.ConfirmPassword)" />
                </div>

                <div class="form-group">
                    <label>Email</label>
                    <InputText @bind-Value="_model.Email" type="email" class="form-control" />
                    <ValidationMessage For="@(() => _model.Email)" />
                </div>

                <div class="form-check form-switch">
                    <InputCheckbox @bind-Value="_model.CanUserChangePassword" class="form-check-input" type="checkbox" id="checkBoxCanUserChangePassword" />
                    <label class="form-check-label" for="checkBoxCanUserChangePassword">@Localizer["Can change password"]</label>
                    <ValidationMessage For="@(() => _model.CanUserChangePassword)" />
                </div>

                <div class="form-group">
                    <label>@Localizer["Group"]</label>
                    <select class="form-select" aria-label="Default select example" @bind="@_model.Group">
                        <option selected disabled>@Localizer["Choose group"]</option>
                        @foreach (var group in _repositoryService.RoleGroupManager.GetAllGroup())
                        {
                            <option value="@group.Name">@group.Name</option>
                        }
                    </select>
                    <ValidationMessage For="@(() => _model.Group)" />
                </div>
                <div>
                    <button type="submit" class="btn btn-primary m-2">@Localizer["Update"]</button>
                    <button type="button" class="btn btn-danger m-2" data-bs-toggle="modal" data-bs-target="#deleteModal">@Localizer["Delete"]</button>
                </div>
            </EditForm>
        </div>
    </div>
}

@if (SelectedUser != null)
{
    <div class="modal fade " id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteModalLabel">@Localizer["Delete user"]</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <h6>@Localizer["Do you want to delete user"] @SelectedUser.UserName?</h6>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary m-2" data-bs-dismiss="modal">@Localizer["Close"]</button>
                    <button type="button" class="btn btn-danger m-2" data-bs-dismiss="modal" @onclick="@(() => DeleteUser(SelectedUser))">@Localizer["Delete"]</button>
                </div>
            </div>
        </div>
    </div>
}