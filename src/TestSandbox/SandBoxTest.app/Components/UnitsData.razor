@using AXOpen.Core;
@using AXSharp.Connector
@inherits RenderableComponentBase


<div class="accordion" id="accordionPanelsStayOpenExample">
    <div class="accordion-item">
        <h2 class="accordion-header" id="panelsStayOpen-headingOne">
            <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#panelsStayOpen-collapseOne" aria-expanded="true" aria-controls="panelsStayOpen-collapseOne">
                Shared Data
            </button>
        </h2>
        <div id="panelsStayOpen-collapseOne" class="accordion-collapse collapse show" aria-labelledby="panelsStayOpen-headingOne">
            <div class="accordion-body">
                <RenderableContentControl Context="@SharedData" Presentation="Display" />
            </div>
        </div>
    </div>
    <div class="accordion-item">
        <h2 class="accordion-header" id="panelsStayOpen-headingTwo">
            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#panelsStayOpen-collapseTwo" aria-expanded="false" aria-controls="panelsStayOpen-collapseTwo">
                Station Data
            </button>
        </h2>
        <div id="panelsStayOpen-collapseTwo" class="accordion-collapse collapse" aria-labelledby="panelsStayOpen-headingTwo">
            <div class="accordion-body">
                <RenderableContentControl Context="@Data" Presentation="Display" />
            </div>
        </div>
    </div>
</div>


@code
{
    [Parameter]
    public ITwinObject? Data { get; set; }

    [Parameter]
    public ITwinObject? SharedData { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        this.UpdateValuesOnChange(Data);
        this.UpdateValuesOnChange(SharedData);
    }
}