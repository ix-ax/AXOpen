@namespace ix.framework.core
@using Ix.Connector.ValueTypes;
@inherits RenderableComplexComponentBase<IxComponent>


<div class="container text-left">
    <label>@Component.AttributeName</label>
    <div class="row">
        @if (ContainsAlwaysVisibleClass && ContainsExpandableClass)
        {
            <div class="row">
                @if (Collapsed)
                {
                    <div class="col-11">
                        <RenderableContentControl Presentation="@Presentation" Context="@Header" />
                    </div>
                    <div class="col-1">
                        <button @onclick="@Toggle" class="btn btn-primary" role="button">+</button>
                    </div>
                }
                else
                {
                    <div class="col-11">
                        <RenderableContentControl Presentation="@Presentation" Context="@Header" />
                    </div>
                    <div class="col-1">
                        <button @onclick="@Toggle" class="btn btn-primary" role="button">-</button>
                    </div>
                }
            </div>


            @if (!Collapsed)
            {
                <div class="row">
                    <RenderableContentControl Presentation="@Presentation" Context="@Details" />
                </div>
            }
        }
        else if (ContainsAlwaysVisibleClass && !ContainsExpandableClass)
        {
            <div class="col">
                <RenderableContentControl Presentation="@Presentation" Context="@Header" />
            </div>
        }
        else if (!ContainsAlwaysVisibleClass && ContainsExpandableClass)
        {
            <div class="row">
                @if (Collapsed)
                {
                    <div class="col">
                        <button @onclick="@Toggle" class="btn btn-primary" role="button">+</button>
                    </div>
                }
                else
                {
                    <div class="col">
                        <button @onclick="@Toggle" class="btn btn-primary" role="button">-</button>
                    </div>
                }
            </div>


            @if (!Collapsed)
            {
                <div class="row">
                    <RenderableContentControl Presentation="@Presentation" Context="@Details" />
                </div>
            }
        }
        else
        {
            <div class="row">
                No idea why the commented code below does not render
@*                <RenderableContentControl Presentation="@Presentation" Context="@Component" />*@
            </div>
        }
    </div>
</div>


@code {
    private string _presentation = "Base";
    [Parameter]
    public string Presentation 
    {
        get 
        { 
            return this._presentation; 
        }
        set
        {
            if (!string.IsNullOrEmpty(value))
            {
                this._presentation = value;
            }
        }
    }
    private bool _collapsed = true;
    [Parameter]
    public bool Collapsed { get { return _collapsed; } set { _collapsed = value; } }

    private bool ContainsAlwaysVisibleClass;
    private bool ContainsExpandableClass;
    private bool ContainsTasksClass;
    private bool ContainsDetailsClass;
    private bool ContainsSettingsClass;
    private bool ContainsDiagnosticsClass;
    private bool ContainsHelpClass;

    void Toggle()
    {
        Collapsed = !Collapsed;
    }

    protected override void OnInitialized()
    {
        ContainsAlwaysVisibleClass = this.Component.GetType().GetProperty("AlwaysVisible") != null;
        ContainsExpandableClass = this.Component.GetType().GetProperty("Expandable") != null;

        UpdateValuesOnChange(Component);
    }
}
