@namespace AXOpen.Core
@inherits RenderableComplexComponentBase<AxoSequencer>


    <div class="card-body">
    <div class="row">
        <div class="col">
            @if (HasTaskControlButton)
            {
                @if (IsControllable)
                {
                    <AXOpen.Core.AxoTaskCommandView Component="@Component"/>
                }
                else
                {
                    <AXOpen.Core.AxoTaskStatusView Component="@Component"/>
                }
            }
        </div>
    </div>
    @if (HasSettings)
    {
        <div class="row">
            <div class="col">
                <RenderableContentControl Context="@Component.SequenceMode" Presentation="@(IsControllable ? "Control" : "Display")"/>
            </div>
            <div class="col">
                <RenderableContentControl Context="@Component.SteppingMode" Presentation="@(IsControllable ? "Control" : "Display")"/>
            </div>
        </div>
    }
    @if (HasStepControls)
    {
        <div class="row">
            <div class="col">
                <RenderableContentControl Context="@Component.StepBackwardCommand" Presentation="@(IsControllable ? "Command" : "Status")"/>
            </div>
            <div class="col">
                <RenderableContentControl Context="@Component.StepIn" Presentation="@(IsControllable ? "Command" : "Status")"/>
            </div>
            <div class="col">
                <RenderableContentControl Context="@Component.StepForwardCommand" Presentation="@(IsControllable ? "Command" : "Status")"/>
            </div>
        </div>
    }
    @if (HasStepDetails)
    {
        <div class="container" style="overflow-y: auto; height: 200px;">
            <div class="row">
                @foreach (var step in Steps.Where(p => p.Order.Cyclic != 0))
                {
                    <RenderableContentControl Context="step" Presentation="@(IsControllable ? "Command" : "Status")"/>
                }
            </div>
        </div>
        
    }
</div>



