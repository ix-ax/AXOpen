@namespace ix.framework.data
@using CommunityToolkit.Mvvm.ComponentModel;
@using ix.framework.core.Interfaces;
@using ix.framework.core.ViewModels;

<h3>IxDataView</h3>

@if (Vm == null)
{
    <h5>Loading...</h5>
}
else
{
    <div class="d-flex">
        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createModal">Create</button>
        <div class="dropdown d-flex ms-auto">
            <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">@Vm.SearchMode</button>
            <ul class="dropdown-menu">
                <li><a class="dropdown-item @(Vm.SearchMode == Ix.Base.Data.eSearchMode.Exact ? "active" : "")" @onclick="() => Vm.SearchMode = Ix.Base.Data.eSearchMode.Exact">Exact</a></li>
                <li><a class="dropdown-item @(Vm.SearchMode == Ix.Base.Data.eSearchMode.Contains ? "active" : "")" @onclick="() => Vm.SearchMode = Ix.Base.Data.eSearchMode.Contains">Contains</a></li>
                <li><a class="dropdown-item @(Vm.SearchMode == Ix.Base.Data.eSearchMode.StartsWith ? "active" : "")" @onclick="() => Vm.SearchMode = Ix.Base.Data.eSearchMode.StartsWith">Starts With</a></li>
            </ul>
        </div>
        <form class="d-flex" role="search">
            <input class="form-control" type="search" placeholder="Search" aria-label="Search" @bind="Vm.FilterById" >
        </form>
        <div class="btn-group">
            <button class="btn btn-secondary" type="button" name="searchbutton" @onclick="() => Vm.Filter()">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
                    <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z" />
                </svg>
            </button>
            <button class="btn btn-secondary" type="button" name="paginationSwitch" aria-label="Hide/Show pagination" title="Hide/Show pagination">
                <i class="oi oi-caret-bottom"></i>
            </button>
            <button class="btn btn-secondary" type="button" name="refresh" aria-label="Refresh" title="Refresh" @onclick="() => Vm.FillObservableRecordsAsync()">
                <i class="oi oi-loop-circular"></i>
            </button>
        </div>
    </div>
    <table class="table table-hover">
        <thead>
            <tr class="text-center">
                <th scope="col">DataEntityId</th>
                <th scope="col">Operate</th>
            </tr>
        </thead>
        <tbody>
            @if (Vm.IsBusy)
            {

                <tr class="text-center">
                    <td colspan="3">
                        <div class="spinner-border" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    </td>
                </tr>
               
            }
            else if(!Vm.Records.Any())
            {
                <tr class="text-center">
                    <td colspan="3">
                        <h3 >Collection is empty</h3>
                    </td>
                </tr>
                
            }
            else
            {
                @foreach (var item in Vm.Records.ToList())
                {
                    <tr class="text-center">
                        <td data-bs-toggle="modal" href="#viewModal" @onclick="() => Vm.SelectedItemId = item.DataEntityId">@item.DataEntityId</td>
                        <td>
                            <a class="remove cursor-pointer" title="Remove" data-bs-toggle="modal" data-bs-target="#deleteModal" @onclick="() => Vm.SelectedItemId = item.DataEntityId"><i class="oi oi-trash"></i></a>
                        </td>
                    </tr>
                }
            }

        </tbody>
    </table>
    <div class="d-flex">
        <div class="dropdown">
            Showing @(((Vm.Page + 1) * Vm.Limit) - Vm.Limit + 1) to @(((Vm.Page + 1) * Vm.Limit) > Vm.Records.Count ? Vm.Records.Count : ((Vm.Page + 1) * Vm.Limit)) of @Vm.Records.Count rows
            <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">@Vm.Limit</button>
            <ul class="dropdown-menu">
                <li><a class="dropdown-item @(Vm.Limit == 5 ? "active" : "")" @onclick="() => Vm.Limit = 5">5</a></li>
                <li><a class="dropdown-item @(Vm.Limit == 10 ? "active" : "")" @onclick="() => Vm.Limit = 10">10</a></li>
                <li><a class="dropdown-item @(Vm.Limit == 25 ? "active" : "")" @onclick="() => Vm.Limit = 25">25</a></li>
                <li><a class="dropdown-item @(Vm.Limit == 50 ? "active" : "")" @onclick="() => Vm.Limit = 50">50</a></li>
                <li><a class="dropdown-item @(Vm.Limit == 100 ? "active" : "")" @onclick="() => Vm.Limit = 100">100</a></li>
                <li><a class="dropdown-item @(Vm.Limit == 999 ? "active" : "")" @onclick="() => Vm.Limit = 999">All</a></li>
            </ul>
            rows per page
        </div>
        <nav class="ms-auto">
            <ul class="pagination">
                <li class="page-item"><a class="page-link" @onclick="() => Vm.Page = mod(Vm.Page - 1, MaxPage + 1)" aria-label="Previous"><span aria-hidden="true">&laquo;</span></a></li>

                @if(MaxPage < 7)
                {
                    @for(var i = 0; i < MaxPage + 1; i++)
                    {
                        var j = i;
                        <li class="page-item @(Vm.Page == i ? "active" : "")"><a class="page-link" @onclick="() => Vm.Page = j">@(i + 1)</a></li>
                    }
                }
                else
                {
                    <li class="page-item @(Vm.Page == 0 ? "active" : "")"><a class="page-link" @onclick="() => Vm.Page = 0">1</a></li>

                    @if (Vm.Page < 4)
                    {
                        <li class="page-item @(Vm.Page == 1 ? "active" : "")"><a class="page-link" @onclick="() => Vm.Page = 1">2</a></li>
                        <li class="page-item @(Vm.Page == 2 ? "active" : "")"><a class="page-link" @onclick="() => Vm.Page = 2">3</a></li>
                        <li class="page-item @(Vm.Page == 3 ? "active" : "")"><a class="page-link" @onclick="() => Vm.Page = 3">4</a></li>
                        <li class="page-item @(Vm.Page == 4 ? "active" : "")"><a class="page-link" @onclick="() => Vm.Page = 4">5</a></li>
                        <li class="page-item disabled"><a class="page-link">...</a></li>
                    }
                    else if (Vm.Page > MaxPage - 4)
                    {
                        <li class="page-item disabled"><a class="page-link">...</a></li>
                        <li class="page-item @(Vm.Page == @MaxPage - 4 ? "active" : "")"><a class="page-link" @onclick="() => Vm.Page = MaxPage - 4">@(MaxPage - 3)</a></li>
                        <li class="page-item @(Vm.Page == @MaxPage - 3 ? "active" : "")"><a class="page-link" @onclick="() => Vm.Page = MaxPage - 3">@(MaxPage - 2)</a></li>
                        <li class="page-item @(Vm.Page == @MaxPage - 2 ? "active" : "")"><a class="page-link" @onclick="() => Vm.Page = MaxPage - 2">@(MaxPage - 1)</a></li>
                        <li class="page-item @(Vm.Page == @MaxPage - 1 ? "active" : "")"><a class="page-link" @onclick="() => Vm.Page = MaxPage - 1">@(MaxPage)</a></li>
                    }
                    else
                    {
                        <li class="page-item disabled"><a class="page-link">...</a></li>
                        <li class="page-item @(Vm.Page == Vm.Page - 1 ? "active" : "")"><a class="page-link" @onclick="() => Vm.Page = Vm.Page - 1">@(Vm.Page)</a></li>
                        <li class="page-item @(Vm.Page == Vm.Page ? "active" : "")"><a class="page-link" @onclick="() => Vm.Page = Vm.Page">@(Vm.Page + 1)</a></li>
                        <li class="page-item @(Vm.Page == Vm.Page + 1 ? "active" : "")"><a class="page-link" @onclick="() => Vm.Page = Vm.Page + 1">@(Vm.Page + 2)</a></li>
                        <li class="page-item disabled"><a class="page-link">...</a></li>
                    }

                    <li class="page-item @(Vm.Page == @MaxPage ? "active" : "")"><a class="page-link" @onclick="() => Vm.Page = MaxPage">@(MaxPage + 1)</a></li>
                }

                <li class="page-item"><a class="page-link" @onclick="() => Vm.Page = (Vm.Page + 1) % (MaxPage + 1)" aria-label="Next"><span aria-hidden="true">&raquo;</span></a></li>
            </ul>
        </nav>
    </div>
}

<div class="modal fade" id="createModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Create new item</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label for="name" class="form-label">Name</label>
                    <input type="text" class="form-control" id="name" @bind="Vm.CreateItemId">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal" @onclick="() => Vm.CreateNew()">Create</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="viewModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">@Vm.SelectedItemId</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger me-auto" data-bs-toggle="modal" data-bs-target="#deleteModal">Delete</button>
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal" @onclick="() => Vm.Copy()">Copy</button>
                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#editModal">Edit</button>
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal" @onclick="() => Vm.SendToPlc()">Send to PLC</button>
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal" @onclick="() => Vm.FromPlc()">From PLC</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="editModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">@Vm.SelectedItemId</h1>
                <button type="button" class="btn-close" data-bs-toggle="modal" data-bs-target="#viewModal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label for="DataEntityId" class="form-label">DataEntityId</label>
                    <input type="text" class="form-control" id="DataEntityId" @bind-value="Vm.SelectedItemId">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal" @onclick="() => Vm.Edit()">Save</button>
                <button type="button" class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#viewModal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="deleteModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Delete @Vm.SelectedItemId?</h1>
                <button type="button" class="btn-close" data-bs-toggle="modal" data-bs-target="#viewModal" aria-label="Close"></button>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-bs-dismiss="modal" @onclick="() => Vm.Delete()">Delete</button>
                <button type="button" class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#viewModal">Close</button>
            </div>
        </div>
    </div>
</div>

@code {

    [Parameter]
    public IDataViewModel Vm { get; set; }

    private int MaxPage { get { return Vm.Records.Count % Vm.Limit == 0 ? Vm.Records.Count / Vm.Limit - 1 : Vm.Records.Count / Vm.Limit; } }

    public int mod(int x, int m)
    {
        int r = x % m;
        return r < 0 ? r + m : r;
    }

    protected override async Task OnInitializedAsync()
    {
        await Vm.FillObservableRecordsAsync();
    }
}
