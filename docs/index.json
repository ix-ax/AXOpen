{
  "api/index.html": {
    "href": "api/index.html",
    "title": "IX API Documentation | System.Dynamic.ExpandoObject",
    "keywords": "IX API Documentation"
  },
  "api/ix.ax.core.blazor.ExampleJsInterop.html": {
    "href": "api/ix.ax.core.blazor.ExampleJsInterop.html",
    "title": "Class ExampleJsInterop | System.Dynamic.ExpandoObject",
    "keywords": "Class ExampleJsInterop Inheritance object ExampleJsInterop Implements System.IAsyncDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ix.ax.core.blazor Assembly: ix.framework.core.blazor.dll Syntax public class ExampleJsInterop : IAsyncDisposable Constructors | Improve this Doc View Source ExampleJsInterop(IJSRuntime) Declaration public ExampleJsInterop(IJSRuntime jsRuntime) Parameters Type Name Description Microsoft.JSInterop.IJSRuntime jsRuntime Methods | Improve this Doc View Source DisposeAsync() Declaration public ValueTask DisposeAsync() Returns Type Description System.Threading.Tasks.ValueTask | Improve this Doc View Source Prompt(string) Declaration public ValueTask<string> Prompt(string message) Parameters Type Name Description string message Returns Type Description System.Threading.Tasks.ValueTask<TResult><string> Implements System.IAsyncDisposable"
  },
  "api/ix.ax.core.blazor.html": {
    "href": "api/ix.ax.core.blazor.html",
    "title": "Namespace ix.ax.core.blazor | System.Dynamic.ExpandoObject",
    "keywords": "Namespace ix.ax.core.blazor Classes ExampleJsInterop"
  },
  "api/Ix.Connector.html": {
    "href": "api/Ix.Connector.html",
    "title": "Namespace Ix.Connector | System.Dynamic.ExpandoObject",
    "keywords": "Namespace Ix.Connector Classes ITwinElementExtensions"
  },
  "api/Ix.Connector.ITwinElementExtensions.html": {
    "href": "api/Ix.Connector.ITwinElementExtensions.html",
    "title": "Class ITwinElementExtensions | System.Dynamic.ExpandoObject",
    "keywords": "Class ITwinElementExtensions Inheritance object ITwinElementExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ix.Connector Assembly: ix.framework.core.blazor.dll Syntax public static class ITwinElementExtensions Methods | Improve this Doc View Source GetAttribute<T>(ITwinElement) Declaration public static T GetAttribute<T>(this ITwinElement twinObject) where T : Attribute Parameters Type Name Description Ix.Connector.ITwinElement twinObject Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source GetPropertyViaSymbol(ITwinElement) Declaration public static PropertyInfo GetPropertyViaSymbol(this ITwinElement twinObject) Parameters Type Name Description Ix.Connector.ITwinElement twinObject Returns Type Description System.Reflection.PropertyInfo"
  },
  "api/ix.framework.core._Imports.html": {
    "href": "api/ix.framework.core._Imports.html",
    "title": "Class _Imports | System.Dynamic.ExpandoObject",
    "keywords": "Class _Imports Inheritance object Microsoft.AspNetCore.Components.ComponentBase _Imports Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender Inherited Members Microsoft.AspNetCore.Components.ComponentBase.OnInitialized() Microsoft.AspNetCore.Components.ComponentBase.OnInitializedAsync() Microsoft.AspNetCore.Components.ComponentBase.OnParametersSet() Microsoft.AspNetCore.Components.ComponentBase.OnParametersSetAsync() Microsoft.AspNetCore.Components.ComponentBase.StateHasChanged() Microsoft.AspNetCore.Components.ComponentBase.ShouldRender() Microsoft.AspNetCore.Components.ComponentBase.OnAfterRender(bool) Microsoft.AspNetCore.Components.ComponentBase.OnAfterRenderAsync(bool) Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Action) Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Func<System.Threading.Tasks.Task>) Microsoft.AspNetCore.Components.ComponentBase.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ix.framework.core Assembly: ix.framework.core.blazor.dll Syntax public class _Imports : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Methods | Improve this Doc View Source BuildRenderTree(RenderTreeBuilder) Declaration protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters Type Name Description Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder Overrides Microsoft.AspNetCore.Components.ComponentBase.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder) Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender"
  },
  "api/ix.framework.core._NULL_CONTEXT.html": {
    "href": "api/ix.framework.core._NULL_CONTEXT.html",
    "title": "Class _NULL_CONTEXT | System.Dynamic.ExpandoObject",
    "keywords": "Class _NULL_CONTEXT Inheritance object _NULL_CONTEXT Implements Ix.Connector.ITwinObject Ix.Connector.ITwinElement IIxContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ix.framework.core Assembly: ix.framework.core.dll Syntax public class _NULL_CONTEXT : ITwinObject, ITwinElement, IIxContext Constructors | Improve this Doc View Source _NULL_CONTEXT(ITwinObject, string, string) Declaration public _NULL_CONTEXT(ITwinObject parent, string readableTail, string symbolTail) Parameters Type Name Description Ix.Connector.ITwinObject parent string readableTail string symbolTail Properties | Improve this Doc View Source AttributeName Declaration public string AttributeName { get; set; } Property Value Type Description string | Improve this Doc View Source Connector Declaration protected Connector Connector { get; } Property Value Type Description Ix.Connector.Connector | Improve this Doc View Source HumanReadable Declaration public string HumanReadable { get; set; } Property Value Type Description string | Improve this Doc View Source Parent Declaration protected ITwinObject Parent { get; set; } Property Value Type Description Ix.Connector.ITwinObject | Improve this Doc View Source Symbol Declaration public string Symbol { get; protected set; } Property Value Type Description string | Improve this Doc View Source SymbolTail Declaration protected string SymbolTail { get; set; } Property Value Type Description string Methods | Improve this Doc View Source AddChild(ITwinObject) Declaration public void AddChild(ITwinObject twinObject) Parameters Type Name Description Ix.Connector.ITwinObject twinObject | Improve this Doc View Source AddKid(ITwinElement) Declaration public void AddKid(ITwinElement kid) Parameters Type Name Description Ix.Connector.ITwinElement kid | Improve this Doc View Source AddValueTag(ITwinPrimitive) Declaration public void AddValueTag(ITwinPrimitive valueTag) Parameters Type Name Description Ix.Connector.ITwinPrimitive valueTag | Improve this Doc View Source GetChildren() Declaration public IEnumerable<ITwinObject> GetChildren() Returns Type Description System.Collections.Generic.IEnumerable<T><Ix.Connector.ITwinObject> | Improve this Doc View Source GetConnector() Declaration public Connector GetConnector() Returns Type Description Ix.Connector.Connector | Improve this Doc View Source GetKids() Declaration public IEnumerable<ITwinElement> GetKids() Returns Type Description System.Collections.Generic.IEnumerable<T><Ix.Connector.ITwinElement> | Improve this Doc View Source GetParent() Declaration public ITwinObject GetParent() Returns Type Description Ix.Connector.ITwinObject | Improve this Doc View Source GetSymbolTail() Declaration public string GetSymbolTail() Returns Type Description string | Improve this Doc View Source GetValueTags() Declaration public IEnumerable<ITwinPrimitive> GetValueTags() Returns Type Description System.Collections.Generic.IEnumerable<T><Ix.Connector.ITwinPrimitive> | Improve this Doc View Source OnlineToPlainAsync() Declaration public Task<_NULL_CONTEXT> OnlineToPlainAsync() Returns Type Description System.Threading.Tasks.Task<TResult><_NULL_CONTEXT> | Improve this Doc View Source OnlineToPlainAsync(_NULL_CONTEXT) Declaration protected Task<_NULL_CONTEXT> OnlineToPlainAsync(_NULL_CONTEXT plain) Parameters Type Name Description _NULL_CONTEXT plain Returns Type Description System.Threading.Tasks.Task<TResult><_NULL_CONTEXT> | Improve this Doc View Source PlainToOnlineAsync(_NULL_CONTEXT) Declaration public Task<IEnumerable<ITwinPrimitive>> PlainToOnlineAsync(_NULL_CONTEXT plain) Parameters Type Name Description _NULL_CONTEXT plain Returns Type Description System.Threading.Tasks.Task<TResult><System.Collections.Generic.IEnumerable<T><Ix.Connector.ITwinPrimitive>> | Improve this Doc View Source PlainToShadowAsync(_NULL_CONTEXT) Declaration public Task<IEnumerable<ITwinPrimitive>> PlainToShadowAsync(_NULL_CONTEXT plain) Parameters Type Name Description _NULL_CONTEXT plain Returns Type Description System.Threading.Tasks.Task<TResult><System.Collections.Generic.IEnumerable<T><Ix.Connector.ITwinPrimitive>> | Improve this Doc View Source Poll() Declaration public void Poll() | Improve this Doc View Source ShadowToPlainAsync() Declaration public Task<_NULL_CONTEXT> ShadowToPlainAsync() Returns Type Description System.Threading.Tasks.Task<TResult><_NULL_CONTEXT> | Improve this Doc View Source ShadowToPlainAsync(_NULL_CONTEXT) Declaration protected Task<_NULL_CONTEXT> ShadowToPlainAsync(_NULL_CONTEXT plain) Parameters Type Name Description _NULL_CONTEXT plain Returns Type Description System.Threading.Tasks.Task<TResult><_NULL_CONTEXT> Implements Ix.Connector.ITwinObject Ix.Connector.ITwinElement IIxContext"
  },
  "api/ix.framework.core.ComponentDetailsAttribute.html": {
    "href": "api/ix.framework.core.ComponentDetailsAttribute.html",
    "title": "Class ComponentDetailsAttribute | System.Dynamic.ExpandoObject",
    "keywords": "Class ComponentDetailsAttribute Inheritance object System.Attribute ComponentDetailsAttribute Inherited Members System.Attribute.Equals(object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, bool) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, bool) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, bool) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, bool) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, bool) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, bool) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.Match(object) System.Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ix.framework.core Assembly: ix.framework.core.dll Syntax public class ComponentDetailsAttribute : Attribute Constructors | Improve this Doc View Source ComponentDetailsAttribute() Declaration public ComponentDetailsAttribute() | Improve this Doc View Source ComponentDetailsAttribute(string) Declaration public ComponentDetailsAttribute(string tabName) Parameters Type Name Description string tabName Properties | Improve this Doc View Source TabName Declaration public string TabName { get; } Property Value Type Description string"
  },
  "api/ix.framework.core.ComponentHeaderAttribute.html": {
    "href": "api/ix.framework.core.ComponentHeaderAttribute.html",
    "title": "Class ComponentHeaderAttribute | System.Dynamic.ExpandoObject",
    "keywords": "Class ComponentHeaderAttribute Inheritance object System.Attribute ComponentHeaderAttribute Inherited Members System.Attribute.Equals(object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, bool) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, bool) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, bool) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, bool) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, bool) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, bool) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.Match(object) System.Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ix.framework.core Assembly: ix.framework.core.dll Syntax public class ComponentHeaderAttribute : Attribute Constructors | Improve this Doc View Source ComponentHeaderAttribute() Declaration public ComponentHeaderAttribute() | Improve this Doc View Source ComponentHeaderAttribute(string) Declaration public ComponentHeaderAttribute(string tabName) Parameters Type Name Description string tabName Properties | Improve this Doc View Source TabName Declaration public string TabName { get; } Property Value Type Description string"
  },
  "api/ix.framework.core.CoordinatorStates.html": {
    "href": "api/ix.framework.core.CoordinatorStates.html",
    "title": "Enum CoordinatorStates | System.Dynamic.ExpandoObject",
    "keywords": "Enum CoordinatorStates Namespace: ix.framework.core Assembly: ix.framework.core.dll Syntax public enum CoordinatorStates : short Fields Name Description Configuring Idle Running"
  },
  "api/ix.framework.core.DetailsContext.html": {
    "href": "api/ix.framework.core.DetailsContext.html",
    "title": "Class DetailsContext | System.Dynamic.ExpandoObject",
    "keywords": "Class DetailsContext Inheritance object DetailsContext Implements Ix.Connector.ITwinObject Ix.Connector.ITwinElement Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ix.framework.core Assembly: ix.framework.core.blazor.dll Syntax public class DetailsContext : ITwinObject, ITwinElement Constructors | Improve this Doc View Source DetailsContext(ITwinObject, IList<ITwinElement>, string) Declaration public DetailsContext(ITwinObject parent, IList<ITwinElement> kids, string tabName) Parameters Type Name Description Ix.Connector.ITwinObject parent System.Collections.Generic.IList<T><Ix.Connector.ITwinElement> kids string tabName | Improve this Doc View Source DetailsContext(ITwinObject, IList<ITwinElement>) Declaration public DetailsContext(ITwinObject parent, IList<ITwinElement> kids) Parameters Type Name Description Ix.Connector.ITwinObject parent System.Collections.Generic.IList<T><Ix.Connector.ITwinElement> kids Properties | Improve this Doc View Source AttributeName Declaration public string AttributeName { get; } Property Value Type Description string | Improve this Doc View Source HumanReadable Declaration public string HumanReadable { get; set; } Property Value Type Description string | Improve this Doc View Source Symbol Declaration public string Symbol { get; } Property Value Type Description string | Improve this Doc View Source TabName Declaration public string TabName { get; set; } Property Value Type Description string Methods | Improve this Doc View Source AddChild(ITwinObject) Declaration public void AddChild(ITwinObject twinObject) Parameters Type Name Description Ix.Connector.ITwinObject twinObject | Improve this Doc View Source AddKid(ITwinElement) Declaration public void AddKid(ITwinElement kid) Parameters Type Name Description Ix.Connector.ITwinElement kid | Improve this Doc View Source AddValueTag(ITwinPrimitive) Declaration public void AddValueTag(ITwinPrimitive twinPrimitive) Parameters Type Name Description Ix.Connector.ITwinPrimitive twinPrimitive | Improve this Doc View Source GetChildren() Declaration public IEnumerable<ITwinObject> GetChildren() Returns Type Description System.Collections.Generic.IEnumerable<T><Ix.Connector.ITwinObject> | Improve this Doc View Source GetConnector() Declaration public Connector GetConnector() Returns Type Description Ix.Connector.Connector | Improve this Doc View Source GetKids() Declaration public IEnumerable<ITwinElement> GetKids() Returns Type Description System.Collections.Generic.IEnumerable<T><Ix.Connector.ITwinElement> | Improve this Doc View Source GetParent() Declaration public ITwinObject GetParent() Returns Type Description Ix.Connector.ITwinObject | Improve this Doc View Source GetSymbolTail() Declaration public string GetSymbolTail() Returns Type Description string | Improve this Doc View Source GetValueTags() Declaration public IEnumerable<ITwinPrimitive?> GetValueTags() Returns Type Description System.Collections.Generic.IEnumerable<T><Ix.Connector.ITwinPrimitive> | Improve this Doc View Source Poll() Declaration public void Poll() Implements Ix.Connector.ITwinObject Ix.Connector.ITwinElement Extension Methods ITwinElementExtensions.GetAttribute<T>(ITwinElement) ITwinElementExtensions.GetPropertyViaSymbol(ITwinElement)"
  },
  "api/ix.framework.core.eIxSequenceMode.html": {
    "href": "api/ix.framework.core.eIxSequenceMode.html",
    "title": "Enum eIxSequenceMode | System.Dynamic.ExpandoObject",
    "keywords": "Enum eIxSequenceMode Namespace: ix.framework.core Assembly: ix.framework.core.dll Syntax public enum eIxSequenceMode : short Fields Name Description Cyclic None RunOnce"
  },
  "api/ix.framework.core.eIxSteppingMode.html": {
    "href": "api/ix.framework.core.eIxSteppingMode.html",
    "title": "Enum eIxSteppingMode | System.Dynamic.ExpandoObject",
    "keywords": "Enum eIxSteppingMode Namespace: ix.framework.core Assembly: ix.framework.core.dll Syntax public enum eIxSteppingMode : short Fields Name Description Continous None StepByStep"
  },
  "api/ix.framework.core.eIxTaskState.html": {
    "href": "api/ix.framework.core.eIxTaskState.html",
    "title": "Enum eIxTaskState | System.Dynamic.ExpandoObject",
    "keywords": "Enum eIxTaskState Namespace: ix.framework.core Assembly: ix.framework.core.dll Syntax public enum eIxTaskState : short Fields Name Description Aborted Busy Disabled Done Error Kicking Ready"
  },
  "api/ix.framework.core.html": {
    "href": "api/ix.framework.core.html",
    "title": "Namespace ix.framework.core | System.Dynamic.ExpandoObject",
    "keywords": "Namespace ix.framework.core Classes _Imports _NULL_CONTEXT ComponentDetailsAttribute ComponentHeaderAttribute DetailsContext IxComponent IxComponentCommandView IxComponentStatusView IxComponentView IxContext IxObject IxSequencer IxSequencerCommandView IxSequencerStatusView IxSequencerView IxStep IxStepCommandView IxStepStatusView IxStepView IxTask IxTaskCommandView IxTaskStatusView IxTaskView Interfaces IIxComponent IIxContext IIxCoordinator IIxObject IIxServiceable IIxStep IIxTask IIxTaskState Enums CoordinatorStates eIxSequenceMode eIxSteppingMode eIxTaskState"
  },
  "api/ix.framework.core.IIxComponent.html": {
    "href": "api/ix.framework.core.IIxComponent.html",
    "title": "Interface IIxComponent | System.Dynamic.ExpandoObject",
    "keywords": "Interface IIxComponent Namespace: ix.framework.core Assembly: ix.framework.core.dll Syntax public interface IIxComponent"
  },
  "api/ix.framework.core.IIxContext.html": {
    "href": "api/ix.framework.core.IIxContext.html",
    "title": "Interface IIxContext | System.Dynamic.ExpandoObject",
    "keywords": "Interface IIxContext Namespace: ix.framework.core Assembly: ix.framework.core.dll Syntax public interface IIxContext"
  },
  "api/ix.framework.core.IIxCoordinator.html": {
    "href": "api/ix.framework.core.IIxCoordinator.html",
    "title": "Interface IIxCoordinator | System.Dynamic.ExpandoObject",
    "keywords": "Interface IIxCoordinator Namespace: ix.framework.core Assembly: ix.framework.core.dll Syntax public interface IIxCoordinator"
  },
  "api/ix.framework.core.IIxObject.html": {
    "href": "api/ix.framework.core.IIxObject.html",
    "title": "Interface IIxObject | System.Dynamic.ExpandoObject",
    "keywords": "Interface IIxObject Namespace: ix.framework.core Assembly: ix.framework.core.dll Syntax public interface IIxObject"
  },
  "api/ix.framework.core.IIxServiceable.html": {
    "href": "api/ix.framework.core.IIxServiceable.html",
    "title": "Interface IIxServiceable | System.Dynamic.ExpandoObject",
    "keywords": "Interface IIxServiceable Namespace: ix.framework.core Assembly: ix.framework.core.dll Syntax public interface IIxServiceable"
  },
  "api/ix.framework.core.IIxStep.html": {
    "href": "api/ix.framework.core.IIxStep.html",
    "title": "Interface IIxStep | System.Dynamic.ExpandoObject",
    "keywords": "Interface IIxStep Namespace: ix.framework.core Assembly: ix.framework.core.dll Syntax public interface IIxStep"
  },
  "api/ix.framework.core.IIxTask.html": {
    "href": "api/ix.framework.core.IIxTask.html",
    "title": "Interface IIxTask | System.Dynamic.ExpandoObject",
    "keywords": "Interface IIxTask Namespace: ix.framework.core Assembly: ix.framework.core.dll Syntax public interface IIxTask"
  },
  "api/ix.framework.core.IIxTaskState.html": {
    "href": "api/ix.framework.core.IIxTaskState.html",
    "title": "Interface IIxTaskState | System.Dynamic.ExpandoObject",
    "keywords": "Interface IIxTaskState Namespace: ix.framework.core Assembly: ix.framework.core.dll Syntax public interface IIxTaskState"
  },
  "api/ix.framework.core.IxComponent.html": {
    "href": "api/ix.framework.core.IxComponent.html",
    "title": "Class IxComponent | System.Dynamic.ExpandoObject",
    "keywords": "Class IxComponent Inheritance object IxObject IxComponent Implements Ix.Connector.ITwinObject Ix.Connector.ITwinElement IIxObject IIxComponent Inherited Members IxObject.OnlineToPlainAsync(IxObject) IxObject.PlainToOnlineAsync(IxObject) IxObject.ShadowToPlainAsync(IxObject) IxObject.PlainToShadowAsync(IxObject) IxObject.GetChildren() IxObject.GetKids() IxObject.GetValueTags() IxObject.AddValueTag(ITwinPrimitive) IxObject.AddKid(ITwinElement) IxObject.AddChild(ITwinObject) IxObject.Connector IxObject.GetConnector() IxObject.GetSymbolTail() IxObject.GetParent() IxObject.Symbol IxObject.AttributeName IxObject.HumanReadable IxObject.SymbolTail IxObject.Parent object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ix.framework.core Assembly: ix.framework.core.dll Syntax public class IxComponent : IxObject, ITwinObject, ITwinElement, IIxObject, IIxComponent Constructors | Improve this Doc View Source IxComponent(ITwinObject, string, string) Declaration public IxComponent(ITwinObject parent, string readableTail, string symbolTail) Parameters Type Name Description Ix.Connector.ITwinObject parent string readableTail string symbolTail Properties | Improve this Doc View Source _isinServiceMode Declaration public OnlinerBool _isinServiceMode { get; } Property Value Type Description Ix.Connector.ValueTypes.OnlinerBool Methods | Improve this Doc View Source OnlineToPlainAsync() Declaration public Task<IxComponent> OnlineToPlainAsync() Returns Type Description System.Threading.Tasks.Task<TResult><IxComponent> | Improve this Doc View Source OnlineToPlainAsync(IxComponent) Declaration protected Task<IxComponent> OnlineToPlainAsync(IxComponent plain) Parameters Type Name Description IxComponent plain Returns Type Description System.Threading.Tasks.Task<TResult><IxComponent> | Improve this Doc View Source PlainToOnlineAsync(IxComponent) Declaration public Task<IEnumerable<ITwinPrimitive>> PlainToOnlineAsync(IxComponent plain) Parameters Type Name Description IxComponent plain Returns Type Description System.Threading.Tasks.Task<TResult><System.Collections.Generic.IEnumerable<T><Ix.Connector.ITwinPrimitive>> | Improve this Doc View Source PlainToShadowAsync(IxComponent) Declaration public Task<IEnumerable<ITwinPrimitive>> PlainToShadowAsync(IxComponent plain) Parameters Type Name Description IxComponent plain Returns Type Description System.Threading.Tasks.Task<TResult><System.Collections.Generic.IEnumerable<T><Ix.Connector.ITwinPrimitive>> | Improve this Doc View Source Poll() Declaration public void Poll() | Improve this Doc View Source ShadowToPlainAsync() Declaration public Task<IxComponent> ShadowToPlainAsync() Returns Type Description System.Threading.Tasks.Task<TResult><IxComponent> | Improve this Doc View Source ShadowToPlainAsync(IxComponent) Declaration protected Task<IxComponent> ShadowToPlainAsync(IxComponent plain) Parameters Type Name Description IxComponent plain Returns Type Description System.Threading.Tasks.Task<TResult><IxComponent> Implements Ix.Connector.ITwinObject Ix.Connector.ITwinElement IIxObject IIxComponent"
  },
  "api/ix.framework.core.IxComponentCommandView.html": {
    "href": "api/ix.framework.core.IxComponentCommandView.html",
    "title": "Class IxComponentCommandView | System.Dynamic.ExpandoObject",
    "keywords": "Class IxComponentCommandView Inheritance object Microsoft.AspNetCore.Components.ComponentBase Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComplexComponentBase<T><IxComponent> IxComponentCommandView Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender Ix.Presentation.Blazor.Interfaces.IRenderableComponent Ix.Presentation.Blazor.Interfaces.IRenderableComplexComponentBase Inherited Members Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComplexComponentBase<ix.framework.core.IxComponent>.Component Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateValuesOnChange(Ix.Connector.ITwinObject) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateValuesOnChange(Ix.Connector.ValueTypes.OnlinerBase) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateShadowValuesOnChange(Ix.Connector.ITwinObject) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateShadowValuesOnChange(Ix.Connector.ITwinPrimitive) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateValuesOnChangeOutFocus(Ix.Connector.ValueTypes.OnlinerBase) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HandlePropertyChanged(object, System.ComponentModel.PropertyChangedEventArgs) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HandleShadowPropertyChanged(object, Ix.Connector.ValueTypes.ValueChangedEventArgs) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HandlePropertyChangedOnOutFocus(object, System.ComponentModel.PropertyChangedEventArgs) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HasFocus Microsoft.AspNetCore.Components.ComponentBase.OnInitialized() Microsoft.AspNetCore.Components.ComponentBase.OnInitializedAsync() Microsoft.AspNetCore.Components.ComponentBase.OnParametersSet() Microsoft.AspNetCore.Components.ComponentBase.OnParametersSetAsync() Microsoft.AspNetCore.Components.ComponentBase.StateHasChanged() Microsoft.AspNetCore.Components.ComponentBase.ShouldRender() Microsoft.AspNetCore.Components.ComponentBase.OnAfterRender(bool) Microsoft.AspNetCore.Components.ComponentBase.OnAfterRenderAsync(bool) Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Action) Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Func<System.Threading.Tasks.Task>) Microsoft.AspNetCore.Components.ComponentBase.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ix.framework.core Assembly: ix.framework.core.blazor.dll Syntax public class IxComponentCommandView : RenderableComplexComponentBase<IxComponent>, IComponent, IHandleEvent, IHandleAfterRender, IRenderableComponent, IRenderableComplexComponentBase Methods | Improve this Doc View Source BuildRenderTree(RenderTreeBuilder) Declaration protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters Type Name Description Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder Overrides Microsoft.AspNetCore.Components.ComponentBase.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder) Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender Ix.Presentation.Blazor.Interfaces.IRenderableComponent Ix.Presentation.Blazor.Interfaces.IRenderableComplexComponentBase"
  },
  "api/ix.framework.core.IxComponentStatusView.html": {
    "href": "api/ix.framework.core.IxComponentStatusView.html",
    "title": "Class IxComponentStatusView | System.Dynamic.ExpandoObject",
    "keywords": "Class IxComponentStatusView Inheritance object Microsoft.AspNetCore.Components.ComponentBase Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComplexComponentBase<T><IxComponent> IxComponentStatusView Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender Ix.Presentation.Blazor.Interfaces.IRenderableComponent Ix.Presentation.Blazor.Interfaces.IRenderableComplexComponentBase Inherited Members Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComplexComponentBase<ix.framework.core.IxComponent>.Component Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateValuesOnChange(Ix.Connector.ITwinObject) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateValuesOnChange(Ix.Connector.ValueTypes.OnlinerBase) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateShadowValuesOnChange(Ix.Connector.ITwinObject) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateShadowValuesOnChange(Ix.Connector.ITwinPrimitive) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateValuesOnChangeOutFocus(Ix.Connector.ValueTypes.OnlinerBase) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HandlePropertyChanged(object, System.ComponentModel.PropertyChangedEventArgs) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HandleShadowPropertyChanged(object, Ix.Connector.ValueTypes.ValueChangedEventArgs) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HandlePropertyChangedOnOutFocus(object, System.ComponentModel.PropertyChangedEventArgs) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HasFocus Microsoft.AspNetCore.Components.ComponentBase.OnInitialized() Microsoft.AspNetCore.Components.ComponentBase.OnInitializedAsync() Microsoft.AspNetCore.Components.ComponentBase.OnParametersSet() Microsoft.AspNetCore.Components.ComponentBase.OnParametersSetAsync() Microsoft.AspNetCore.Components.ComponentBase.StateHasChanged() Microsoft.AspNetCore.Components.ComponentBase.ShouldRender() Microsoft.AspNetCore.Components.ComponentBase.OnAfterRender(bool) Microsoft.AspNetCore.Components.ComponentBase.OnAfterRenderAsync(bool) Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Action) Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Func<System.Threading.Tasks.Task>) Microsoft.AspNetCore.Components.ComponentBase.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ix.framework.core Assembly: ix.framework.core.blazor.dll Syntax public class IxComponentStatusView : RenderableComplexComponentBase<IxComponent>, IComponent, IHandleEvent, IHandleAfterRender, IRenderableComponent, IRenderableComplexComponentBase Methods | Improve this Doc View Source BuildRenderTree(RenderTreeBuilder) Declaration protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters Type Name Description Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder Overrides Microsoft.AspNetCore.Components.ComponentBase.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder) Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender Ix.Presentation.Blazor.Interfaces.IRenderableComponent Ix.Presentation.Blazor.Interfaces.IRenderableComplexComponentBase"
  },
  "api/ix.framework.core.IxComponentView.html": {
    "href": "api/ix.framework.core.IxComponentView.html",
    "title": "Class IxComponentView | System.Dynamic.ExpandoObject",
    "keywords": "Class IxComponentView Inheritance object Microsoft.AspNetCore.Components.ComponentBase Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComplexComponentBase<T><IxComponent> IxComponentView Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender Ix.Presentation.Blazor.Interfaces.IRenderableComponent Ix.Presentation.Blazor.Interfaces.IRenderableComplexComponentBase System.IDisposable Inherited Members Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComplexComponentBase<ix.framework.core.IxComponent>.Component Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateValuesOnChange(Ix.Connector.ITwinObject) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateValuesOnChange(Ix.Connector.ValueTypes.OnlinerBase) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateShadowValuesOnChange(Ix.Connector.ITwinObject) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateShadowValuesOnChange(Ix.Connector.ITwinPrimitive) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateValuesOnChangeOutFocus(Ix.Connector.ValueTypes.OnlinerBase) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HandlePropertyChanged(object, System.ComponentModel.PropertyChangedEventArgs) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HandleShadowPropertyChanged(object, Ix.Connector.ValueTypes.ValueChangedEventArgs) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HandlePropertyChangedOnOutFocus(object, System.ComponentModel.PropertyChangedEventArgs) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HasFocus Microsoft.AspNetCore.Components.ComponentBase.OnInitializedAsync() Microsoft.AspNetCore.Components.ComponentBase.OnParametersSet() Microsoft.AspNetCore.Components.ComponentBase.OnParametersSetAsync() Microsoft.AspNetCore.Components.ComponentBase.StateHasChanged() Microsoft.AspNetCore.Components.ComponentBase.ShouldRender() Microsoft.AspNetCore.Components.ComponentBase.OnAfterRender(bool) Microsoft.AspNetCore.Components.ComponentBase.OnAfterRenderAsync(bool) Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Action) Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Func<System.Threading.Tasks.Task>) Microsoft.AspNetCore.Components.ComponentBase.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ix.framework.core Assembly: ix.framework.core.blazor.dll Syntax public class IxComponentView : RenderableComplexComponentBase<IxComponent>, IComponent, IHandleEvent, IHandleAfterRender, IRenderableComponent, IRenderableComplexComponentBase, IDisposable Properties | Improve this Doc View Source IsControllable Declaration [Parameter] public bool IsControllable { get; set; } Property Value Type Description bool Methods | Improve this Doc View Source BuildRenderTree(RenderTreeBuilder) Declaration protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters Type Name Description Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder Overrides Microsoft.AspNetCore.Components.ComponentBase.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder) | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source OnInitialized() Declaration protected override void OnInitialized() Overrides Microsoft.AspNetCore.Components.ComponentBase.OnInitialized() Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender Ix.Presentation.Blazor.Interfaces.IRenderableComponent Ix.Presentation.Blazor.Interfaces.IRenderableComplexComponentBase System.IDisposable"
  },
  "api/ix.framework.core.IxContext.html": {
    "href": "api/ix.framework.core.IxContext.html",
    "title": "Class IxContext | System.Dynamic.ExpandoObject",
    "keywords": "Class IxContext Inheritance object IxContext Implements Ix.Connector.ITwinObject Ix.Connector.ITwinElement IIxContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ix.framework.core Assembly: ix.framework.core.dll Syntax public class IxContext : ITwinObject, ITwinElement, IIxContext Constructors | Improve this Doc View Source IxContext(ITwinObject, string, string) Declaration public IxContext(ITwinObject parent, string readableTail, string symbolTail) Parameters Type Name Description Ix.Connector.ITwinObject parent string readableTail string symbolTail Properties | Improve this Doc View Source AttributeName Declaration public string AttributeName { get; set; } Property Value Type Description string | Improve this Doc View Source Connector Declaration protected Connector Connector { get; } Property Value Type Description Ix.Connector.Connector | Improve this Doc View Source HumanReadable Declaration public string HumanReadable { get; set; } Property Value Type Description string | Improve this Doc View Source Parent Declaration protected ITwinObject Parent { get; set; } Property Value Type Description Ix.Connector.ITwinObject | Improve this Doc View Source Symbol Declaration public string Symbol { get; protected set; } Property Value Type Description string | Improve this Doc View Source SymbolTail Declaration protected string SymbolTail { get; set; } Property Value Type Description string Methods | Improve this Doc View Source AddChild(ITwinObject) Declaration public void AddChild(ITwinObject twinObject) Parameters Type Name Description Ix.Connector.ITwinObject twinObject | Improve this Doc View Source AddKid(ITwinElement) Declaration public void AddKid(ITwinElement kid) Parameters Type Name Description Ix.Connector.ITwinElement kid | Improve this Doc View Source AddValueTag(ITwinPrimitive) Declaration public void AddValueTag(ITwinPrimitive valueTag) Parameters Type Name Description Ix.Connector.ITwinPrimitive valueTag | Improve this Doc View Source GetChildren() Declaration public IEnumerable<ITwinObject> GetChildren() Returns Type Description System.Collections.Generic.IEnumerable<T><Ix.Connector.ITwinObject> | Improve this Doc View Source GetConnector() Declaration public Connector GetConnector() Returns Type Description Ix.Connector.Connector | Improve this Doc View Source GetKids() Declaration public IEnumerable<ITwinElement> GetKids() Returns Type Description System.Collections.Generic.IEnumerable<T><Ix.Connector.ITwinElement> | Improve this Doc View Source GetParent() Declaration public ITwinObject GetParent() Returns Type Description Ix.Connector.ITwinObject | Improve this Doc View Source GetSymbolTail() Declaration public string GetSymbolTail() Returns Type Description string | Improve this Doc View Source GetValueTags() Declaration public IEnumerable<ITwinPrimitive> GetValueTags() Returns Type Description System.Collections.Generic.IEnumerable<T><Ix.Connector.ITwinPrimitive> | Improve this Doc View Source OnlineToPlainAsync() Declaration public Task<IxContext> OnlineToPlainAsync() Returns Type Description System.Threading.Tasks.Task<TResult><IxContext> | Improve this Doc View Source OnlineToPlainAsync(IxContext) Declaration protected Task<IxContext> OnlineToPlainAsync(IxContext plain) Parameters Type Name Description IxContext plain Returns Type Description System.Threading.Tasks.Task<TResult><IxContext> | Improve this Doc View Source PlainToOnlineAsync(IxContext) Declaration public Task<IEnumerable<ITwinPrimitive>> PlainToOnlineAsync(IxContext plain) Parameters Type Name Description IxContext plain Returns Type Description System.Threading.Tasks.Task<TResult><System.Collections.Generic.IEnumerable<T><Ix.Connector.ITwinPrimitive>> | Improve this Doc View Source PlainToShadowAsync(IxContext) Declaration public Task<IEnumerable<ITwinPrimitive>> PlainToShadowAsync(IxContext plain) Parameters Type Name Description IxContext plain Returns Type Description System.Threading.Tasks.Task<TResult><System.Collections.Generic.IEnumerable<T><Ix.Connector.ITwinPrimitive>> | Improve this Doc View Source Poll() Declaration public void Poll() | Improve this Doc View Source ShadowToPlainAsync() Declaration public Task<IxContext> ShadowToPlainAsync() Returns Type Description System.Threading.Tasks.Task<TResult><IxContext> | Improve this Doc View Source ShadowToPlainAsync(IxContext) Declaration protected Task<IxContext> ShadowToPlainAsync(IxContext plain) Parameters Type Name Description IxContext plain Returns Type Description System.Threading.Tasks.Task<TResult><IxContext> Implements Ix.Connector.ITwinObject Ix.Connector.ITwinElement IIxContext"
  },
  "api/ix.framework.core.IxObject.html": {
    "href": "api/ix.framework.core.IxObject.html",
    "title": "Class IxObject | System.Dynamic.ExpandoObject",
    "keywords": "Class IxObject Inheritance object IxObject IxComponent IxTask Implements Ix.Connector.ITwinObject Ix.Connector.ITwinElement IIxObject Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ix.framework.core Assembly: ix.framework.core.dll Syntax public class IxObject : ITwinObject, ITwinElement, IIxObject Constructors | Improve this Doc View Source IxObject(ITwinObject, string, string) Declaration public IxObject(ITwinObject parent, string readableTail, string symbolTail) Parameters Type Name Description Ix.Connector.ITwinObject parent string readableTail string symbolTail Properties | Improve this Doc View Source AttributeName Declaration public string AttributeName { get; set; } Property Value Type Description string | Improve this Doc View Source Connector Declaration protected Connector Connector { get; } Property Value Type Description Ix.Connector.Connector | Improve this Doc View Source HumanReadable Declaration public string HumanReadable { get; set; } Property Value Type Description string | Improve this Doc View Source Parent Declaration protected ITwinObject Parent { get; set; } Property Value Type Description Ix.Connector.ITwinObject | Improve this Doc View Source Symbol Declaration public string Symbol { get; protected set; } Property Value Type Description string | Improve this Doc View Source SymbolTail Declaration protected string SymbolTail { get; set; } Property Value Type Description string Methods | Improve this Doc View Source AddChild(ITwinObject) Declaration public void AddChild(ITwinObject twinObject) Parameters Type Name Description Ix.Connector.ITwinObject twinObject | Improve this Doc View Source AddKid(ITwinElement) Declaration public void AddKid(ITwinElement kid) Parameters Type Name Description Ix.Connector.ITwinElement kid | Improve this Doc View Source AddValueTag(ITwinPrimitive) Declaration public void AddValueTag(ITwinPrimitive valueTag) Parameters Type Name Description Ix.Connector.ITwinPrimitive valueTag | Improve this Doc View Source GetChildren() Declaration public IEnumerable<ITwinObject> GetChildren() Returns Type Description System.Collections.Generic.IEnumerable<T><Ix.Connector.ITwinObject> | Improve this Doc View Source GetConnector() Declaration public Connector GetConnector() Returns Type Description Ix.Connector.Connector | Improve this Doc View Source GetKids() Declaration public IEnumerable<ITwinElement> GetKids() Returns Type Description System.Collections.Generic.IEnumerable<T><Ix.Connector.ITwinElement> | Improve this Doc View Source GetParent() Declaration public ITwinObject GetParent() Returns Type Description Ix.Connector.ITwinObject | Improve this Doc View Source GetSymbolTail() Declaration public string GetSymbolTail() Returns Type Description string | Improve this Doc View Source GetValueTags() Declaration public IEnumerable<ITwinPrimitive> GetValueTags() Returns Type Description System.Collections.Generic.IEnumerable<T><Ix.Connector.ITwinPrimitive> | Improve this Doc View Source OnlineToPlainAsync() Declaration public Task<IxObject> OnlineToPlainAsync() Returns Type Description System.Threading.Tasks.Task<TResult><IxObject> | Improve this Doc View Source OnlineToPlainAsync(IxObject) Declaration protected Task<IxObject> OnlineToPlainAsync(IxObject plain) Parameters Type Name Description IxObject plain Returns Type Description System.Threading.Tasks.Task<TResult><IxObject> | Improve this Doc View Source PlainToOnlineAsync(IxObject) Declaration public Task<IEnumerable<ITwinPrimitive>> PlainToOnlineAsync(IxObject plain) Parameters Type Name Description IxObject plain Returns Type Description System.Threading.Tasks.Task<TResult><System.Collections.Generic.IEnumerable<T><Ix.Connector.ITwinPrimitive>> | Improve this Doc View Source PlainToShadowAsync(IxObject) Declaration public Task<IEnumerable<ITwinPrimitive>> PlainToShadowAsync(IxObject plain) Parameters Type Name Description IxObject plain Returns Type Description System.Threading.Tasks.Task<TResult><System.Collections.Generic.IEnumerable<T><Ix.Connector.ITwinPrimitive>> | Improve this Doc View Source Poll() Declaration public void Poll() | Improve this Doc View Source ShadowToPlainAsync() Declaration public Task<IxObject> ShadowToPlainAsync() Returns Type Description System.Threading.Tasks.Task<TResult><IxObject> | Improve this Doc View Source ShadowToPlainAsync(IxObject) Declaration protected Task<IxObject> ShadowToPlainAsync(IxObject plain) Parameters Type Name Description IxObject plain Returns Type Description System.Threading.Tasks.Task<TResult><IxObject> Implements Ix.Connector.ITwinObject Ix.Connector.ITwinElement IIxObject"
  },
  "api/ix.framework.core.IxSequencer.html": {
    "href": "api/ix.framework.core.IxSequencer.html",
    "title": "Class IxSequencer | System.Dynamic.ExpandoObject",
    "keywords": "Class IxSequencer Inheritance object IxObject IxTask IxSequencer Implements Ix.Connector.ITwinObject Ix.Connector.ITwinElement IIxObject System.Windows.Input.ICommand IIxTask IIxTaskState Inherited Members IxTask.CanExecute(object) IxTask.Execute(object) IxTask.CanExecuteChanged IxTask.Status IxTask.IsDisabled IxTask.RemoteInvoke IxTask.RemoteRestore IxTask.RemoteAbort IxTask.RemoteResume IxTask.OnlineToPlainAsync(IxTask) IxTask.PlainToOnlineAsync(IxTask) IxTask.ShadowToPlainAsync(IxTask) IxTask.PlainToShadowAsync(IxTask) IxObject.OnlineToPlainAsync(IxObject) IxObject.PlainToOnlineAsync(IxObject) IxObject.ShadowToPlainAsync(IxObject) IxObject.PlainToShadowAsync(IxObject) IxObject.GetChildren() IxObject.GetKids() IxObject.GetValueTags() IxObject.AddValueTag(ITwinPrimitive) IxObject.AddKid(ITwinElement) IxObject.AddChild(ITwinObject) IxObject.Connector IxObject.GetConnector() IxObject.GetSymbolTail() IxObject.GetParent() IxObject.Symbol IxObject.AttributeName IxObject.HumanReadable IxObject.SymbolTail IxObject.Parent object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ix.framework.core Assembly: ix.framework.core.dll Syntax public class IxSequencer : IxTask, ITwinObject, ITwinElement, IIxObject, ICommand, IIxTask, IIxTaskState Constructors | Improve this Doc View Source IxSequencer(ITwinObject, string, string) Declaration public IxSequencer(ITwinObject parent, string readableTail, string symbolTail) Parameters Type Name Description Ix.Connector.ITwinObject parent string readableTail string symbolTail Properties | Improve this Doc View Source CurrentOrder Declaration public OnlinerULInt CurrentOrder { get; } Property Value Type Description Ix.Connector.ValueTypes.OnlinerULInt | Improve this Doc View Source SequenceMode Declaration [EnumeratorDiscriminator(typeof(eIxSequenceMode))] public OnlinerInt SequenceMode { get; } Property Value Type Description Ix.Connector.ValueTypes.OnlinerInt | Improve this Doc View Source StepBackwardCommand Declaration public IxTask StepBackwardCommand { get; } Property Value Type Description IxTask | Improve this Doc View Source StepForwardCommand Declaration public IxTask StepForwardCommand { get; } Property Value Type Description IxTask | Improve this Doc View Source StepIn Declaration public IxTask StepIn { get; } Property Value Type Description IxTask | Improve this Doc View Source SteppingMode Declaration [EnumeratorDiscriminator(typeof(eIxSteppingMode))] public OnlinerInt SteppingMode { get; } Property Value Type Description Ix.Connector.ValueTypes.OnlinerInt Methods | Improve this Doc View Source OnlineToPlainAsync() Declaration public Task<IxSequencer> OnlineToPlainAsync() Returns Type Description System.Threading.Tasks.Task<TResult><IxSequencer> | Improve this Doc View Source OnlineToPlainAsync(IxSequencer) Declaration protected Task<IxSequencer> OnlineToPlainAsync(IxSequencer plain) Parameters Type Name Description IxSequencer plain Returns Type Description System.Threading.Tasks.Task<TResult><IxSequencer> | Improve this Doc View Source PlainToOnlineAsync(IxSequencer) Declaration public Task<IEnumerable<ITwinPrimitive>> PlainToOnlineAsync(IxSequencer plain) Parameters Type Name Description IxSequencer plain Returns Type Description System.Threading.Tasks.Task<TResult><System.Collections.Generic.IEnumerable<T><Ix.Connector.ITwinPrimitive>> | Improve this Doc View Source PlainToShadowAsync(IxSequencer) Declaration public Task<IEnumerable<ITwinPrimitive>> PlainToShadowAsync(IxSequencer plain) Parameters Type Name Description IxSequencer plain Returns Type Description System.Threading.Tasks.Task<TResult><System.Collections.Generic.IEnumerable<T><Ix.Connector.ITwinPrimitive>> | Improve this Doc View Source Poll() Declaration public void Poll() | Improve this Doc View Source ShadowToPlainAsync() Declaration public Task<IxSequencer> ShadowToPlainAsync() Returns Type Description System.Threading.Tasks.Task<TResult><IxSequencer> | Improve this Doc View Source ShadowToPlainAsync(IxSequencer) Declaration protected Task<IxSequencer> ShadowToPlainAsync(IxSequencer plain) Parameters Type Name Description IxSequencer plain Returns Type Description System.Threading.Tasks.Task<TResult><IxSequencer> Implements Ix.Connector.ITwinObject Ix.Connector.ITwinElement IIxObject System.Windows.Input.ICommand IIxTask IIxTaskState"
  },
  "api/ix.framework.core.IxSequencerCommandView.html": {
    "href": "api/ix.framework.core.IxSequencerCommandView.html",
    "title": "Class IxSequencerCommandView | System.Dynamic.ExpandoObject",
    "keywords": "Class IxSequencerCommandView Inheritance object Microsoft.AspNetCore.Components.ComponentBase Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComplexComponentBase<T><IxSequencer> IxSequencerCommandView Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender Ix.Presentation.Blazor.Interfaces.IRenderableComponent Ix.Presentation.Blazor.Interfaces.IRenderableComplexComponentBase Inherited Members Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComplexComponentBase<ix.framework.core.IxSequencer>.Component Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateValuesOnChange(Ix.Connector.ITwinObject) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateValuesOnChange(Ix.Connector.ValueTypes.OnlinerBase) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateShadowValuesOnChange(Ix.Connector.ITwinObject) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateShadowValuesOnChange(Ix.Connector.ITwinPrimitive) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateValuesOnChangeOutFocus(Ix.Connector.ValueTypes.OnlinerBase) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HandlePropertyChanged(object, System.ComponentModel.PropertyChangedEventArgs) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HandleShadowPropertyChanged(object, Ix.Connector.ValueTypes.ValueChangedEventArgs) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HandlePropertyChangedOnOutFocus(object, System.ComponentModel.PropertyChangedEventArgs) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HasFocus Microsoft.AspNetCore.Components.ComponentBase.OnInitialized() Microsoft.AspNetCore.Components.ComponentBase.OnInitializedAsync() Microsoft.AspNetCore.Components.ComponentBase.OnParametersSet() Microsoft.AspNetCore.Components.ComponentBase.OnParametersSetAsync() Microsoft.AspNetCore.Components.ComponentBase.StateHasChanged() Microsoft.AspNetCore.Components.ComponentBase.ShouldRender() Microsoft.AspNetCore.Components.ComponentBase.OnAfterRender(bool) Microsoft.AspNetCore.Components.ComponentBase.OnAfterRenderAsync(bool) Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Action) Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Func<System.Threading.Tasks.Task>) Microsoft.AspNetCore.Components.ComponentBase.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ix.framework.core Assembly: ix.framework.core.blazor.dll Syntax public class IxSequencerCommandView : RenderableComplexComponentBase<IxSequencer>, IComponent, IHandleEvent, IHandleAfterRender, IRenderableComponent, IRenderableComplexComponentBase Methods | Improve this Doc View Source BuildRenderTree(RenderTreeBuilder) Declaration protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters Type Name Description Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder Overrides Microsoft.AspNetCore.Components.ComponentBase.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder) Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender Ix.Presentation.Blazor.Interfaces.IRenderableComponent Ix.Presentation.Blazor.Interfaces.IRenderableComplexComponentBase"
  },
  "api/ix.framework.core.IxSequencerStatusView.html": {
    "href": "api/ix.framework.core.IxSequencerStatusView.html",
    "title": "Class IxSequencerStatusView | System.Dynamic.ExpandoObject",
    "keywords": "Class IxSequencerStatusView Inheritance object Microsoft.AspNetCore.Components.ComponentBase Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComplexComponentBase<T><IxSequencer> IxSequencerStatusView Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender Ix.Presentation.Blazor.Interfaces.IRenderableComponent Ix.Presentation.Blazor.Interfaces.IRenderableComplexComponentBase Inherited Members Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComplexComponentBase<ix.framework.core.IxSequencer>.Component Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateValuesOnChange(Ix.Connector.ITwinObject) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateValuesOnChange(Ix.Connector.ValueTypes.OnlinerBase) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateShadowValuesOnChange(Ix.Connector.ITwinObject) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateShadowValuesOnChange(Ix.Connector.ITwinPrimitive) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateValuesOnChangeOutFocus(Ix.Connector.ValueTypes.OnlinerBase) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HandlePropertyChanged(object, System.ComponentModel.PropertyChangedEventArgs) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HandleShadowPropertyChanged(object, Ix.Connector.ValueTypes.ValueChangedEventArgs) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HandlePropertyChangedOnOutFocus(object, System.ComponentModel.PropertyChangedEventArgs) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HasFocus Microsoft.AspNetCore.Components.ComponentBase.OnInitialized() Microsoft.AspNetCore.Components.ComponentBase.OnInitializedAsync() Microsoft.AspNetCore.Components.ComponentBase.OnParametersSet() Microsoft.AspNetCore.Components.ComponentBase.OnParametersSetAsync() Microsoft.AspNetCore.Components.ComponentBase.StateHasChanged() Microsoft.AspNetCore.Components.ComponentBase.ShouldRender() Microsoft.AspNetCore.Components.ComponentBase.OnAfterRender(bool) Microsoft.AspNetCore.Components.ComponentBase.OnAfterRenderAsync(bool) Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Action) Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Func<System.Threading.Tasks.Task>) Microsoft.AspNetCore.Components.ComponentBase.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ix.framework.core Assembly: ix.framework.core.blazor.dll Syntax public class IxSequencerStatusView : RenderableComplexComponentBase<IxSequencer>, IComponent, IHandleEvent, IHandleAfterRender, IRenderableComponent, IRenderableComplexComponentBase Methods | Improve this Doc View Source BuildRenderTree(RenderTreeBuilder) Declaration protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters Type Name Description Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder Overrides Microsoft.AspNetCore.Components.ComponentBase.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder) Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender Ix.Presentation.Blazor.Interfaces.IRenderableComponent Ix.Presentation.Blazor.Interfaces.IRenderableComplexComponentBase"
  },
  "api/ix.framework.core.IxSequencerView.html": {
    "href": "api/ix.framework.core.IxSequencerView.html",
    "title": "Class IxSequencerView | System.Dynamic.ExpandoObject",
    "keywords": "Class IxSequencerView Inheritance object Microsoft.AspNetCore.Components.ComponentBase Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComplexComponentBase<T><IxSequencer> IxSequencerView Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender Ix.Presentation.Blazor.Interfaces.IRenderableComponent Ix.Presentation.Blazor.Interfaces.IRenderableComplexComponentBase System.IDisposable Inherited Members Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComplexComponentBase<ix.framework.core.IxSequencer>.Component Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateValuesOnChange(Ix.Connector.ITwinObject) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateValuesOnChange(Ix.Connector.ValueTypes.OnlinerBase) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateShadowValuesOnChange(Ix.Connector.ITwinObject) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateShadowValuesOnChange(Ix.Connector.ITwinPrimitive) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateValuesOnChangeOutFocus(Ix.Connector.ValueTypes.OnlinerBase) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HandlePropertyChanged(object, System.ComponentModel.PropertyChangedEventArgs) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HandleShadowPropertyChanged(object, Ix.Connector.ValueTypes.ValueChangedEventArgs) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HandlePropertyChangedOnOutFocus(object, System.ComponentModel.PropertyChangedEventArgs) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HasFocus Microsoft.AspNetCore.Components.ComponentBase.OnInitializedAsync() Microsoft.AspNetCore.Components.ComponentBase.OnParametersSet() Microsoft.AspNetCore.Components.ComponentBase.OnParametersSetAsync() Microsoft.AspNetCore.Components.ComponentBase.StateHasChanged() Microsoft.AspNetCore.Components.ComponentBase.ShouldRender() Microsoft.AspNetCore.Components.ComponentBase.OnAfterRender(bool) Microsoft.AspNetCore.Components.ComponentBase.OnAfterRenderAsync(bool) Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Action) Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Func<System.Threading.Tasks.Task>) Microsoft.AspNetCore.Components.ComponentBase.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ix.framework.core Assembly: ix.framework.core.blazor.dll Syntax public class IxSequencerView : RenderableComplexComponentBase<IxSequencer>, IComponent, IHandleEvent, IHandleAfterRender, IRenderableComponent, IRenderableComplexComponentBase, IDisposable Properties | Improve this Doc View Source IsControllable Declaration [Parameter] public bool IsControllable { get; set; } Property Value Type Description bool Methods | Improve this Doc View Source BuildRenderTree(RenderTreeBuilder) Declaration protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters Type Name Description Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder Overrides Microsoft.AspNetCore.Components.ComponentBase.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder) | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source OnInitialized() Declaration protected override void OnInitialized() Overrides Microsoft.AspNetCore.Components.ComponentBase.OnInitialized() Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender Ix.Presentation.Blazor.Interfaces.IRenderableComponent Ix.Presentation.Blazor.Interfaces.IRenderableComplexComponentBase System.IDisposable"
  },
  "api/ix.framework.core.IxStep.html": {
    "href": "api/ix.framework.core.IxStep.html",
    "title": "Class IxStep | System.Dynamic.ExpandoObject",
    "keywords": "Class IxStep Inheritance object IxObject IxTask IxStep Implements Ix.Connector.ITwinObject Ix.Connector.ITwinElement IIxObject System.Windows.Input.ICommand IIxTask IIxTaskState IIxStep Inherited Members IxTask.CanExecute(object) IxTask.Execute(object) IxTask.CanExecuteChanged IxTask.Status IxTask.IsDisabled IxTask.RemoteInvoke IxTask.RemoteRestore IxTask.RemoteAbort IxTask.RemoteResume IxTask.OnlineToPlainAsync(IxTask) IxTask.PlainToOnlineAsync(IxTask) IxTask.ShadowToPlainAsync(IxTask) IxTask.PlainToShadowAsync(IxTask) IxObject.OnlineToPlainAsync(IxObject) IxObject.PlainToOnlineAsync(IxObject) IxObject.ShadowToPlainAsync(IxObject) IxObject.PlainToShadowAsync(IxObject) IxObject.GetChildren() IxObject.GetKids() IxObject.GetValueTags() IxObject.AddValueTag(ITwinPrimitive) IxObject.AddKid(ITwinElement) IxObject.AddChild(ITwinObject) IxObject.Connector IxObject.GetConnector() IxObject.GetSymbolTail() IxObject.GetParent() IxObject.Symbol IxObject.AttributeName IxObject.HumanReadable IxObject.SymbolTail IxObject.Parent object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ix.framework.core Assembly: ix.framework.core.dll Syntax public class IxStep : IxTask, ITwinObject, ITwinElement, IIxObject, ICommand, IIxTask, IIxTaskState, IIxStep Constructors | Improve this Doc View Source IxStep(ITwinObject, string, string) Declaration public IxStep(ITwinObject parent, string readableTail, string symbolTail) Parameters Type Name Description Ix.Connector.ITwinObject parent string readableTail string symbolTail Properties | Improve this Doc View Source Description Declaration public string Description { get; set; } Property Value Type Description string | Improve this Doc View Source IsActive Declaration public OnlinerBool IsActive { get; } Property Value Type Description Ix.Connector.ValueTypes.OnlinerBool | Improve this Doc View Source IsEnabled Declaration public OnlinerBool IsEnabled { get; } Property Value Type Description Ix.Connector.ValueTypes.OnlinerBool | Improve this Doc View Source Order Declaration [ReadOnly] public OnlinerULInt Order { get; } Property Value Type Description Ix.Connector.ValueTypes.OnlinerULInt | Improve this Doc View Source StepDescription Declaration [ReadOnce] public OnlinerString StepDescription { get; } Property Value Type Description Ix.Connector.ValueTypes.OnlinerString Methods | Improve this Doc View Source OnlineToPlainAsync() Declaration public Task<IxStep> OnlineToPlainAsync() Returns Type Description System.Threading.Tasks.Task<TResult><IxStep> | Improve this Doc View Source OnlineToPlainAsync(IxStep) Declaration protected Task<IxStep> OnlineToPlainAsync(IxStep plain) Parameters Type Name Description IxStep plain Returns Type Description System.Threading.Tasks.Task<TResult><IxStep> | Improve this Doc View Source PlainToOnlineAsync(IxStep) Declaration public Task<IEnumerable<ITwinPrimitive>> PlainToOnlineAsync(IxStep plain) Parameters Type Name Description IxStep plain Returns Type Description System.Threading.Tasks.Task<TResult><System.Collections.Generic.IEnumerable<T><Ix.Connector.ITwinPrimitive>> | Improve this Doc View Source PlainToShadowAsync(IxStep) Declaration public Task<IEnumerable<ITwinPrimitive>> PlainToShadowAsync(IxStep plain) Parameters Type Name Description IxStep plain Returns Type Description System.Threading.Tasks.Task<TResult><System.Collections.Generic.IEnumerable<T><Ix.Connector.ITwinPrimitive>> | Improve this Doc View Source Poll() Declaration public void Poll() | Improve this Doc View Source ShadowToPlainAsync() Declaration public Task<IxStep> ShadowToPlainAsync() Returns Type Description System.Threading.Tasks.Task<TResult><IxStep> | Improve this Doc View Source ShadowToPlainAsync(IxStep) Declaration protected Task<IxStep> ShadowToPlainAsync(IxStep plain) Parameters Type Name Description IxStep plain Returns Type Description System.Threading.Tasks.Task<TResult><IxStep> Implements Ix.Connector.ITwinObject Ix.Connector.ITwinElement IIxObject System.Windows.Input.ICommand IIxTask IIxTaskState IIxStep"
  },
  "api/ix.framework.core.IxStepCommandView.html": {
    "href": "api/ix.framework.core.IxStepCommandView.html",
    "title": "Class IxStepCommandView | System.Dynamic.ExpandoObject",
    "keywords": "Class IxStepCommandView Inheritance object Microsoft.AspNetCore.Components.ComponentBase Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComplexComponentBase<T><IxStep> IxStepCommandView Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender Ix.Presentation.Blazor.Interfaces.IRenderableComponent Ix.Presentation.Blazor.Interfaces.IRenderableComplexComponentBase Inherited Members Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComplexComponentBase<ix.framework.core.IxStep>.Component Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateValuesOnChange(Ix.Connector.ITwinObject) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateValuesOnChange(Ix.Connector.ValueTypes.OnlinerBase) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateShadowValuesOnChange(Ix.Connector.ITwinObject) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateShadowValuesOnChange(Ix.Connector.ITwinPrimitive) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateValuesOnChangeOutFocus(Ix.Connector.ValueTypes.OnlinerBase) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HandlePropertyChanged(object, System.ComponentModel.PropertyChangedEventArgs) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HandleShadowPropertyChanged(object, Ix.Connector.ValueTypes.ValueChangedEventArgs) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HandlePropertyChangedOnOutFocus(object, System.ComponentModel.PropertyChangedEventArgs) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HasFocus Microsoft.AspNetCore.Components.ComponentBase.OnInitialized() Microsoft.AspNetCore.Components.ComponentBase.OnInitializedAsync() Microsoft.AspNetCore.Components.ComponentBase.OnParametersSet() Microsoft.AspNetCore.Components.ComponentBase.OnParametersSetAsync() Microsoft.AspNetCore.Components.ComponentBase.StateHasChanged() Microsoft.AspNetCore.Components.ComponentBase.ShouldRender() Microsoft.AspNetCore.Components.ComponentBase.OnAfterRender(bool) Microsoft.AspNetCore.Components.ComponentBase.OnAfterRenderAsync(bool) Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Action) Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Func<System.Threading.Tasks.Task>) Microsoft.AspNetCore.Components.ComponentBase.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ix.framework.core Assembly: ix.framework.core.blazor.dll Syntax public class IxStepCommandView : RenderableComplexComponentBase<IxStep>, IComponent, IHandleEvent, IHandleAfterRender, IRenderableComponent, IRenderableComplexComponentBase Methods | Improve this Doc View Source BuildRenderTree(RenderTreeBuilder) Declaration protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters Type Name Description Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder Overrides Microsoft.AspNetCore.Components.ComponentBase.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder) Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender Ix.Presentation.Blazor.Interfaces.IRenderableComponent Ix.Presentation.Blazor.Interfaces.IRenderableComplexComponentBase"
  },
  "api/ix.framework.core.IxStepStatusView.html": {
    "href": "api/ix.framework.core.IxStepStatusView.html",
    "title": "Class IxStepStatusView | System.Dynamic.ExpandoObject",
    "keywords": "Class IxStepStatusView Inheritance object Microsoft.AspNetCore.Components.ComponentBase Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComplexComponentBase<T><IxStep> IxStepStatusView Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender Ix.Presentation.Blazor.Interfaces.IRenderableComponent Ix.Presentation.Blazor.Interfaces.IRenderableComplexComponentBase Inherited Members Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComplexComponentBase<ix.framework.core.IxStep>.Component Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateValuesOnChange(Ix.Connector.ITwinObject) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateValuesOnChange(Ix.Connector.ValueTypes.OnlinerBase) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateShadowValuesOnChange(Ix.Connector.ITwinObject) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateShadowValuesOnChange(Ix.Connector.ITwinPrimitive) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateValuesOnChangeOutFocus(Ix.Connector.ValueTypes.OnlinerBase) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HandlePropertyChanged(object, System.ComponentModel.PropertyChangedEventArgs) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HandleShadowPropertyChanged(object, Ix.Connector.ValueTypes.ValueChangedEventArgs) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HandlePropertyChangedOnOutFocus(object, System.ComponentModel.PropertyChangedEventArgs) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HasFocus Microsoft.AspNetCore.Components.ComponentBase.OnInitialized() Microsoft.AspNetCore.Components.ComponentBase.OnInitializedAsync() Microsoft.AspNetCore.Components.ComponentBase.OnParametersSet() Microsoft.AspNetCore.Components.ComponentBase.OnParametersSetAsync() Microsoft.AspNetCore.Components.ComponentBase.StateHasChanged() Microsoft.AspNetCore.Components.ComponentBase.ShouldRender() Microsoft.AspNetCore.Components.ComponentBase.OnAfterRender(bool) Microsoft.AspNetCore.Components.ComponentBase.OnAfterRenderAsync(bool) Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Action) Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Func<System.Threading.Tasks.Task>) Microsoft.AspNetCore.Components.ComponentBase.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ix.framework.core Assembly: ix.framework.core.blazor.dll Syntax public class IxStepStatusView : RenderableComplexComponentBase<IxStep>, IComponent, IHandleEvent, IHandleAfterRender, IRenderableComponent, IRenderableComplexComponentBase Methods | Improve this Doc View Source BuildRenderTree(RenderTreeBuilder) Declaration protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters Type Name Description Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder Overrides Microsoft.AspNetCore.Components.ComponentBase.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder) Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender Ix.Presentation.Blazor.Interfaces.IRenderableComponent Ix.Presentation.Blazor.Interfaces.IRenderableComplexComponentBase"
  },
  "api/ix.framework.core.IxStepView.html": {
    "href": "api/ix.framework.core.IxStepView.html",
    "title": "Class IxStepView | System.Dynamic.ExpandoObject",
    "keywords": "Class IxStepView Inheritance object Microsoft.AspNetCore.Components.ComponentBase Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComplexComponentBase<T><IxStep> IxStepView Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender Ix.Presentation.Blazor.Interfaces.IRenderableComponent Ix.Presentation.Blazor.Interfaces.IRenderableComplexComponentBase System.IDisposable Inherited Members Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComplexComponentBase<ix.framework.core.IxStep>.Component Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateValuesOnChange(Ix.Connector.ITwinObject) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateValuesOnChange(Ix.Connector.ValueTypes.OnlinerBase) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateShadowValuesOnChange(Ix.Connector.ITwinObject) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateShadowValuesOnChange(Ix.Connector.ITwinPrimitive) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateValuesOnChangeOutFocus(Ix.Connector.ValueTypes.OnlinerBase) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HandlePropertyChanged(object, System.ComponentModel.PropertyChangedEventArgs) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HandleShadowPropertyChanged(object, Ix.Connector.ValueTypes.ValueChangedEventArgs) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HandlePropertyChangedOnOutFocus(object, System.ComponentModel.PropertyChangedEventArgs) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HasFocus Microsoft.AspNetCore.Components.ComponentBase.OnInitializedAsync() Microsoft.AspNetCore.Components.ComponentBase.OnParametersSet() Microsoft.AspNetCore.Components.ComponentBase.OnParametersSetAsync() Microsoft.AspNetCore.Components.ComponentBase.StateHasChanged() Microsoft.AspNetCore.Components.ComponentBase.ShouldRender() Microsoft.AspNetCore.Components.ComponentBase.OnAfterRender(bool) Microsoft.AspNetCore.Components.ComponentBase.OnAfterRenderAsync(bool) Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Action) Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Func<System.Threading.Tasks.Task>) Microsoft.AspNetCore.Components.ComponentBase.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ix.framework.core Assembly: ix.framework.core.blazor.dll Syntax public class IxStepView : RenderableComplexComponentBase<IxStep>, IComponent, IHandleEvent, IHandleAfterRender, IRenderableComponent, IRenderableComplexComponentBase, IDisposable Properties | Improve this Doc View Source IsControllable Declaration [Parameter] public bool IsControllable { get; set; } Property Value Type Description bool Methods | Improve this Doc View Source BuildRenderTree(RenderTreeBuilder) Declaration protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters Type Name Description Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder Overrides Microsoft.AspNetCore.Components.ComponentBase.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder) | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source OnInitialized() Declaration protected override void OnInitialized() Overrides Microsoft.AspNetCore.Components.ComponentBase.OnInitialized() Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender Ix.Presentation.Blazor.Interfaces.IRenderableComponent Ix.Presentation.Blazor.Interfaces.IRenderableComplexComponentBase System.IDisposable"
  },
  "api/ix.framework.core.IxTask.html": {
    "href": "api/ix.framework.core.IxTask.html",
    "title": "Class IxTask | System.Dynamic.ExpandoObject",
    "keywords": "Class IxTask Inheritance object IxObject IxTask IxSequencer IxStep Implements Ix.Connector.ITwinObject Ix.Connector.ITwinElement IIxObject System.Windows.Input.ICommand IIxTask IIxTaskState Inherited Members IxObject.OnlineToPlainAsync(IxObject) IxObject.PlainToOnlineAsync(IxObject) IxObject.ShadowToPlainAsync(IxObject) IxObject.PlainToShadowAsync(IxObject) IxObject.GetChildren() IxObject.GetKids() IxObject.GetValueTags() IxObject.AddValueTag(ITwinPrimitive) IxObject.AddKid(ITwinElement) IxObject.AddChild(ITwinObject) IxObject.Connector IxObject.GetConnector() IxObject.GetSymbolTail() IxObject.GetParent() IxObject.Symbol IxObject.AttributeName IxObject.HumanReadable IxObject.SymbolTail IxObject.Parent object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ix.framework.core Assembly: ix.framework.core.dll Syntax public class IxTask : IxObject, ITwinObject, ITwinElement, IIxObject, ICommand, IIxTask, IIxTaskState Constructors | Improve this Doc View Source IxTask(ITwinObject, string, string) Declaration public IxTask(ITwinObject parent, string readableTail, string symbolTail) Parameters Type Name Description Ix.Connector.ITwinObject parent string readableTail string symbolTail Properties | Improve this Doc View Source IsDisabled Declaration public OnlinerBool IsDisabled { get; } Property Value Type Description Ix.Connector.ValueTypes.OnlinerBool | Improve this Doc View Source RemoteAbort Declaration public OnlinerBool RemoteAbort { get; } Property Value Type Description Ix.Connector.ValueTypes.OnlinerBool | Improve this Doc View Source RemoteInvoke Declaration public OnlinerBool RemoteInvoke { get; } Property Value Type Description Ix.Connector.ValueTypes.OnlinerBool | Improve this Doc View Source RemoteRestore Declaration public OnlinerBool RemoteRestore { get; } Property Value Type Description Ix.Connector.ValueTypes.OnlinerBool | Improve this Doc View Source RemoteResume Declaration public OnlinerBool RemoteResume { get; } Property Value Type Description Ix.Connector.ValueTypes.OnlinerBool | Improve this Doc View Source Status Declaration [ReadOnly] [EnumeratorDiscriminator(typeof(eIxTaskState))] public OnlinerInt Status { get; } Property Value Type Description Ix.Connector.ValueTypes.OnlinerInt Methods | Improve this Doc View Source CanExecute(object) Declaration public bool CanExecute(object parameter = null) Parameters Type Name Description object parameter Returns Type Description bool | Improve this Doc View Source Execute(object) Declaration public void Execute(object parameter) Parameters Type Name Description object parameter | Improve this Doc View Source OnlineToPlainAsync() Declaration public Task<IxTask> OnlineToPlainAsync() Returns Type Description System.Threading.Tasks.Task<TResult><IxTask> | Improve this Doc View Source OnlineToPlainAsync(IxTask) Declaration protected Task<IxTask> OnlineToPlainAsync(IxTask plain) Parameters Type Name Description IxTask plain Returns Type Description System.Threading.Tasks.Task<TResult><IxTask> | Improve this Doc View Source PlainToOnlineAsync(IxTask) Declaration public Task<IEnumerable<ITwinPrimitive>> PlainToOnlineAsync(IxTask plain) Parameters Type Name Description IxTask plain Returns Type Description System.Threading.Tasks.Task<TResult><System.Collections.Generic.IEnumerable<T><Ix.Connector.ITwinPrimitive>> | Improve this Doc View Source PlainToShadowAsync(IxTask) Declaration public Task<IEnumerable<ITwinPrimitive>> PlainToShadowAsync(IxTask plain) Parameters Type Name Description IxTask plain Returns Type Description System.Threading.Tasks.Task<TResult><System.Collections.Generic.IEnumerable<T><Ix.Connector.ITwinPrimitive>> | Improve this Doc View Source Poll() Declaration public void Poll() | Improve this Doc View Source ShadowToPlainAsync() Declaration public Task<IxTask> ShadowToPlainAsync() Returns Type Description System.Threading.Tasks.Task<TResult><IxTask> | Improve this Doc View Source ShadowToPlainAsync(IxTask) Declaration protected Task<IxTask> ShadowToPlainAsync(IxTask plain) Parameters Type Name Description IxTask plain Returns Type Description System.Threading.Tasks.Task<TResult><IxTask> Events | Improve this Doc View Source CanExecuteChanged Declaration public event EventHandler CanExecuteChanged Event Type Type Description System.EventHandler Implements Ix.Connector.ITwinObject Ix.Connector.ITwinElement IIxObject System.Windows.Input.ICommand IIxTask IIxTaskState"
  },
  "api/ix.framework.core.IxTaskCommandView.html": {
    "href": "api/ix.framework.core.IxTaskCommandView.html",
    "title": "Class IxTaskCommandView | System.Dynamic.ExpandoObject",
    "keywords": "Class IxTaskCommandView Inheritance object Microsoft.AspNetCore.Components.ComponentBase Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComplexComponentBase<T><IxTask> IxTaskCommandView Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender Ix.Presentation.Blazor.Interfaces.IRenderableComponent Ix.Presentation.Blazor.Interfaces.IRenderableComplexComponentBase Inherited Members Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComplexComponentBase<ix.framework.core.IxTask>.Component Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateValuesOnChange(Ix.Connector.ITwinObject) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateValuesOnChange(Ix.Connector.ValueTypes.OnlinerBase) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateShadowValuesOnChange(Ix.Connector.ITwinObject) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateShadowValuesOnChange(Ix.Connector.ITwinPrimitive) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateValuesOnChangeOutFocus(Ix.Connector.ValueTypes.OnlinerBase) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HandlePropertyChanged(object, System.ComponentModel.PropertyChangedEventArgs) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HandleShadowPropertyChanged(object, Ix.Connector.ValueTypes.ValueChangedEventArgs) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HandlePropertyChangedOnOutFocus(object, System.ComponentModel.PropertyChangedEventArgs) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HasFocus Microsoft.AspNetCore.Components.ComponentBase.OnInitialized() Microsoft.AspNetCore.Components.ComponentBase.OnInitializedAsync() Microsoft.AspNetCore.Components.ComponentBase.OnParametersSet() Microsoft.AspNetCore.Components.ComponentBase.OnParametersSetAsync() Microsoft.AspNetCore.Components.ComponentBase.StateHasChanged() Microsoft.AspNetCore.Components.ComponentBase.ShouldRender() Microsoft.AspNetCore.Components.ComponentBase.OnAfterRender(bool) Microsoft.AspNetCore.Components.ComponentBase.OnAfterRenderAsync(bool) Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Action) Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Func<System.Threading.Tasks.Task>) Microsoft.AspNetCore.Components.ComponentBase.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ix.framework.core Assembly: ix.framework.core.blazor.dll Syntax public class IxTaskCommandView : RenderableComplexComponentBase<IxTask>, IComponent, IHandleEvent, IHandleAfterRender, IRenderableComponent, IRenderableComplexComponentBase Properties | Improve this Doc View Source Description Declaration [Parameter] public string Description { get; set; } Property Value Type Description string | Improve this Doc View Source HideRestoreButton Declaration [Parameter] public bool HideRestoreButton { get; set; } Property Value Type Description bool Methods | Improve this Doc View Source BuildRenderTree(RenderTreeBuilder) Declaration protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters Type Name Description Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder Overrides Microsoft.AspNetCore.Components.ComponentBase.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder) Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender Ix.Presentation.Blazor.Interfaces.IRenderableComponent Ix.Presentation.Blazor.Interfaces.IRenderableComplexComponentBase"
  },
  "api/ix.framework.core.IxTaskStatusView.html": {
    "href": "api/ix.framework.core.IxTaskStatusView.html",
    "title": "Class IxTaskStatusView | System.Dynamic.ExpandoObject",
    "keywords": "Class IxTaskStatusView Inheritance object Microsoft.AspNetCore.Components.ComponentBase Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComplexComponentBase<T><IxTask> IxTaskStatusView Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender Ix.Presentation.Blazor.Interfaces.IRenderableComponent Ix.Presentation.Blazor.Interfaces.IRenderableComplexComponentBase Inherited Members Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComplexComponentBase<ix.framework.core.IxTask>.Component Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateValuesOnChange(Ix.Connector.ITwinObject) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateValuesOnChange(Ix.Connector.ValueTypes.OnlinerBase) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateShadowValuesOnChange(Ix.Connector.ITwinObject) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateShadowValuesOnChange(Ix.Connector.ITwinPrimitive) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateValuesOnChangeOutFocus(Ix.Connector.ValueTypes.OnlinerBase) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HandlePropertyChanged(object, System.ComponentModel.PropertyChangedEventArgs) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HandleShadowPropertyChanged(object, Ix.Connector.ValueTypes.ValueChangedEventArgs) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HandlePropertyChangedOnOutFocus(object, System.ComponentModel.PropertyChangedEventArgs) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HasFocus Microsoft.AspNetCore.Components.ComponentBase.OnInitialized() Microsoft.AspNetCore.Components.ComponentBase.OnInitializedAsync() Microsoft.AspNetCore.Components.ComponentBase.OnParametersSet() Microsoft.AspNetCore.Components.ComponentBase.OnParametersSetAsync() Microsoft.AspNetCore.Components.ComponentBase.StateHasChanged() Microsoft.AspNetCore.Components.ComponentBase.ShouldRender() Microsoft.AspNetCore.Components.ComponentBase.OnAfterRender(bool) Microsoft.AspNetCore.Components.ComponentBase.OnAfterRenderAsync(bool) Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Action) Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Func<System.Threading.Tasks.Task>) Microsoft.AspNetCore.Components.ComponentBase.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ix.framework.core Assembly: ix.framework.core.blazor.dll Syntax public class IxTaskStatusView : RenderableComplexComponentBase<IxTask>, IComponent, IHandleEvent, IHandleAfterRender, IRenderableComponent, IRenderableComplexComponentBase Properties | Improve this Doc View Source Description Declaration [Parameter] public string Description { get; set; } Property Value Type Description string | Improve this Doc View Source HideRestoreButton Declaration [Parameter] public bool HideRestoreButton { get; set; } Property Value Type Description bool Methods | Improve this Doc View Source BuildRenderTree(RenderTreeBuilder) Declaration protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters Type Name Description Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder Overrides Microsoft.AspNetCore.Components.ComponentBase.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder) Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender Ix.Presentation.Blazor.Interfaces.IRenderableComponent Ix.Presentation.Blazor.Interfaces.IRenderableComplexComponentBase"
  },
  "api/ix.framework.core.IxTaskView.html": {
    "href": "api/ix.framework.core.IxTaskView.html",
    "title": "Class IxTaskView | System.Dynamic.ExpandoObject",
    "keywords": "Class IxTaskView Inheritance object Microsoft.AspNetCore.Components.ComponentBase Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComplexComponentBase<T><IxTask> IxTaskView Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender Ix.Presentation.Blazor.Interfaces.IRenderableComponent Ix.Presentation.Blazor.Interfaces.IRenderableComplexComponentBase System.IDisposable Inherited Members Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComplexComponentBase<ix.framework.core.IxTask>.Component Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateValuesOnChange(Ix.Connector.ITwinObject) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateValuesOnChange(Ix.Connector.ValueTypes.OnlinerBase) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateShadowValuesOnChange(Ix.Connector.ITwinObject) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateShadowValuesOnChange(Ix.Connector.ITwinPrimitive) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.UpdateValuesOnChangeOutFocus(Ix.Connector.ValueTypes.OnlinerBase) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HandlePropertyChanged(object, System.ComponentModel.PropertyChangedEventArgs) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HandleShadowPropertyChanged(object, Ix.Connector.ValueTypes.ValueChangedEventArgs) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HandlePropertyChangedOnOutFocus(object, System.ComponentModel.PropertyChangedEventArgs) Ix.Presentation.Blazor.Controls.RenderableContent.RenderableComponentBase.HasFocus Microsoft.AspNetCore.Components.ComponentBase.OnInitializedAsync() Microsoft.AspNetCore.Components.ComponentBase.OnParametersSet() Microsoft.AspNetCore.Components.ComponentBase.OnParametersSetAsync() Microsoft.AspNetCore.Components.ComponentBase.StateHasChanged() Microsoft.AspNetCore.Components.ComponentBase.ShouldRender() Microsoft.AspNetCore.Components.ComponentBase.OnAfterRender(bool) Microsoft.AspNetCore.Components.ComponentBase.OnAfterRenderAsync(bool) Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Action) Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Func<System.Threading.Tasks.Task>) Microsoft.AspNetCore.Components.ComponentBase.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ix.framework.core Assembly: ix.framework.core.blazor.dll Syntax public class IxTaskView : RenderableComplexComponentBase<IxTask>, IComponent, IHandleEvent, IHandleAfterRender, IRenderableComponent, IRenderableComplexComponentBase, IDisposable Properties | Improve this Doc View Source Description Declaration [Parameter] public string Description { get; set; } Property Value Type Description string | Improve this Doc View Source HideRestoreButton Declaration [Parameter] public bool HideRestoreButton { get; set; } Property Value Type Description bool | Improve this Doc View Source IsDisabled Declaration [Parameter] public bool IsDisabled { get; set; } Property Value Type Description bool Methods | Improve this Doc View Source BuildRenderTree(RenderTreeBuilder) Declaration protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters Type Name Description Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder Overrides Microsoft.AspNetCore.Components.ComponentBase.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder) | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source OnInitialized() Declaration protected override void OnInitialized() Overrides Microsoft.AspNetCore.Components.ComponentBase.OnInitialized() Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender Ix.Presentation.Blazor.Interfaces.IRenderableComponent Ix.Presentation.Blazor.Interfaces.IRenderableComplexComponentBase System.IDisposable"
  },
  "api/Pocos.ix.framework.core._NULL_CONTEXT.html": {
    "href": "api/Pocos.ix.framework.core._NULL_CONTEXT.html",
    "title": "Class _NULL_CONTEXT | System.Dynamic.ExpandoObject",
    "keywords": "Class _NULL_CONTEXT Inheritance object _NULL_CONTEXT Implements IIxContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Pocos.ix.framework.core Assembly: ix.framework.core.dll Syntax public class _NULL_CONTEXT : IIxContext Implements IIxContext"
  },
  "api/Pocos.ix.framework.core.html": {
    "href": "api/Pocos.ix.framework.core.html",
    "title": "Namespace Pocos.ix.framework.core | System.Dynamic.ExpandoObject",
    "keywords": "Namespace Pocos.ix.framework.core Classes _NULL_CONTEXT IxComponent IxContext IxObject IxSequencer IxStep IxTask Interfaces IIxComponent IIxContext IIxCoordinator IIxObject IIxServiceable IIxStep IIxTask IIxTaskState"
  },
  "api/Pocos.ix.framework.core.IIxComponent.html": {
    "href": "api/Pocos.ix.framework.core.IIxComponent.html",
    "title": "Interface IIxComponent | System.Dynamic.ExpandoObject",
    "keywords": "Interface IIxComponent Namespace: Pocos.ix.framework.core Assembly: ix.framework.core.dll Syntax public interface IIxComponent"
  },
  "api/Pocos.ix.framework.core.IIxContext.html": {
    "href": "api/Pocos.ix.framework.core.IIxContext.html",
    "title": "Interface IIxContext | System.Dynamic.ExpandoObject",
    "keywords": "Interface IIxContext Namespace: Pocos.ix.framework.core Assembly: ix.framework.core.dll Syntax public interface IIxContext"
  },
  "api/Pocos.ix.framework.core.IIxCoordinator.html": {
    "href": "api/Pocos.ix.framework.core.IIxCoordinator.html",
    "title": "Interface IIxCoordinator | System.Dynamic.ExpandoObject",
    "keywords": "Interface IIxCoordinator Namespace: Pocos.ix.framework.core Assembly: ix.framework.core.dll Syntax public interface IIxCoordinator"
  },
  "api/Pocos.ix.framework.core.IIxObject.html": {
    "href": "api/Pocos.ix.framework.core.IIxObject.html",
    "title": "Interface IIxObject | System.Dynamic.ExpandoObject",
    "keywords": "Interface IIxObject Namespace: Pocos.ix.framework.core Assembly: ix.framework.core.dll Syntax public interface IIxObject"
  },
  "api/Pocos.ix.framework.core.IIxServiceable.html": {
    "href": "api/Pocos.ix.framework.core.IIxServiceable.html",
    "title": "Interface IIxServiceable | System.Dynamic.ExpandoObject",
    "keywords": "Interface IIxServiceable Namespace: Pocos.ix.framework.core Assembly: ix.framework.core.dll Syntax public interface IIxServiceable"
  },
  "api/Pocos.ix.framework.core.IIxStep.html": {
    "href": "api/Pocos.ix.framework.core.IIxStep.html",
    "title": "Interface IIxStep | System.Dynamic.ExpandoObject",
    "keywords": "Interface IIxStep Namespace: Pocos.ix.framework.core Assembly: ix.framework.core.dll Syntax public interface IIxStep"
  },
  "api/Pocos.ix.framework.core.IIxTask.html": {
    "href": "api/Pocos.ix.framework.core.IIxTask.html",
    "title": "Interface IIxTask | System.Dynamic.ExpandoObject",
    "keywords": "Interface IIxTask Namespace: Pocos.ix.framework.core Assembly: ix.framework.core.dll Syntax public interface IIxTask"
  },
  "api/Pocos.ix.framework.core.IIxTaskState.html": {
    "href": "api/Pocos.ix.framework.core.IIxTaskState.html",
    "title": "Interface IIxTaskState | System.Dynamic.ExpandoObject",
    "keywords": "Interface IIxTaskState Namespace: Pocos.ix.framework.core Assembly: ix.framework.core.dll Syntax public interface IIxTaskState"
  },
  "api/Pocos.ix.framework.core.IxComponent.html": {
    "href": "api/Pocos.ix.framework.core.IxComponent.html",
    "title": "Class IxComponent | System.Dynamic.ExpandoObject",
    "keywords": "Class IxComponent Inheritance object IxObject IxComponent Implements IIxObject IIxComponent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Pocos.ix.framework.core Assembly: ix.framework.core.dll Syntax public class IxComponent : IxObject, IIxObject, IIxComponent Properties | Improve this Doc View Source _isinServiceMode Declaration public bool _isinServiceMode { get; set; } Property Value Type Description bool Implements IIxObject IIxComponent"
  },
  "api/Pocos.ix.framework.core.IxContext.html": {
    "href": "api/Pocos.ix.framework.core.IxContext.html",
    "title": "Class IxContext | System.Dynamic.ExpandoObject",
    "keywords": "Class IxContext Inheritance object IxContext Implements IIxContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Pocos.ix.framework.core Assembly: ix.framework.core.dll Syntax public class IxContext : IIxContext Implements IIxContext"
  },
  "api/Pocos.ix.framework.core.IxObject.html": {
    "href": "api/Pocos.ix.framework.core.IxObject.html",
    "title": "Class IxObject | System.Dynamic.ExpandoObject",
    "keywords": "Class IxObject Inheritance object IxObject IxComponent IxTask Implements IIxObject Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Pocos.ix.framework.core Assembly: ix.framework.core.dll Syntax public class IxObject : IIxObject Implements IIxObject"
  },
  "api/Pocos.ix.framework.core.IxSequencer.html": {
    "href": "api/Pocos.ix.framework.core.IxSequencer.html",
    "title": "Class IxSequencer | System.Dynamic.ExpandoObject",
    "keywords": "Class IxSequencer Inheritance object IxObject IxTask IxSequencer Implements IIxObject IIxTask IIxTaskState Inherited Members IxTask.Status IxTask.IsDisabled IxTask.RemoteInvoke IxTask.RemoteRestore IxTask.RemoteAbort IxTask.RemoteResume object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Pocos.ix.framework.core Assembly: ix.framework.core.dll Syntax public class IxSequencer : IxTask, IIxObject, IIxTask, IIxTaskState Properties | Improve this Doc View Source CurrentOrder Declaration public ulong CurrentOrder { get; set; } Property Value Type Description ulong | Improve this Doc View Source SequenceMode Declaration public short SequenceMode { get; set; } Property Value Type Description short | Improve this Doc View Source StepBackwardCommand Declaration public IxTask StepBackwardCommand { get; set; } Property Value Type Description IxTask | Improve this Doc View Source StepForwardCommand Declaration public IxTask StepForwardCommand { get; set; } Property Value Type Description IxTask | Improve this Doc View Source StepIn Declaration public IxTask StepIn { get; set; } Property Value Type Description IxTask | Improve this Doc View Source SteppingMode Declaration public short SteppingMode { get; set; } Property Value Type Description short Implements IIxObject IIxTask IIxTaskState"
  },
  "api/Pocos.ix.framework.core.IxStep.html": {
    "href": "api/Pocos.ix.framework.core.IxStep.html",
    "title": "Class IxStep | System.Dynamic.ExpandoObject",
    "keywords": "Class IxStep Inheritance object IxObject IxTask IxStep Implements IIxObject IIxTask IIxTaskState IIxStep Inherited Members IxTask.Status IxTask.IsDisabled IxTask.RemoteInvoke IxTask.RemoteRestore IxTask.RemoteAbort IxTask.RemoteResume object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Pocos.ix.framework.core Assembly: ix.framework.core.dll Syntax public class IxStep : IxTask, IIxObject, IIxTask, IIxTaskState, IIxStep Properties | Improve this Doc View Source IsActive Declaration public bool IsActive { get; set; } Property Value Type Description bool | Improve this Doc View Source IsEnabled Declaration public bool IsEnabled { get; set; } Property Value Type Description bool | Improve this Doc View Source Order Declaration public ulong Order { get; set; } Property Value Type Description ulong | Improve this Doc View Source StepDescription Declaration public string StepDescription { get; set; } Property Value Type Description string Implements IIxObject IIxTask IIxTaskState IIxStep"
  },
  "api/Pocos.ix.framework.core.IxTask.html": {
    "href": "api/Pocos.ix.framework.core.IxTask.html",
    "title": "Class IxTask | System.Dynamic.ExpandoObject",
    "keywords": "Class IxTask Inheritance object IxObject IxTask IxSequencer IxStep Implements IIxObject IIxTask IIxTaskState Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Pocos.ix.framework.core Assembly: ix.framework.core.dll Syntax public class IxTask : IxObject, IIxObject, IIxTask, IIxTaskState Properties | Improve this Doc View Source IsDisabled Declaration public bool IsDisabled { get; set; } Property Value Type Description bool | Improve this Doc View Source RemoteAbort Declaration public bool RemoteAbort { get; set; } Property Value Type Description bool | Improve this Doc View Source RemoteInvoke Declaration public bool RemoteInvoke { get; set; } Property Value Type Description bool | Improve this Doc View Source RemoteRestore Declaration public bool RemoteRestore { get; set; } Property Value Type Description bool | Improve this Doc View Source RemoteResume Declaration public bool RemoteResume { get; set; } Property Value Type Description bool | Improve this Doc View Source Status Declaration public short Status { get; set; } Property Value Type Description short Implements IIxObject IIxTask IIxTaskState"
  },
  "articles/core/README.html": {
    "href": "articles/core/README.html",
    "title": "ix.core | System.Dynamic.ExpandoObject",
    "keywords": "ix.core ix.core provides basic blocks for building ix.framework applications. Basic concepts IxContext IxContext encapsulates entire application or application units. Any solution may contain one or more contexts, however the each should be considered to be an isolated island and any direct inter-context access to members must be avoided. Note Each IxContext must belong to a single PLC task.Multiple IxContexts can be however running on the same task. classDiagram class Context{ +Main()* +Execute() } In its basic implementation IxContext has relatively simple interface. Main is the method where we place all calls of our sub-routines. In other words the Main is the root of the call tree of our program. Execute method runs the IxContext. It must be called cyclically within a program unit that is attached to a cyclic task. Why do we need IxContext IxContext provides counters, object identification and other information about the execution of the program. These information is then used by the objects contained at different levels of the IxContext. How IxContext works When you call Execute method on an instance of a IxContext, it will ensure opening IxContext, running Main method (root of all your program calls) and IxContext closing. flowchart LR classDef run fill:#80FF00,stroke:#0080FF,stroke-width:4px,color:#7F00FF,font-size:15px,font-weight:bold classDef main fill:#ff8000,stroke:#0080ff,stroke-width:4px,color:#7F00FF,font-size:15px,font-weight:bold id1(Open):::run-->id2(#Main*):::main-->id3(Close):::run-->id1 How to use IxContext Base class for the IxContext is ix.core.IxContext. The entry point of call execution of the IxContext is Main method. Notice that the IxContext class is abstract and cannot be instantiated if not extended. Main method must be overridden in derived class notice the use of override keyword and also that the method is protected which means the it is visible only from within the IxContext and derived classes. METHOD PROTECTED OVERRIDE Main MyComponent.Initialize(THIS); MyComponent.Run(inReal := REAL#1.0001,inDint := DINT#1); IF ActivateManualControl THEN MyComponent.ActivateManualControl(); END_IF; END_METHOD How to extend IxContext class USING ix.core CLASS PUBLIC MyContext EXTENDS IxContext METHOD PROTECTED OVERRIDE Main // Here goes all your logic for given IxContext. END_METHOD END_CLASS Cyclical call of the IxContext logic (Main method) is ensured when IxContext Execute method is called. Execute method is public therefore accessible and visible to any part of the program that whishes to call it. How to start IxContext's execution PROGRAM MyProgram VAR _myContext : MyContext; END_VAR _myContext.Execute(); END_PROGRAM IxObject IxObject is the base class for any other classes of ix.framework. It provides access to the parent IxObject and the IxContext in which it was initialized. classDiagram class Object{ +Initialize(IIxContext context) +Initialize(IIxObject parent) } IxObject initialization within a IxContext CLASS PUBLIC MyContext EXTENDS ix.core.IxContext VAR _myObject : ix.core.IxObject; END_VAR METHOD PROTECTED OVERRIDE Main _myObject.Initialize(THIS); END_METHOD END_CLASS IxObject initialization within another IxObject CLASS PUBLIC MyParentObject EXTENDS ix.core.IxObject VAR _myChildObject : ix.core.IxObject; END_VAR METHOD PROTECTED OVERRIDE Main _myChildObject.Initialize(THIS); END_METHOD END_CLASS IxTask IxTask provides basic task execution. IxTask needs to be initialized to set the proper IxContext. IxTask initialization within a IxContext CLASS IxTaskExample EXTENDS IxContext VAR PUBLIC _myTask : IxTask; _myCounter : ULINT; END_VAR METHOD PUBLIC Initialize // Initialization of the context needs to be called first // It does not need to be called cyclically, just once _myTask.Initialize(THIS); END_METHOD END_CLASS There are two key methods for managing the IxTask: Invoke() fires the execution of the IxTask (can be called fire&forget or cyclically) Execute() method must be called cyclically. The method returns TRUE when the IxTask is required to run until enters Done state or terminates in error. For termination of the execution of the IxTask there are following methods: DoneWhen(Done_Condition) - terminates the execution of the IxTask and enters the Done state when the Done_Condition is TRUE. ThrowWhen(Error_Condition) - terminates the execution of the IxTask and enters the Error state when the Error_Condition is TRUE. Abort() - terminates the execution of the IxTask and enters the Ready state if the IxTask is in the Busy state, otherwise does nothing. To reset the IxTask from any state in any moment there is following method: Restore() acts as reset of the IxTask (sets the state into Ready state from any state of the IxTask). Moreover, there are seven more \"event-like\" methods that are called when a specific event occurs (see the chart below). flowchart TD classDef states fill:#80FF00,stroke:#0080FF,stroke-width:4px,color:#7F00FF,font-size:15px,font-weight:bold classDef actions fill:#ff8000,stroke:#0080ff,stroke-width:4px,color:#7F00FF,font-size:15px,font-weight:bold classDef events fill:#80FF00,stroke:#0080ff,stroke-width:4px,color:#7F00FF,font-size:15px,font-weight:bold s1((Ready)):::states s2((Kicking)):::states s3((Busy)):::states s4((Done)):::states s5((Error)):::states s6((Aborted)):::states a1(\"Invoke()#128258;\"):::actions a2(\"Execute()#128260;\"):::actions a3(\"DoneWhen(TRUE)#128258;\"):::actions a4(\"ThrowWhen(TRUE)#128258;\"):::actions a5(\"NOT Invoke() call for at<br>least two Context cycles#128260;\"):::actions a6(\"Restore()#128258;\"):::actions a7(\"Abort()#128258;\"):::actions a8(\"Resume()#128258;\"):::actions e1{{\"OnStart()#128258;\"}}:::events e2{{\"OnError()#128258;\"}}:::events e3{{\"WhileError()#128260;\"}}:::events e4{{\"OnDone()#128258;\"}}:::events e5{{\"OnAbort()#128258;\"}}:::events e6{{\"OnRestore()#128258;\"}}:::events subgraph legend[\" \"] direction LR s((State)):::states ac(\"Action #128260;:called<br>cyclically\"):::actions as(\"Action #128258;:single<br>or cyclical call \"):::actions ec{{\"Event #128260;:called<br>cyclically\"}}:::events es{{\"Event #128258;:triggered<br>once \"}}:::events end subgraph chart[\" \"] direction TB s1 s1-->a1 a1-->s2 s2-->a2 s3-->a3 s3-->a7 a7-->e5 a7-->s6 s6-->a8 a8-->s3 a3-->s4 s4---->a5 a5-->a1 a2--->s3 s3--->a4 a4-->s5 s5-->a6 a6-->e6 a2-->e1 a4-->e2 a4-->e3 a3-->e4 a6-->s1 end Example of using IxTask: CLASS IxTaskExample EXTENDS IxContext VAR PUBLIC _myTask : IxTask; _myCounter : ULINT; END_VAR METHOD PUBLIC Initialize // Initialization of the context needs to be called first // It does not need to be called cyclically, just once _myTask.Initialize(THIS); END_METHOD METHOD PROTECTED OVERRIDE Main // Cyclicall call of the Execute IF _myTask.Execute() THEN _myCounter := _myCounter + ULINT#1; _myTask.DoneWhen(_myCounter = ULINT#100); END_IF; END_METHOD END_CLASS The IxTask executes upon the Invoke method call. Invoke fires the execution of Execute logic upon the first call, and it does not need cyclical calling. _myTask.Invoke(); Invoke() method returns IIxTaskState with the following members: IsBusy indicates the execution started and is running. IsDone indicates the execution completed with success. HasError indicates the execution terminated with a failure. IsAborted indicates that the execution of the IxTask has been aborted. It should continue by calling the method Resume(). // Wait for IxTask to Complete IF _myTask.Invoke().IsDone() THEN ; //Do something END_IF; // ALTERNATIVELY _myTask.Invoke(); IF _myTask.IsDone() THEN ; //Do something ALTERNATIV END_IF; // Make sure that the IxTask is executing IF _myTask.Invoke().IsBusy() THEN ; //Do something END_IF; // Check for IxTask's error IF _myTask.Invoke().HasError() THEN ; //Do something END_IF; The IxTask can be started only from the Ready state by calling the Invoke() method in the same Context cycle as the Execute() method is called, regardless the order of the methods calls. After IxTask completion, the state of the IxTask will remain in Done, unless: 1.) IxTask's Restore method is called (IxTask changes it's state to Ready state). 2.) Invoke method is not called for two or more consecutive cycles of its context (that usually means the same as PLC cycle); successive call of Invoke will switch the task into the Ready state and immediately into the Kicking state. The IxTask may finish also in an Error state. In that case, the only possibility to get out of Error state is by calling the Restore() method. To implement any of the already mentioned \"event-like\" methods the new class that extends from the IxTask needs to be created. The required method with PROTECTED OVERRIDE access modifier needs to be created as well, and the custom logic needs to be placed in. These methods are: OnAbort() - executes once when the task is aborted. OnResume() - executes once when the task is resumed. OnDone() - executes once when the task reaches the Done state. OnError() - executes once when the task reaches the Error state. OnRestore() - executes once when the task is restored. OnStart() - executes once when the task starts (at the moment of transition from the Kicking state into the Busy state). WhileError() - executes repeatedly while the task is in Error state (and Execute() method is called). Example of implementing \"event-like\" methods: CLASS MyCommandTask Extends CommandTask VAR OnAbortCounter : ULINT; OnResumeCounter : ULINT; OnDoneCounter : ULINT; OnErrorCounter : ULINT; OnRestoreCounter : ULINT; OnStartCounter : ULINT; WhileErrorCounter : ULINT; END_VAR METHOD PROTECTED OVERRIDE OnAbort OnAbortCounter := OnAbortCounter + ULINT#1; END_METHOD METHOD PROTECTED OVERRIDE OnResume OnResumeCounter := OnResumeCounter + ULINT#1; END_METHOD METHOD PROTECTED OVERRIDE OnDone OnDoneCounter := OnDoneCounter + ULINT#1; END_METHOD METHOD PROTECTED OVERRIDE OnError OnErrorCounter := OnErrorCounter + ULINT#1; END_METHOD METHOD PROTECTED OVERRIDE OnRestore OnRestoreCounter := OnRestoreCounter + ULINT#1; END_METHOD METHOD PROTECTED OVERRIDE OnStart OnStartCounter := OnStartCounter + ULINT#1; END_METHOD METHOD PROTECTED OVERRIDE WhileError WhileErrorCounter := WhileErrorCounter + ULINT#1; END_METHOD END_CLASS Step IxStep is an extension class of the IxTask and provides the basics for the coordinated controlled execution of the task in the desired order based on the coordination mechanism used. IxStep contains the Execute() method so as its base class overloaded and extended by following parameters: coord (mandatory): instance of the coordination controlling the execution of the IxStep. Enable (optional): if this value is FALSE, IxStep body is not executed and the current order of the execution is incremented. Description (optional): IxStep description text describing the action the IxStep is providing. IxStep class contains following public members: Order: Order of the IxStep in the coordination. This value can be set by calling the method SetSteoOrder() and read by the method GetStepOrder(). StepDescription: IxStep description text describing the action the IxStep is providing. This value can be set by calling the Execute() method with Description parameter. IsActive: if TRUE, the IxStep is currently executing, or is in the order of the execution, otherwise FALSE. This value can be set by calling the method SetIsActive() and read by the method GetIsActive(). IsEnabled: if FALSE, IxStep body is not executed and the current order of the execution is incremented. This value can be set by calling the method SetIsEnabled() or calling the Execute() method with Enable parameter and read by the method GetIsEnabled(). IxSequencer IxSequencer is an IxCordinator class provides triggering the IxStep-s inside the sequence in the order they are written. IxSequencer extends from IxTask so it also has to be initialized by calling its Initialize() method and started using its Invoke() method. IxSequencer contains following methods: Open(): this method must be called cyclically before any logic. It provides some configuration mechanism that ensures that the steps are going to be executed in the order, they are written. During the very first call of the sequence, no step is executed as the IxSequencer is in the configuring state. From the second context cycle after the IxSequencer has been invoked the IxSequencer change its state to running and starts the execution from the first step upto the last one. When IxSequencer is in running state, order of the step cannot be changed. MoveNext(): Terminates the currently executed step and moves the IxSequencer's pointer to the next step in order of execution. RequestStep(): Terminates the currently executed step and set the IxSequencer's pointer to the order of the RequestedStep. When the order of the RequestedStep is higher than the order of the currently finished step (the requested step is \"after\" the current one) the requested step is started in the same context cycle. When the order of the RequestedStep is lower than the order of the currently finished step (the requested step is \"before\" the current one) the requested step is started in the next context cycle. CompleteSequence(): Terminates the currently executed step, completes (finishes) the execution of this IxSequencer and set the coordination state to Idle. If the SequenceMode of the IxSequencer is set to Cyclic, following Open() method call in the next context cycle switch it again into the configuring state, reasign the order of the individual steps (even if the orders have been changed) and subsequently set IxSequencer back into the running state. If the SequenceMode of the IxSequencer is set to RunOnce, terminates also execution of the IxSequencer itself. `GetCoordinatorState()': Returns the current state of the IxSequencer. Idle Configuring: assigning the orders to the steps, no step is executed. Running: orders to the steps are already assigned, step is executed. SetSteppingMode(): Sets the stepping mode of the IxSequencer. Following values are possible. None: StepByStep: if this mode is choosen, each step needs to be started by the invocation of the StepIn commmand. Continous: if this mode is choosen (default), each step is started automaticcaly after the previous one has been completed. GetSteppingMode(): Gets the current stepping mode of the IxSequencer. SetSequenceMode(): Sets the sequence mode of the IxSequencer. Following values are possible. None: RunOnce: if this mode is choosen, after calling the method CompleteSequence() the execution of the sequence is terminated. Cyclic: if this mode is choosen (default), after calling the method CompleteSequence() the execution of the sequence is \"reordered\" and started from beginning. GetSequenceMode(): Gets the current sequence mode of the IxSequencer. GetNumberOfConfiguredSteps(): Gets the number of the configured steps in the sequence. CLASS IxSequencerExample EXTENDS IxContext VAR PUBLIC _mySequencer : IxSequencer; _step_1 : IxStep; _step_2 : IxStep; _step_3 : IxStep; _myCounter : ULINT; END_VAR METHOD PUBLIC Initialize // Initialization of the context needs to be called first // It does not need to be called cyclically, just once _mySequencer.Initialize(THIS); _step_1.Initialize(THIS); _step_2.Initialize(THIS); _step_3.Initialize(THIS); END_METHOD METHOD PROTECTED OVERRIDE Main _mySequencer.Open(); // Example of the most simple use of Execute() method of step class, only with IxCoordinator defined. IF _step_1.Execute(_mySequencer) THEN // do something _myCounter := _myCounter + ULINT#1; IF (_myCounter MOD ULINT#5) = ULINT#0 THEN // continue to the next step of the sequence _mySequencer.MoveNext(); END_IF; END_IF; // Example of use of the Execute() method of step class with Enable condition. // This step is going to be executed just in the first run of the sequence, // as during the second run, the Enable parameter will have the value of FALSE. IF _step_2.Execute(coord := _mySequencer, Enable := _myCounter <= ULINT#20) THEN _myCounter := _myCounter + ULINT#1; IF _myCounter = ULINT#20 THEN // Jumping to step 1. As it is jumping backwards, the execution of step 1 // is going to be started in the next context cycle. _mySequencer.RequestStep(_step_1); END_IF; END_IF; // Example of use of the Execute() method of step class with all three parameters defined. IF _step_3.Execute(coord := _mySequencer, Enable := TRUE, Description := 'This is a description of the step 3' ) THEN _myCounter := _myCounter + ULINT#1; IF (_myCounter MOD ULINT#7) = ULINT#0 THEN // Finalize the sequence and initiate the execution from the first step. _mySequencer.CompleteSequence(); END_IF; END_IF; END_METHOD END_CLASS"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "| System.Dynamic.ExpandoObject",
    "keywords": ""
  },
  "index.html": {
    "href": "index.html",
    "title": "| System.Dynamic.ExpandoObject",
    "keywords": ""
  }
}